{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/share/share.jsx\";\nimport React, { Component } from 'react';\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport { FacebookShareButton, TwitterShareButton, FacebookIcon, TwitterIcon } from 'react-share';\n\nclass Share extends Component {\n  render() {\n    const modalBg = {\n      modal: {\n        background: \"white \",\n        borderRadius: \"10%\",\n        maxHeight: \"43%\",\n        height: \"100%\",\n        maxWidth: \"30%\",\n        width: \"100%\"\n      }\n    };\n    let url = \"\".concat(process.env.REACT_APP_CLIENT_SERVER, \"/blog/\").concat(this.props.pageID);\n    let shareWindow = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-rounded\",\n      type: \"text\",\n      defaultValue: url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(FacebookShareButton, {\n      quote: this.props.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(FacebookIcon, {\n      size: \"2.5rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(TwitterShareButton, {\n      quote: this.props.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(TwitterIcon, {\n      size: \"2.5rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n    return React.createElement(Modal, {\n      className: \"model-share\",\n      open: this.props.shareOpen,\n      onClose: this.props.onSwitchShareModal,\n      styles: modalBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, shareWindow);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    shareOpen: state.persistedReducer.shareOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSwitchShareModal: () => dispatch({\n      type: \"SHAREMODAL\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Share);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/share/share.jsx"],"names":["React","Component","Modal","connect","FacebookShareButton","TwitterShareButton","FacebookIcon","TwitterIcon","Share","render","modalBg","modal","background","borderRadius","maxHeight","height","maxWidth","width","url","process","env","REACT_APP_CLIENT_SERVER","props","pageID","shareWindow","title","shareOpen","onSwitchShareModal","mapStateToProps","state","persistedReducer","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,mBADF,EAEEC,kBAFF,EAGEC,YAHF,EAIEC,WAJF,QAKO,aALP;;AAOA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAC5BQ,EAAAA,MAAM,GAAG;AAEP,UAAMC,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,QADP;AAELC,QAAAA,YAAY,EAAE,KAFT;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,MAAM,EAAE,MAJH;AAKLC,QAAAA,QAAQ,EAAE,KALL;AAMLC,QAAAA,KAAK,EAAE;AANF;AADO,KAAhB;AAWA,QAAIC,GAAG,aAAMC,OAAO,CAACC,GAAR,CAAYC,uBAAlB,mBAAkD,KAAKC,KAAL,CAAWC,MAA7D,CAAP;AAEA,QAAIC,WAAW,GACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,YAAY,EAAEN,GAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,mBAAD;AACE,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWG,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CANF,EAWE,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAXF,CADF;AAoBA,WACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,aADZ;AAEE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,SAFnB;AAGE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,kBAHtB;AAIE,MAAA,MAAM,EAAEjB,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGc,WANH,CADF;AAUD;;AA9C2B;;AAiD9B,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,SAAS,EAAEG,KAAK,CAACC,gBAAN,CAAuBJ;AAD7B,GAAP;AAGD,CAJD;;AAMA,MAAMK,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLL,IAAAA,kBAAkB,EAAE,MAAMK,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD;AAD7B,GAAP;AAGD,CAJD;;AAMA,eAAe9B,OAAO,CACpByB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbvB,KAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport { \n  FacebookShareButton, \n  TwitterShareButton,\n  FacebookIcon,\n  TwitterIcon\n} from 'react-share';\n\nclass Share extends Component {\n  render() {\n\n    const modalBg = {\n      modal: {\n        background: \"white \",\n        borderRadius: \"10%\",\n        maxHeight: \"43%\",\n        height: \"100%\",\n        maxWidth: \"30%\",\n        width: \"100%\"\n      }\n    };\n\n    let url = `${process.env.REACT_APP_CLIENT_SERVER}/blog/${this.props.pageID}`\n\n    let shareWindow = (\n      <div>\n        <input \n          className=\"input is-rounded\"\n          type=\"text\"\n          defaultValue={url}\n        />\n        <FacebookShareButton\n          quote={this.props.title}\n        >\n          <FacebookIcon size=\"2.5rem\" />\n        </FacebookShareButton>\n        <TwitterShareButton\n          quote={this.props.title}\n        >\n          <TwitterIcon size=\"2.5rem\" />\n        </TwitterShareButton>\n      </div>\n    )\n\n    return (\n      <Modal\n        className=\"model-share\"\n        open={this.props.shareOpen}\n        onClose={this.props.onSwitchShareModal}\n        styles={modalBg}\n      >\n        {shareWindow}\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    shareOpen: state.persistedReducer.shareOpen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSwitchShareModal: () => dispatch({ type: \"SHAREMODAL\" })\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Share);\n\n"]},"metadata":{},"sourceType":"module"}