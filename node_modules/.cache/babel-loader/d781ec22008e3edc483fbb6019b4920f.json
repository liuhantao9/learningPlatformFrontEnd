{"ast":null,"code":"import _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx\";\nimport axios from \"../../axios/axios-blogs\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport withHandler from \"../UI/ErrorHandler/ErrorHandler\";\nimport WarningWindow from \"./WarningWindow\";\nimport { openDisplay, closeDisplay, addTag, removeTag, handlePosted } from \"../../actions/tagActions\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showUpdateTime = () => {\n      const currTime = new Date().toTimeString();\n      this.setState({\n        updateTime: currTime\n      });\n    };\n\n    this.getContent = () => {\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(token),\n          withCredentials: true\n        }\n      };\n      axios.get(\"/api/users/draft/\".concat(this.props.userID), headers).then(res => {\n        this.setState({\n          content: res.data.content\n        });\n      });\n    };\n\n    this.handleFinalPost = async () => {\n      const post = {\n        author: this.props.username,\n        title: this.state.title,\n        content: this.state.content,\n        tags: this.props.tagReducer.tags || [],\n        userId: this.props.userID,\n        avatar: this.props.avatar || \"https://bulma.io/images/placeholders/128x128.png\"\n      };\n      this.setState({\n        loading: true\n      });\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(token),\n          withCredentials: true\n        }\n      };\n      axios.post(\"/api/posts\", post, headers).then(res => {\n        axios.post(\"/api/users/myPosts/\".concat(this.props.userID), {\n          postID: res.data._id\n        }, headers).then(res => {\n          //cannot divide the call into two setState calls\n          this.setState({\n            loading: false,\n            posted: true\n          });\n        }).catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false\n          });\n        });\n        var updatedMyPosts = [...this.props.myPosts];\n        updatedMyPosts.push(res.data._id);\n        var updatedMyPostsDetail = [...this.props.myPostsDetail];\n        updatedMyPostsDetail.push(res.data);\n        this.props.handleUpdatedMyPosts(updatedMyPostsDetail, updatedMyPosts);\n      }).catch(err => {\n        this.setState({\n          loading: false\n        });\n      });\n      this.props.handlePosted();\n    };\n\n    this.handlePostCheck = e => {\n      e.preventDefault();\n      const title = this.state.title.trim();\n\n      if (this.props.tagReducer.tags.length === 0 || this.props.tagReducer.tags.length >= 4) {\n        this.setState(_objectSpread({}, this.state, {\n          tagError: true\n        }));\n      } else if (title.length < 8 || title.length > 50) {\n        this.setState(_objectSpread({}, this.state, {\n          titleError: true\n        }));\n      } else {\n        this.handleFinalPost();\n      }\n    };\n\n    this.updateContent = value => {\n      this.setState({\n        content: value\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        warning: true\n      });\n    };\n\n    this.handlePostCancel = () => {\n      this.props.handlePosted();\n    };\n\n    this.onCloseModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        warning: false,\n        tagError: false,\n        titleError: false\n      }));\n    };\n\n    this.handleTitle = e => {\n      e.preventDefault();\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\",\n      tagError: false,\n      titleError: false,\n      updateTime: \"\"\n    };\n    this.handlePostCheck = this.handlePostCheck.bind(this);\n    this.handleFinalPost = this.handleFinalPost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n    this.getContent = this.getContent.bind(this);\n    this.showUpdateTime = this.showUpdateTime.bind(this);\n  }\n\n  successPosted() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-check-circle \",\n      style: {\n        color: \"green\",\n        fontSize: \"100px\",\n        margin: \"auto auto \"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginTop: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Successfully Posted\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"button is-success\",\n      style: {\n        marginTop: \"10%\",\n        width: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Main Page\"));\n  }\n\n  render() {\n    let inputTags = this.props.tagReducer.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      style: styles.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, tag, React.createElement(\"button\", {\n      onClick: () => this.props.removeTag(tag),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"(x)\")));\n    let selection = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    });\n\n    if (this.props.tagReducer.tags.length === 0) {\n      selection = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }));\n    } else {\n      selection = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, inputTags, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }));\n    }\n\n    const modalBg = {\n      modal: {\n        background: \"white \",\n        borderRadius: \"3%\",\n        maxHeight: \"100%\",\n        maxWidth: this.state.modalMaxWidth\n      }\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"25%\",\n        paddingBottom: \"25%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })) : this.state.posted ? this.successPosted() : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"div\", {\n      className: \"level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-rounded\",\n      type: \"text\",\n      required: true,\n      placeholder: \"Title...\",\n      value: this.state.title,\n      onChange: this.handleTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(DropDown, {\n      lists: [\"Get Saved Draft\"],\n      funcs: [this.getContent],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      updateContent: this.updateContent,\n      value: this.state.content,\n      userID: this.props.userID,\n      showUpdateTime: this.showUpdateTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        fontSize: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.state.updateTime ? \"Saved at \".concat(this.state.updateTime) : \"\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), selection, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Tags\"), React.createElement(TagSearch, {\n      hitsDisplay: this.props.tagReducer.hitsDisplay,\n      tags: this.props.tagReducer.tags,\n      handleSelect: tag => this.props.addTag(tag),\n      handleRemoveItem: tag => this.props.removeTag(tag),\n      openDisplay: () => this.props.openDisplay(),\n      closeDisplay: () => this.props.closeDisplay(),\n      styles: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"level\",\n      style: {\n        marginBottom: \"2rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button is-primary level-item\",\n      style: {\n        marginRight: \"0.5rem\"\n      },\n      onClick: this.handlePostCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Post\"), React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      type: \"button\",\n      style: {\n        marginLeft: \"0.5rem\"\n      },\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Cancel\")))), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.warning,\n      onClose: this.onCloseModal,\n      center: true,\n      styles: modalBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(WarningWindow, {\n      message: \"Your Post Will Not Be Saved\",\n      onCloseModal: this.onCloseModal,\n      buttonType: \"ToFrontPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.tagError,\n      onClose: this.onCloseModal,\n      blockScroll: false,\n      center: true,\n      styles: modalBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(WarningWindow, {\n      message: \"Please limit the number of the input tags from 1 to 3\",\n      onCloseModal: this.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.titleError,\n      onClose: this.onCloseModal,\n      blockScroll: false,\n      center: true,\n      styles: modalBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(WarningWindow, {\n      message: \"The title should have at least 8 characters and at most 50 characters\",\n      onCloseModal: this.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.persistedReducer.username,\n    tagReducer: state.tagReducer,\n    userID: state.persistedReducer.userID,\n    myPosts: state.persistedReducer.myPosts,\n    myPostsDetail: state.persistedReducer.myPostsDetail,\n    avatar: state.persistedReducer.avatar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDisplay: () => {\n      dispatch(openDisplay());\n    },\n    closeDisplay: () => {\n      dispatch(closeDisplay());\n    },\n    addTag: tag => {\n      dispatch(addTag(tag));\n    },\n    removeTag: tag => {\n      dispatch(removeTag(tag));\n    },\n    handlePosted: () => {\n      dispatch(handlePosted());\n    },\n    handleUpdatedMyPosts: (updatedMyPostsDetail, updatedMyPosts) => dispatch({\n      type: \"USERMYPOSTSUPDATED\",\n      myPostsDetail: updatedMyPostsDetail,\n      myPosts: updatedMyPosts\n    })\n  };\n};\n\nconst styles = {\n  container: {\n    border: \"1px solid #ddd\",\n    padding: \"5px\",\n    borderRadius: \"5px\"\n  },\n  hitStyle: {\n    margin: \"3% 1% 0 1%\"\n  },\n  input: {\n    outline: \"none\",\n    border: \"none\",\n    fontSize: \"14px\",\n    fontFamily: \"Helvetica, sans-serif\"\n  },\n  items: {\n    display: \"inline-block\",\n    padding: \"2px\",\n    border: \"1px solid blue\",\n    fontFamily: \"Helvetica, sans-serif\",\n    borderRadius: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n  hit: {\n    width: \"30%\",\n    height: \"10%\",\n    float: \"left\",\n    marginBottom: \"10px\",\n    borderBottom: \"solid 1px #eee\",\n    margin: \"0.5%\",\n    border: \"solid 1px #eee\",\n    boxShadow: \"0 0 3px #f6f6f6\",\n    position: \"relative\",\n    fontSize: \"14px\"\n  }\n};\nexport default withHandler(connect(mapStateToProps, mapDispatchToProps)(Publish), axios);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx"],"names":["axios","React","Component","Editor","Link","DropDown","Spinner","Modal","connect","TagSearch","withHandler","WarningWindow","openDisplay","closeDisplay","addTag","removeTag","handlePosted","Publish","constructor","props","showUpdateTime","currTime","Date","toTimeString","setState","updateTime","getContent","token","localStorage","getItem","headers","Authorization","withCredentials","get","userID","then","res","content","data","handleFinalPost","post","author","username","title","state","tags","tagReducer","userId","avatar","loading","postID","_id","posted","catch","err","console","log","updatedMyPosts","myPosts","push","updatedMyPostsDetail","myPostsDetail","handleUpdatedMyPosts","handlePostCheck","e","preventDefault","trim","length","tagError","titleError","updateContent","value","handleCancel","warning","handlePostCancel","onCloseModal","handleTitle","target","bind","successPosted","display","flexDirection","marginTop","color","fontSize","margin","width","render","inputTags","map","tag","styles","items","selection","modalBg","modal","background","borderRadius","maxHeight","maxWidth","modalMaxWidth","textAlign","paddingTop","paddingBottom","hitsDisplay","marginBottom","marginRight","marginLeft","mapStateToProps","persistedReducer","mapDispatchToProps","dispatch","type","container","border","padding","hitStyle","input","outline","fontFamily","cursor","hit","height","float","borderBottom","boxShadow","position"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,YALF,QAMO,0BANP;;AAQA,MAAMC,OAAN,SAAsBf,SAAtB,CAAgC;AAC9BgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBnBC,cAtBmB,GAsBF,MAAM;AACrB,YAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,YAAX,EAAjB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEJ;AAAd,OAAd;AACD,KAzBkB;;AAAA,SA2BnBK,UA3BmB,GA2BN,MAAM;AACjB,YAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,YAAMC,OAAO,GAAG;AACdA,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,kBAAWJ,KAAX,CAFN;AAGPK,UAAAA,eAAe,EAAE;AAHV;AADK,OAAhB;AAOAhC,MAAAA,KAAK,CAACiC,GAAN,4BAA8B,KAAKd,KAAL,CAAWe,MAAzC,GAAmDJ,OAAnD,EAA4DK,IAA5D,CAAiEC,GAAG,IAAI;AACtE,aAAKZ,QAAL,CAAc;AAAEa,UAAAA,OAAO,EAAED,GAAG,CAACE,IAAJ,CAASD;AAApB,SAAd;AACD,OAFD;AAGD,KAvCkB;;AAAA,SAyCnBE,eAzCmB,GAyCD,YAAY;AAC5B,YAAMC,IAAI,GAAG;AACXC,QAAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWuB,QADR;AAEXC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAFP;AAGXN,QAAAA,OAAO,EAAE,KAAKO,KAAL,CAAWP,OAHT;AAIXQ,QAAAA,IAAI,EAAE,KAAK1B,KAAL,CAAW2B,UAAX,CAAsBD,IAAtB,IAA8B,EAJzB;AAKXE,QAAAA,MAAM,EAAE,KAAK5B,KAAL,CAAWe,MALR;AAMXc,QAAAA,MAAM,EACJ,KAAK7B,KAAL,CAAW6B,MAAX,IAAqB;AAPZ,OAAb;AASA,WAAKxB,QAAL,CAAc;AAAEyB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMtB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,YAAMC,OAAO,GAAG;AACdA,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,kBAAWJ,KAAX,CAFN;AAGPK,UAAAA,eAAe,EAAE;AAHV;AADK,OAAhB;AAOAhC,MAAAA,KAAK,CACFwC,IADH,CACQ,YADR,EACsBA,IADtB,EAC4BV,OAD5B,EAEGK,IAFH,CAEQC,GAAG,IAAI;AACXpC,QAAAA,KAAK,CACFwC,IADH,8BAE0B,KAAKrB,KAAL,CAAWe,MAFrC,GAGI;AAAEgB,UAAAA,MAAM,EAAEd,GAAG,CAACE,IAAJ,CAASa;AAAnB,SAHJ,EAIIrB,OAJJ,EAMGK,IANH,CAMQC,GAAG,IAAI;AACX;AACA,eAAKZ,QAAL,CAAc;AAAEyB,YAAAA,OAAO,EAAE,KAAX;AAAkBG,YAAAA,MAAM,EAAE;AAA1B,WAAd;AACD,SATH,EAUGC,KAVH,CAUSC,GAAG,IAAI;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAK9B,QAAL,CAAc;AAAEyB,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAbH;AAcA,YAAIQ,cAAc,GAAG,CAAC,GAAG,KAAKtC,KAAL,CAAWuC,OAAf,CAArB;AACAD,QAAAA,cAAc,CAACE,IAAf,CAAoBvB,GAAG,CAACE,IAAJ,CAASa,GAA7B;AACA,YAAIS,oBAAoB,GAAG,CAAC,GAAG,KAAKzC,KAAL,CAAW0C,aAAf,CAA3B;AACAD,QAAAA,oBAAoB,CAACD,IAArB,CAA0BvB,GAAG,CAACE,IAA9B;AACA,aAAKnB,KAAL,CAAW2C,oBAAX,CAAgCF,oBAAhC,EAAsDH,cAAtD;AACD,OAtBH,EAuBGJ,KAvBH,CAuBSC,GAAG,IAAI;AACZ,aAAK9B,QAAL,CAAc;AAAEyB,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAzBH;AA2BA,WAAK9B,KAAL,CAAWH,YAAX;AACD,KAxFkB;;AAAA,SA0FnB+C,eA1FmB,GA0FDC,CAAC,IAAI;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMtB,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiBuB,IAAjB,EAAd;;AACA,UACE,KAAK/C,KAAL,CAAW2B,UAAX,CAAsBD,IAAtB,CAA2BsB,MAA3B,KAAsC,CAAtC,IACA,KAAKhD,KAAL,CAAW2B,UAAX,CAAsBD,IAAtB,CAA2BsB,MAA3B,IAAqC,CAFvC,EAGE;AACA,aAAK3C,QAAL,mBACK,KAAKoB,KADV;AAEEwB,UAAAA,QAAQ,EAAE;AAFZ;AAID,OARD,MAQO,IAAIzB,KAAK,CAACwB,MAAN,GAAe,CAAf,IAAoBxB,KAAK,CAACwB,MAAN,GAAe,EAAvC,EAA2C;AAChD,aAAK3C,QAAL,mBACK,KAAKoB,KADV;AAEEyB,UAAAA,UAAU,EAAE;AAFd;AAID,OALM,MAKA;AACL,aAAK9B,eAAL;AACD;AACF,KA7GkB;;AAAA,SA+GnB+B,aA/GmB,GA+GHC,KAAK,IAAI;AACvB,WAAK/C,QAAL,CAAc;AAAEa,QAAAA,OAAO,EAAEkC;AAAX,OAAd;AACD,KAjHkB;;AAAA,SAmHnBC,YAnHmB,GAmHJ,MAAM;AACnB,WAAKhD,QAAL,CAAc;AAAEiD,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KArHkB;;AAAA,SAuHnBC,gBAvHmB,GAuHA,MAAM;AACvB,WAAKvD,KAAL,CAAWH,YAAX;AACD,KAzHkB;;AAAA,SA2HnB2D,YA3HmB,GA2HJ,MAAM;AACnB,WAAKnD,QAAL,mBACK,KAAKoB,KADV;AAEE6B,QAAAA,OAAO,EAAE,KAFX;AAGEL,QAAAA,QAAQ,EAAE,KAHZ;AAIEC,QAAAA,UAAU,EAAE;AAJd;AAMD,KAlIkB;;AAAA,SAoInBO,WApImB,GAoILZ,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKzC,QAAL,CAAc;AAAEmB,QAAAA,KAAK,EAAEqB,CAAC,CAACa,MAAF,CAASN;AAAlB,OAAd;AACD,KAvIkB;;AAGjB,SAAK3B,KAAL,GAAa;AACX6B,MAAAA,OAAO,EAAE,KADE;AAEXxB,MAAAA,OAAO,EAAE,KAFE;AAGXG,MAAAA,MAAM,EAAE,KAHG;AAIXf,MAAAA,OAAO,EAAE,EAJE;AAKXM,MAAAA,KAAK,EAAE,EALI;AAMXyB,MAAAA,QAAQ,EAAE,KANC;AAOXC,MAAAA,UAAU,EAAE,KAPD;AAQX5C,MAAAA,UAAU,EAAE;AARD,KAAb;AAWA,SAAKsC,eAAL,GAAuB,KAAKA,eAAL,CAAqBe,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKvC,eAAL,GAAuB,KAAKA,eAAL,CAAqBuC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKR,aAAL,GAAqB,KAAKA,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKpD,UAAL,GAAkB,KAAKA,UAAL,CAAgBoD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAK1D,cAAL,GAAsB,KAAKA,cAAL,CAAoB0D,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAqHDC,EAAAA,aAAa,GAAG;AACd,WACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,SAAS,EAAE;AAHN,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AACE,MAAA,SAAS,EAAC,sBADZ;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,QAAQ,EAAE,OAFL;AAGLC,QAAAA,MAAM,EAAE;AAHH,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAeE;AACE,MAAA,KAAK,EAAE;AACLH,QAAAA,SAAS,EAAE,KADN;AAELG,QAAAA,MAAM,EAAE;AAFH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAfF,EAuBE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAC,GADL;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,KAAK,EAAE;AACLH,QAAAA,SAAS,EAAE,KADN;AAELI,QAAAA,KAAK,EAAE,KAFF;AAGLD,QAAAA,MAAM,EAAE;AAHH,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAvBF,CADF;AAqCD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,KAAKrE,KAAL,CAAW2B,UAAX,CAAsBD,IAAtB,CAA2B4C,GAA3B,CAA+BC,GAAG,IAChD;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAc,MAAA,KAAK,EAAEC,MAAM,CAACC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,GADH,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKvE,KAAL,CAAWJ,SAAX,CAAqB2E,GAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CADc,CAAhB;AAOA,QAAIG,SAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;;AAEA,QAAI,KAAK1E,KAAL,CAAW2B,UAAX,CAAsBD,IAAtB,CAA2BsB,MAA3B,KAAsC,CAA1C,EAA6C;AAC3C0B,MAAAA,SAAS,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,MAMO;AACLA,MAAAA,SAAS,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,SADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;AAED,UAAMM,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,QADP;AAELC,QAAAA,YAAY,EAAE,IAFT;AAGLC,QAAAA,SAAS,EAAE,MAHN;AAILC,QAAAA,QAAQ,EAAE,KAAKvD,KAAL,CAAWwD;AAJhB;AADO,KAAhB;AASA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEd,QAAAA,KAAK,EAAE,KAAT;AAAgBD,QAAAA,MAAM,EAAE;AAAxB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzC,KAAL,CAAWK,OAAX,GACC;AACE,MAAA,KAAK,EAAE;AACLoD,QAAAA,SAAS,EAAE,QADN;AAELC,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,aAAa,EAAE;AAHV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADD,GAUG,KAAK3D,KAAL,CAAWQ,MAAX,GACF,KAAK2B,aAAL,EADE,GAGF,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,WAAW,EAAC,UAJd;AAKE,MAAA,KAAK,EAAE,KAAKnC,KAAL,CAAWD,KALpB;AAME,MAAA,QAAQ,EAAE,KAAKiC,WANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,oBAAC,QAAD;AACE,MAAA,KAAK,EAAE,CAAC,iBAAD,CADT;AAEE,MAAA,KAAK,EAAE,CAAC,KAAKlD,UAAN,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAFF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE,KAAK4C,aADtB;AAEE,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWP,OAFpB;AAGE,MAAA,MAAM,EAAE,KAAKlB,KAAL,CAAWe,MAHrB;AAIE,MAAA,cAAc,EAAE,KAAKd,cAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAM,MAAA,KAAK,EAAE;AAAEgE,QAAAA,QAAQ,EAAE;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKxC,KAAL,CAAWnB,UAAX,sBACe,KAAKmB,KAAL,CAAWnB,UAD1B,IAEG,EAHN,CAPF,CAjBF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BF,EA+BGoE,SA/BH,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCF,EAkCE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,KAAK1E,KAAL,CAAW2B,UAAX,CAAsB0D,WADrC;AAEE,MAAA,IAAI,EAAE,KAAKrF,KAAL,CAAW2B,UAAX,CAAsBD,IAF9B;AAGE,MAAA,YAAY,EAAE6C,GAAG,IAAI,KAAKvE,KAAL,CAAWL,MAAX,CAAkB4E,GAAlB,CAHvB;AAIE,MAAA,gBAAgB,EAAEA,GAAG,IAAI,KAAKvE,KAAL,CAAWJ,SAAX,CAAqB2E,GAArB,CAJ3B;AAKE,MAAA,WAAW,EAAE,MAAM,KAAKvE,KAAL,CAAWP,WAAX,EALrB;AAME,MAAA,YAAY,EAAE,MAAM,KAAKO,KAAL,CAAWN,YAAX,EANtB;AAOE,MAAA,MAAM,EAAE8E,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlCF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CF,EA4CE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAAEc,QAAAA,YAAY,EAAE;AAAhB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,8BAFZ;AAGE,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAHT;AAIE,MAAA,OAAO,EAAE,KAAK3C,eAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUE;AACE,MAAA,SAAS,EAAC,8BADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAE;AAAE4C,QAAAA,UAAU,EAAE;AAAd,OAHT;AAIE,MAAA,OAAO,EAAE,KAAKnC,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CA5CF,CAdJ,CADF,EAiFE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAE,KAAK5B,KAAL,CAAW6B,OAFnB;AAGE,MAAA,OAAO,EAAE,KAAKE,YAHhB;AAIE,MAAA,MAAM,MAJR;AAKE,MAAA,MAAM,EAAEmB,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,6BADV;AAEE,MAAA,YAAY,EAAE,KAAKnB,YAFrB;AAGE,MAAA,UAAU,EAAC,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAjFF,EA8FE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAE,KAAK/B,KAAL,CAAWwB,QAFnB;AAGE,MAAA,OAAO,EAAE,KAAKO,YAHhB;AAIE,MAAA,WAAW,EAAE,KAJf;AAKE,MAAA,MAAM,MALR;AAME,MAAA,MAAM,EAAEmB,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,uDADV;AAEE,MAAA,YAAY,EAAE,KAAKnB,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CA9FF,EA2GE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAE,KAAK/B,KAAL,CAAWyB,UAFnB;AAGE,MAAA,OAAO,EAAE,KAAKM,YAHhB;AAIE,MAAA,WAAW,EAAE,KAJf;AAKE,MAAA,MAAM,MALR;AAME,MAAA,MAAM,EAAEmB,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,uEADV;AAEE,MAAA,YAAY,EAAE,KAAKnB,YAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CA3GF,CADF;AA2HD;;AA/U6B;;AAkVhC,MAAMiC,eAAe,GAAGhE,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,QAAQ,EAAEE,KAAK,CAACiE,gBAAN,CAAuBnE,QAD5B;AAELI,IAAAA,UAAU,EAAEF,KAAK,CAACE,UAFb;AAGLZ,IAAAA,MAAM,EAAEU,KAAK,CAACiE,gBAAN,CAAuB3E,MAH1B;AAILwB,IAAAA,OAAO,EAAEd,KAAK,CAACiE,gBAAN,CAAuBnD,OAJ3B;AAKLG,IAAAA,aAAa,EAAEjB,KAAK,CAACiE,gBAAN,CAAuBhD,aALjC;AAMLb,IAAAA,MAAM,EAAEJ,KAAK,CAACiE,gBAAN,CAAuB7D;AAN1B,GAAP;AAQD,CATD;;AAWA,MAAM8D,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnG,IAAAA,WAAW,EAAE,MAAM;AACjBmG,MAAAA,QAAQ,CAACnG,WAAW,EAAZ,CAAR;AACD,KAHI;AAILC,IAAAA,YAAY,EAAE,MAAM;AAClBkG,MAAAA,QAAQ,CAAClG,YAAY,EAAb,CAAR;AACD,KANI;AAOLC,IAAAA,MAAM,EAAE4E,GAAG,IAAI;AACbqB,MAAAA,QAAQ,CAACjG,MAAM,CAAC4E,GAAD,CAAP,CAAR;AACD,KATI;AAUL3E,IAAAA,SAAS,EAAE2E,GAAG,IAAI;AAChBqB,MAAAA,QAAQ,CAAChG,SAAS,CAAC2E,GAAD,CAAV,CAAR;AACD,KAZI;AAaL1E,IAAAA,YAAY,EAAE,MAAM;AAClB+F,MAAAA,QAAQ,CAAC/F,YAAY,EAAb,CAAR;AACD,KAfI;AAgBL8C,IAAAA,oBAAoB,EAAE,CAACF,oBAAD,EAAuBH,cAAvB,KACpBsD,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,oBADC;AAEPnD,MAAAA,aAAa,EAAED,oBAFR;AAGPF,MAAAA,OAAO,EAAED;AAHF,KAAD;AAjBL,GAAP;AAuBD,CAxBD;;AA0BA,MAAMkC,MAAM,GAAG;AACbsB,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE,gBADC;AAETC,IAAAA,OAAO,EAAE,KAFA;AAGTlB,IAAAA,YAAY,EAAE;AAHL,GADE;AAObmB,EAAAA,QAAQ,EAAE;AACR/B,IAAAA,MAAM,EAAE;AADA,GAPG;AAWbgC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELJ,IAAAA,MAAM,EAAE,MAFH;AAGL9B,IAAAA,QAAQ,EAAE,MAHL;AAILmC,IAAAA,UAAU,EAAE;AAJP,GAXM;AAkBb3B,EAAAA,KAAK,EAAE;AACLZ,IAAAA,OAAO,EAAE,cADJ;AAELmC,IAAAA,OAAO,EAAE,KAFJ;AAGLD,IAAAA,MAAM,EAAE,gBAHH;AAILK,IAAAA,UAAU,EAAE,uBAJP;AAKLtB,IAAAA,YAAY,EAAE,KALT;AAMLS,IAAAA,WAAW,EAAE,KANR;AAOLc,IAAAA,MAAM,EAAE;AAPH,GAlBM;AA4BbC,EAAAA,GAAG,EAAE;AACHnC,IAAAA,KAAK,EAAE,KADJ;AAEHoC,IAAAA,MAAM,EAAE,KAFL;AAGHC,IAAAA,KAAK,EAAE,MAHJ;AAIHlB,IAAAA,YAAY,EAAE,MAJX;AAKHmB,IAAAA,YAAY,EAAE,gBALX;AAMHvC,IAAAA,MAAM,EAAE,MANL;AAOH6B,IAAAA,MAAM,EAAE,gBAPL;AAQHW,IAAAA,SAAS,EAAE,iBARR;AASHC,IAAAA,QAAQ,EAAE,UATP;AAUH1C,IAAAA,QAAQ,EAAE;AAVP;AA5BQ,CAAf;AA0CA,eAAe1E,WAAW,CACxBF,OAAO,CACLoG,eADK,EAELE,kBAFK,CAAP,CAGE7F,OAHF,CADwB,EAKxBjB,KALwB,CAA1B","sourcesContent":["import axios from \"../../axios/axios-blogs\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport withHandler from \"../UI/ErrorHandler/ErrorHandler\";\nimport WarningWindow from \"./WarningWindow\";\nimport {\n  openDisplay,\n  closeDisplay,\n  addTag,\n  removeTag,\n  handlePosted\n} from \"../../actions/tagActions\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\",\n      tagError: false,\n      titleError: false,\n      updateTime: \"\"\n    };\n\n    this.handlePostCheck = this.handlePostCheck.bind(this);\n    this.handleFinalPost = this.handleFinalPost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n    this.getContent = this.getContent.bind(this);\n    this.showUpdateTime = this.showUpdateTime.bind(this);\n  }\n\n  showUpdateTime = () => {\n    const currTime = new Date().toTimeString();\n    this.setState({ updateTime: currTime });\n  };\n\n  getContent = () => {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n        withCredentials: true\n      }\n    };\n    axios.get(`/api/users/draft/${this.props.userID}`, headers).then(res => {\n      this.setState({ content: res.data.content });\n    });\n  };\n\n  handleFinalPost = async () => {\n    const post = {\n      author: this.props.username,\n      title: this.state.title,\n      content: this.state.content,\n      tags: this.props.tagReducer.tags || [],\n      userId: this.props.userID,\n      avatar:\n        this.props.avatar || \"https://bulma.io/images/placeholders/128x128.png\"\n    };\n    this.setState({ loading: true });\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n        withCredentials: true\n      }\n    };\n    axios\n      .post(\"/api/posts\", post, headers)\n      .then(res => {\n        axios\n          .post(\n            `/api/users/myPosts/${this.props.userID}`,\n            { postID: res.data._id },\n            headers\n          )\n          .then(res => {\n            //cannot divide the call into two setState calls\n            this.setState({ loading: false, posted: true });\n          })\n          .catch(err => {\n            console.log(err);\n            this.setState({ loading: false });\n          });\n        var updatedMyPosts = [...this.props.myPosts];\n        updatedMyPosts.push(res.data._id);\n        var updatedMyPostsDetail = [...this.props.myPostsDetail];\n        updatedMyPostsDetail.push(res.data);\n        this.props.handleUpdatedMyPosts(updatedMyPostsDetail, updatedMyPosts);\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n      });\n\n    this.props.handlePosted();\n  };\n\n  handlePostCheck = e => {\n    e.preventDefault();\n    const title = this.state.title.trim();\n    if (\n      this.props.tagReducer.tags.length === 0 ||\n      this.props.tagReducer.tags.length >= 4\n    ) {\n      this.setState({\n        ...this.state,\n        tagError: true\n      });\n    } else if (title.length < 8 || title.length > 50) {\n      this.setState({\n        ...this.state,\n        titleError: true\n      });\n    } else {\n      this.handleFinalPost();\n    }\n  };\n\n  updateContent = value => {\n    this.setState({ content: value });\n  };\n\n  handleCancel = () => {\n    this.setState({ warning: true });\n  };\n\n  handlePostCancel = () => {\n    this.props.handlePosted();\n  };\n\n  onCloseModal = () => {\n    this.setState({\n      ...this.state,\n      warning: false,\n      tagError: false,\n      titleError: false\n    });\n  };\n\n  handleTitle = e => {\n    e.preventDefault();\n    this.setState({ title: e.target.value });\n  };\n\n  successPosted() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: \"10%\"\n        }}\n      >\n        <i\n          className=\"far fa-check-circle \"\n          style={{\n            color: \"green\",\n            fontSize: \"100px\",\n            margin: \"auto auto \"\n          }}\n        />\n        <p\n          style={{\n            marginTop: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Successfully Posted\n        </p>\n        <Link\n          to=\"/\"\n          className=\"button is-success\"\n          style={{\n            marginTop: \"10%\",\n            width: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Main Page\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    let inputTags = this.props.tagReducer.tags.map(tag => (\n      <li key={tag} style={styles.items}>\n        {tag}\n        <button onClick={() => this.props.removeTag(tag)}>(x)</button>\n      </li>\n    ));\n\n    let selection = <div />;\n\n    if (this.props.tagReducer.tags.length === 0) {\n      selection = (\n        <div>\n          <br />\n        </div>\n      );\n    } else {\n      selection = (\n        <div>\n          {inputTags}\n          <br />\n        </div>\n      );\n    }\n\n    const modalBg = {\n      modal: {\n        background: \"white \",\n        borderRadius: \"3%\",\n        maxHeight: \"100%\",\n        maxWidth: this.state.modalMaxWidth\n      }\n    };\n\n    return (\n      <React.Fragment>\n        <div style={{ width: \"80%\", margin: \"auto auto\" }}>\n          {this.state.loading ? (\n            <div\n              style={{\n                textAlign: \"center\",\n                paddingTop: \"25%\",\n                paddingBottom: \"25%\"\n              }}\n            >\n              <Spinner />\n            </div>\n          ) : this.state.posted ? (\n            this.successPosted()\n          ) : (\n            <React.Fragment>\n              <label>Title</label>\n              <div className=\"level\">\n                <input\n                  className=\"input is-rounded\"\n                  type=\"text\"\n                  required\n                  placeholder=\"Title...\"\n                  value={this.state.title}\n                  onChange={this.handleTitle}\n                />\n\n                <DropDown\n                  lists={[\"Get Saved Draft\"]}\n                  funcs={[this.getContent]}\n                />\n              </div>\n              <div>\n                <Editor\n                  updateContent={this.updateContent}\n                  value={this.state.content}\n                  userID={this.props.userID}\n                  showUpdateTime={this.showUpdateTime}\n                />\n                <span style={{ fontSize: \"13px\" }}>\n                  {this.state.updateTime\n                    ? `Saved at ${this.state.updateTime}`\n                    : \"\"}\n                </span>\n              </div>\n              <br />\n              {selection}\n              <hr />\n              <label>Tags</label>\n              <TagSearch\n                hitsDisplay={this.props.tagReducer.hitsDisplay}\n                tags={this.props.tagReducer.tags}\n                handleSelect={tag => this.props.addTag(tag)}\n                handleRemoveItem={tag => this.props.removeTag(tag)}\n                openDisplay={() => this.props.openDisplay()}\n                closeDisplay={() => this.props.closeDisplay()}\n                styles={styles}\n              />\n              <br />\n              <div className=\"level\" style={{ marginBottom: \"2rem\" }}>\n                <button\n                  type=\"submit\"\n                  className=\"button is-primary level-item\"\n                  style={{ marginRight: \"0.5rem\" }}\n                  onClick={this.handlePostCheck}\n                >\n                  Post\n                </button>\n\n                <button\n                  className=\"button is-primary level-item\"\n                  type=\"button\"\n                  style={{ marginLeft: \"0.5rem\" }}\n                  onClick={this.handleCancel}\n                >\n                  Cancel\n                </button>\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.warning}\n          onClose={this.onCloseModal}\n          center\n          styles={modalBg}\n        >\n          <WarningWindow\n            message=\"Your Post Will Not Be Saved\"\n            onCloseModal={this.onCloseModal}\n            buttonType=\"ToFrontPage\"\n          />\n        </Modal>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.tagError}\n          onClose={this.onCloseModal}\n          blockScroll={false}\n          center\n          styles={modalBg}\n        >\n          <WarningWindow\n            message=\"Please limit the number of the input tags from 1 to 3\"\n            onCloseModal={this.onCloseModal}\n          />\n        </Modal>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.titleError}\n          onClose={this.onCloseModal}\n          blockScroll={false}\n          center\n          styles={modalBg}\n        >\n          <WarningWindow\n            message=\"The title should have at least 8 characters and at most 50 characters\"\n            onCloseModal={this.onCloseModal}\n          />\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.persistedReducer.username,\n    tagReducer: state.tagReducer,\n    userID: state.persistedReducer.userID,\n    myPosts: state.persistedReducer.myPosts,\n    myPostsDetail: state.persistedReducer.myPostsDetail,\n    avatar: state.persistedReducer.avatar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDisplay: () => {\n      dispatch(openDisplay());\n    },\n    closeDisplay: () => {\n      dispatch(closeDisplay());\n    },\n    addTag: tag => {\n      dispatch(addTag(tag));\n    },\n    removeTag: tag => {\n      dispatch(removeTag(tag));\n    },\n    handlePosted: () => {\n      dispatch(handlePosted());\n    },\n    handleUpdatedMyPosts: (updatedMyPostsDetail, updatedMyPosts) =>\n      dispatch({\n        type: \"USERMYPOSTSUPDATED\",\n        myPostsDetail: updatedMyPostsDetail,\n        myPosts: updatedMyPosts\n      })\n  };\n};\n\nconst styles = {\n  container: {\n    border: \"1px solid #ddd\",\n    padding: \"5px\",\n    borderRadius: \"5px\"\n  },\n\n  hitStyle: {\n    margin: \"3% 1% 0 1%\"\n  },\n\n  input: {\n    outline: \"none\",\n    border: \"none\",\n    fontSize: \"14px\",\n    fontFamily: \"Helvetica, sans-serif\"\n  },\n\n  items: {\n    display: \"inline-block\",\n    padding: \"2px\",\n    border: \"1px solid blue\",\n    fontFamily: \"Helvetica, sans-serif\",\n    borderRadius: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n\n  hit: {\n    width: \"30%\",\n    height: \"10%\",\n    float: \"left\",\n    marginBottom: \"10px\",\n    borderBottom: \"solid 1px #eee\",\n    margin: \"0.5%\",\n    border: \"solid 1px #eee\",\n    boxShadow: \"0 0 3px #f6f6f6\",\n    position: \"relative\",\n    fontSize: \"14px\"\n  }\n};\n\nexport default withHandler(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Publish),\n  axios\n);\n"]},"metadata":{},"sourceType":"module"}