{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/editor/Editor.jsx\";\nimport React from \"react\";\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\nimport \"froala-editor/js/plugins/video.min.js\";\nimport \"froala-editor/js/plugins/url.min.js\";\nimport \"froala-editor/js/plugins/file.min.js\";\nimport \"froala-editor/js/plugins/image.min.js\";\nimport \"froala-editor/js/plugins/emoticons.min.js\";\nimport \"froala-editor/js/plugins/table.min.js\";\nimport \"froala-editor/js/plugins/special_characters.min.js\";\nimport \"froala-editor/js/plugins/link.min.js\";\nimport \"froala-editor/js/plugins/help.min.js\";\nimport \"froala-editor/js/plugins/save.min.js\";\nimport \"froala-editor/js/plugins/font_family.min.js\";\nimport \"froala-editor/js/plugins/font_size.min.js\";\nimport \"froala-editor/js/plugins/align.min.js\";\nimport \"froala-editor/js/plugins/code_view.min.js\";\nimport \"froala-editor/js/plugins/char_counter.min.js\";\nimport \"froala-editor/js/plugins/draggable.min.js\";\nimport \"froala-editor/js/plugins/paragraph_format.min.js\";\nimport \"froala-editor/js/plugins/paragraph_style.min.js\"; // import \"froala-editor/js/plugins/color.min.js\";\n\nimport \"froala-editor/js/plugins/image_manager.min.js\";\nimport FroalaEditorComponent from \"react-froala-wysiwyg\";\n\nconst EditorComponent = props => {\n  const YOURSERVER = process.env.REACT_APP_BACKEND_SERVER;\n  const TOKEN = localStorage.getItem(\"token\");\n  const config = {\n    height: 300,\n    width: \"100%\",\n    imageMaxSize: 1024 * 1024 * 3,\n    attribution: false,\n    imageUploadURL: \"\".concat(YOURSERVER, \"/api/uploads/images\"),\n    saveInterval: 1000 * 8,\n    requestHeaders: {\n      Authorization: \"Token \".concat(TOKEN)\n    },\n    events: {\n      \"image.removed\": function ($img) {\n        var xhttp = new XMLHttpRequest(); // xhttp.onreadystatechange = function() {\n        //   // Image was removed.\n        //   if (this.readyState === 4 && this.status === 200) {\n        //     console.log(\"image was deleted\");\n        //   }\n        // };\n\n        xhttp.open(\"DELETE\", \"\".concat(YOURSERVER, \"/api/uploads/delete_image\"), true);\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        xhttp.setRequestHeader(\"Authorization\", \"Token \".concat(TOKEN));\n        xhttp.send(JSON.stringify({\n          //Here use slice to exclude http://localhost:3000\n          src: $img.attr(\"src\").slice(YOURSERVER.length + 1)\n        }));\n      },\n      \"image.uploadedToS3\": function (link, key, response) {\n        // Do something here.\n        // this is the editor instance.\n        console.log(this);\n      },\n      \"image.beforeUpload\": function (images) {// Return false if you want to stop the image upload.\n      },\n      \"image.uploaded\": function (response) {\n        // Image was uploaded to the server.\n        const payload = JSON.parse(response);\n        const LOCATION = payload.Location;\n        this.image.insert(LOCATION, false, null, this.image.get(), response);\n        return false;\n      },\n      \"image.inserted\": function ($img, response) {// Image was inserted in the editor.\n      },\n      \"image.replaced\": function ($img, response) {\n        // Image was replaced in the editor.\n        console.log(\"replaced\");\n      },\n      \"save.before\": function (html) {\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"PATCH\", \"\".concat(YOURSERVER, \"/api/users/draft/\").concat(props.userID), true);\n        xhttp.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        xhttp.setRequestHeader(\"Authorization\", \"Token \".concat(TOKEN));\n\n        xhttp.onreadystatechange = function () {\n          //Call a function when the state changes.\n          if (xhttp.readyState === 4 && xhttp.status === 200) {\n            props.showUpdateTime();\n          }\n        };\n\n        xhttp.send(JSON.stringify({\n          content: html\n        }));\n      } // \"image.error\": function(error, response) {\n      //   // Bad link.\n      //   if (error.code == 1) {\n      //     console.log(1);\n      //   }\n      //   // No link in upload response.\n      //   else if (error.code == 2) {\n      //     console.log(2);\n      //   }\n      //   // Error during image upload.\n      //   else if (error.code == 3) {\n      //     console.log(3);\n      //   }\n      //   // Parsing response failed.\n      //   else if (error.code == 4) {\n      //     console.log(4);\n      //   }\n      //   // Image too text-large.\n      //   else if (error.code == 5) {\n      //     console.log(5);\n      //   }\n      //   // Invalid image type.\n      //   else if (error.code == 6) {\n      //     console.log(6);\n      //   }\n      //   // Image can be uploaded only to same domain in IE 8 and IE 9.\n      //   else if (error.code == 7) {\n      //     console.log(7);\n      //   }\n      //   // Response contains the original server response to the request if available.\n      // }\n\n    }\n  };\n  return React.createElement(FroalaEditorComponent, {\n    model: props.value,\n    onModelChange: props.updateContent,\n    config: config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  });\n};\n\nexport default EditorComponent;","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/editor/Editor.jsx"],"names":["React","FroalaEditorComponent","EditorComponent","props","YOURSERVER","process","env","REACT_APP_BACKEND_SERVER","TOKEN","localStorage","getItem","config","height","width","imageMaxSize","attribution","imageUploadURL","saveInterval","requestHeaders","Authorization","events","$img","xhttp","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","src","attr","slice","length","link","key","response","console","log","images","payload","parse","LOCATION","Location","image","insert","get","html","userID","onreadystatechange","readyState","status","showUpdateTime","content","value","updateContent"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\nimport \"froala-editor/js/plugins/video.min.js\";\nimport \"froala-editor/js/plugins/url.min.js\";\nimport \"froala-editor/js/plugins/file.min.js\";\nimport \"froala-editor/js/plugins/image.min.js\";\nimport \"froala-editor/js/plugins/emoticons.min.js\";\nimport \"froala-editor/js/plugins/table.min.js\";\nimport \"froala-editor/js/plugins/special_characters.min.js\";\nimport \"froala-editor/js/plugins/link.min.js\";\nimport \"froala-editor/js/plugins/help.min.js\";\nimport \"froala-editor/js/plugins/save.min.js\";\nimport \"froala-editor/js/plugins/font_family.min.js\";\nimport \"froala-editor/js/plugins/font_size.min.js\";\nimport \"froala-editor/js/plugins/align.min.js\";\nimport \"froala-editor/js/plugins/code_view.min.js\";\nimport \"froala-editor/js/plugins/char_counter.min.js\";\nimport \"froala-editor/js/plugins/draggable.min.js\";\nimport \"froala-editor/js/plugins/paragraph_format.min.js\";\nimport \"froala-editor/js/plugins/paragraph_style.min.js\";\n// import \"froala-editor/js/plugins/color.min.js\";\nimport \"froala-editor/js/plugins/image_manager.min.js\";\nimport FroalaEditorComponent from \"react-froala-wysiwyg\";\n\nconst EditorComponent = props => {\n  const YOURSERVER = process.env.REACT_APP_BACKEND_SERVER;\n  const TOKEN = localStorage.getItem(\"token\");\n\n  const config = {\n    height: 300,\n    width: \"100%\",\n    imageMaxSize: 1024 * 1024 * 3,\n    attribution: false,\n    imageUploadURL: `${YOURSERVER}/api/uploads/images`,\n    saveInterval: 1000 * 8,\n    requestHeaders: {\n      Authorization: `Token ${TOKEN}`\n    },\n    events: {\n      \"image.removed\": function($img) {\n        var xhttp = new XMLHttpRequest();\n        // xhttp.onreadystatechange = function() {\n        //   // Image was removed.\n        //   if (this.readyState === 4 && this.status === 200) {\n        //     console.log(\"image was deleted\");\n        //   }\n        // };\n        xhttp.open(\"DELETE\", `${YOURSERVER}/api/uploads/delete_image`, true);\n        xhttp.setRequestHeader(\n          \"Content-Type\",\n          \"application/json;charset=UTF-8\"\n        );\n        xhttp.setRequestHeader(\"Authorization\", `Token ${TOKEN}`);\n        xhttp.send(\n          JSON.stringify({\n            //Here use slice to exclude http://localhost:3000\n            src: $img.attr(\"src\").slice(YOURSERVER.length + 1)\n          })\n        );\n      },\n      \"image.uploadedToS3\": function(link, key, response) {\n        // Do something here.\n        // this is the editor instance.\n        console.log(this);\n      },\n      \"image.beforeUpload\": function(images) {\n        // Return false if you want to stop the image upload.\n      },\n      \"image.uploaded\": function(response) {\n        // Image was uploaded to the server.\n        const payload = JSON.parse(response);\n        const LOCATION = payload.Location;\n        this.image.insert(LOCATION, false, null, this.image.get(), response);\n\n        return false;\n      },\n      \"image.inserted\": function($img, response) {\n        // Image was inserted in the editor.\n      },\n      \"image.replaced\": function($img, response) {\n        // Image was replaced in the editor.\n        console.log(\"replaced\");\n      },\n      \"save.before\": function(html) {\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\n          \"PATCH\",\n          `${YOURSERVER}/api/users/draft/${props.userID}`,\n          true\n        );\n        xhttp.setRequestHeader(\n          \"Content-Type\",\n          \"application/json;charset=UTF-8\"\n        );\n        xhttp.setRequestHeader(\"Authorization\", `Token ${TOKEN}`);\n        xhttp.onreadystatechange = function() {\n          //Call a function when the state changes.\n          if (xhttp.readyState === 4 && xhttp.status === 200) {\n            props.showUpdateTime();\n          }\n        };\n        xhttp.send(\n          JSON.stringify({\n            content: html\n          })\n        );\n      }\n      // \"image.error\": function(error, response) {\n      //   // Bad link.\n      //   if (error.code == 1) {\n      //     console.log(1);\n      //   }\n\n      //   // No link in upload response.\n      //   else if (error.code == 2) {\n      //     console.log(2);\n      //   }\n\n      //   // Error during image upload.\n      //   else if (error.code == 3) {\n      //     console.log(3);\n      //   }\n\n      //   // Parsing response failed.\n      //   else if (error.code == 4) {\n      //     console.log(4);\n      //   }\n\n      //   // Image too text-large.\n      //   else if (error.code == 5) {\n      //     console.log(5);\n      //   }\n\n      //   // Invalid image type.\n      //   else if (error.code == 6) {\n      //     console.log(6);\n      //   }\n\n      //   // Image can be uploaded only to same domain in IE 8 and IE 9.\n      //   else if (error.code == 7) {\n      //     console.log(7);\n      //   }\n\n      //   // Response contains the original server response to the request if available.\n      // }\n    }\n  };\n  return (\n    <FroalaEditorComponent\n      model={props.value}\n      onModelChange={props.updateContent}\n      config={config}\n    />\n  );\n};\n\nexport default EditorComponent;\n"]},"metadata":{},"sourceType":"module"}