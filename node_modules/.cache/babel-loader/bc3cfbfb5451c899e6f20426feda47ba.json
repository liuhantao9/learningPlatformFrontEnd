{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport image from \"../../assets/img/logo.jpg\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport { openDisplay, closeDisplay, addTag, removeTag } from \"../../actions/tagActions\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateContent = value => {\n      this.setState({\n        content: value\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        warning: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        warning: false\n      });\n    };\n\n    this.handleTitle = e => {\n      e.preventDefault();\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\"\n    };\n    this.handlePost = this.handlePost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n  }\n\n  handlePost() {\n    const token = localStorage.getItem(\"token\");\n    const post = {\n      author: this.props.username,\n      title: this.state.title,\n      content: this.state.content,\n      tags: this.props.tagReducer.tags || []\n    };\n    this.setState({\n      loading: true\n    });\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(token)\n      }\n    };\n    axios.post(\"\".concat(process.env.REACT_APP_BACKEND_SERVER, \"/api/posts\"), post, headers).then(res => {\n      axios.post(\"\".concat(process.env.REACT_APP_BACKEND_SERVER, \"/api/users/myPosts/\").concat(this.props.userID), {\n        postID: res.data._id\n      }, headers).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n      var newMyPosts = this.props.myPosts;\n      newMyPosts.push(res.data._id);\n      this.props.handleMyPosts(newMyPosts);\n    }).catch(err => {\n      console.log(err);\n    });\n    this.setState({\n      posted: true,\n      loading: false\n    });\n  }\n\n  successPosted() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-check-circle \",\n      style: {\n        color: \"green\",\n        fontSize: \"100px\",\n        margin: \"auto auto \"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginTop: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Successfully Posted\"), React.createElement(Link, {\n      to: \"/index\",\n      className: \"button is-success\",\n      style: {\n        marginTop: \"10%\",\n        width: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Main Page\"));\n  }\n\n  render() {\n    let inputTags = this.props.tagReducer.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      style: styles.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, tag, React.createElement(\"button\", {\n      onClick: () => this.props.removeTag(tag),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"(x)\")));\n    let selection = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    });\n\n    if (this.props.tagReducer.tags.length === 0) {\n      selection = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    } else {\n      selection = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, inputTags, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar\",\n      role: \"navigation\",\n      \"aria-label\": \"main navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      width: \"112\",\n      height: \"48\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"navbarBasicExample\",\n      className: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(DropDown, {\n      lists: [\"Save\", \"Draft\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }) : this.state.posted ? this.successPosted() : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      className: \"input is-rounded\",\n      type: \"text\",\n      required: true,\n      value: this.state.title,\n      onChange: this.handleTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Editor, {\n      updateContent: this.updateContent,\n      value: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), inputTags, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Tags\"), React.createElement(TagSearch, {\n      hitsDisplay: this.props.tagReducer.hitsDisplay,\n      tags: this.props.tagReducer.tags,\n      handleSelect: tag => this.props.addTag(tag),\n      handleRemoveItem: tag => this.props.removeTag(tag),\n      openDisplay: () => this.props.openDisplay(),\n      closeDisplay: () => this.props.closeDisplay(),\n      styles: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"level-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Post\"), React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Cancel\"))))), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.warning,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Warning\")), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Your Post Will Not Be Saved\"), React.createElement(Link, {\n      className: \"button is-link\",\n      to: \"/index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Okay, I Got It\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.persistedReducer.username,\n    tagReducer: state.tagReducer,\n    userID: state.persistedReducer.userID,\n    myPosts: state.persistedReducer.myPosts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDisplay: () => {\n      dispatch(openDisplay());\n    },\n    closeDisplay: () => {\n      dispatch(closeDisplay());\n    },\n    addTag: tag => {\n      dispatch(addTag(tag));\n    },\n    removeTag: tag => {\n      dispatch(removeTag(tag));\n    },\n    handleMyPosts: newMyPosts => dispatch({\n      type: \"PUBLISHEDNEWPOST\",\n      myPosts: newMyPosts\n    })\n  };\n};\n\nconst styles = {\n  container: {\n    border: \"1px solid #ddd\",\n    padding: \"5px\",\n    borderRadius: \"5px\"\n  },\n  hitStyle: {\n    margin: \"3% 1% 0 1%\"\n  },\n  input: {\n    outline: \"none\",\n    border: \"none\",\n    fontSize: \"14px\",\n    fontFamily: \"Helvetica, sans-serif\"\n  },\n  items: {\n    display: \"inline-block\",\n    padding: \"2px\",\n    border: \"1px solid blue\",\n    fontFamily: \"Helvetica, sans-serif\",\n    borderRadius: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n  hit: {\n    width: \"30%\",\n    height: \"10%\",\n    float: \"left\",\n    marginBottom: \"10px\",\n    borderBottom: \"solid 1px #eee\",\n    margin: \"0.5%\",\n    border: \"solid 1px #eee\",\n    boxShadow: \"0 0 3px #f6f6f6\",\n    position: \"relative\",\n    fontSize: \"14px\"\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Publish);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx"],"names":["axios","React","Component","Editor","Link","image","DropDown","Spinner","Modal","connect","TagSearch","openDisplay","closeDisplay","addTag","removeTag","Publish","constructor","props","updateContent","value","setState","content","handleCancel","warning","onCloseModal","handleTitle","e","preventDefault","title","target","state","loading","posted","handlePost","bind","successPosted","token","localStorage","getItem","post","author","username","tags","tagReducer","headers","Authorization","process","env","REACT_APP_BACKEND_SERVER","then","res","userID","postID","data","_id","console","log","catch","err","newMyPosts","myPosts","push","handleMyPosts","display","flexDirection","marginTop","color","fontSize","margin","width","render","inputTags","map","tag","styles","items","selection","length","hitsDisplay","mapStateToProps","persistedReducer","mapDispatchToProps","dispatch","type","container","border","padding","borderRadius","hitStyle","input","outline","fontFamily","marginRight","cursor","hit","height","float","marginBottom","borderBottom","boxShadow","position"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport image from \"../../assets/img/logo.jpg\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport {\n  openDisplay,\n  closeDisplay,\n  addTag,\n  removeTag\n} from \"../../actions/tagActions\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\"\n    };\n\n    this.handlePost = this.handlePost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n  }\n\n  handlePost() {\n    const token = localStorage.getItem(\"token\");\n\n    const post = {\n      author: this.props.username,\n      title: this.state.title,\n      content: this.state.content,\n      tags: this.props.tagReducer.tags || []\n    };\n    this.setState({ loading: true });\n\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`\n      }\n    };\n\n    axios\n      .post(`${process.env.REACT_APP_BACKEND_SERVER}/api/posts`, post, headers)\n      .then(res => {\n        axios\n          .post(\n            `${process.env.REACT_APP_BACKEND_SERVER}/api/users/myPosts/${\n              this.props.userID\n            }`,\n            { postID: res.data._id },\n            headers\n          )\n          .then(res => {\n            console.log(res);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n        var newMyPosts = this.props.myPosts;\n        newMyPosts.push(res.data._id);\n        this.props.handleMyPosts(newMyPosts);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    this.setState({ posted: true, loading: false });\n  }\n\n  updateContent = value => {\n    this.setState({ content: value });\n  };\n\n  handleCancel = () => {\n    this.setState({ warning: true });\n  };\n\n  onCloseModal = () => {\n    this.setState({ warning: false });\n  };\n\n  handleTitle = e => {\n    e.preventDefault();\n    this.setState({ title: e.target.value });\n  };\n\n  successPosted() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: \"10%\"\n        }}\n      >\n        <i\n          className=\"far fa-check-circle \"\n          style={{\n            color: \"green\",\n            fontSize: \"100px\",\n            margin: \"auto auto \"\n          }}\n        />\n        <p\n          style={{\n            marginTop: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Successfully Posted\n        </p>\n        <Link\n          to=\"/index\"\n          className=\"button is-success\"\n          style={{\n            marginTop: \"10%\",\n            width: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Main Page\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n\n    let inputTags = (\n      this.props.tagReducer.tags.map((tag) => \n        <li key={tag} style={styles.items}>\n          {tag}\n          <button\n            onClick={() => this.props.removeTag(tag)}\n          >\n            (x)\n          </button>\n        </li>\n      )\n    )\n\n    let selection = (\n      <div></div>\n    )\n\n    if (this.props.tagReducer.tags.length === 0) {\n      selection = (\n        <div>\n          <br />\n        </div>\n      )\n    } else {\n      selection = (\n        <div>\n          {inputTags}\n          <br />\n        </div>\n      )\n    }\n\n    return (\n      <React.Fragment>\n        <div>\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n          >\n            <div className=\"navbar-brand\">\n              <div className=\"navbar-item\">\n                <Link to=\"/index\">\n                  <img src={image} width=\"112\" height=\"48\" alt=\"logo\" />\n                </Link>\n              </div>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n              <div className=\"navbar-start\" />\n              <DropDown lists={[\"Save\", \"Draft\"]} />\n            </div>\n          </nav>\n        </div>\n        <div style={{ width: \"80%\", margin: \"auto auto\" }}>\n          {this.state.loading ? (\n            <Spinner />\n          ) : this.state.posted ? (\n            this.successPosted()\n          ) : (\n            <React.Fragment>\n              <form onSubmit={this.handlePost}>\n                <label>Title</label>\n                <input\n                  className=\"input is-rounded\"\n                  type=\"text\"\n                  required\n                  value={this.state.title}\n                  onChange={this.handleTitle}\n                />\n                <div style={{ margin: \"auto auto\" }}>\n                  <br />\n                  <Editor\n                    updateContent={this.updateContent}\n                    value={this.state.content}\n                  />\n                </div>\n                {inputTags}\n                <label>Tags</label>\n                <TagSearch\n                  hitsDisplay={this.props.tagReducer.hitsDisplay}\n                  tags={this.props.tagReducer.tags}\n                  handleSelect={tag => this.props.addTag(tag)}\n                  handleRemoveItem={tag => this.props.removeTag(tag)}\n                  openDisplay={() => this.props.openDisplay()}\n                  closeDisplay={() => this.props.closeDisplay()}\n                  styles={styles}\n                />\n                <br />\n                <div className=\"level-left\">\n                  <button className=\"button is-primary level-item\" type=\"submit\">\n                    Post\n                  </button>\n                  <button\n                    className=\"button is-primary level-item\"\n                    onClick={this.handleCancel}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            </React.Fragment>\n          )}\n        </div>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.warning}\n          onClose={this.onCloseModal}\n          center\n        >\n          <div>\n            <h1>\n              <strong>Warning</strong>\n            </h1>\n            <p style={{ color: \"red\" }}>Your Post Will Not Be Saved</p>\n            <Link className=\"button is-link\" to=\"/index\">\n              Okay, I Got It\n            </Link>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.persistedReducer.username,\n    tagReducer: state.tagReducer,\n    userID: state.persistedReducer.userID,\n    myPosts: state.persistedReducer.myPosts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDisplay: () => {\n      dispatch(openDisplay());\n    },\n    closeDisplay: () => {\n      dispatch(closeDisplay());\n    },\n    addTag: tag => {\n      dispatch(addTag(tag));\n    },\n    removeTag: tag => {\n      dispatch(removeTag(tag));\n    },\n    handleMyPosts: newMyPosts =>\n      dispatch({\n        type: \"PUBLISHEDNEWPOST\",\n        myPosts: newMyPosts\n      })\n  };\n};\n\nconst styles = {\n  container: {\n    border: \"1px solid #ddd\",\n    padding: \"5px\",\n    borderRadius: \"5px\"\n  },\n\n  hitStyle: {\n    margin: \"3% 1% 0 1%\"\n  },\n\n  input: {\n    outline: \"none\",\n    border: \"none\",\n    fontSize: \"14px\",\n    fontFamily: \"Helvetica, sans-serif\"\n  },\n\n  items: {\n    display: \"inline-block\",\n    padding: \"2px\",\n    border: \"1px solid blue\",\n    fontFamily: \"Helvetica, sans-serif\",\n    borderRadius: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n\n  hit: {\n    width: \"30%\",\n    height: \"10%\",\n    float: \"left\",\n    marginBottom: \"10px\",\n    borderBottom: \"solid 1px #eee\",\n    margin: \"0.5%\",\n    border: \"solid 1px #eee\",\n    boxShadow: \"0 0 3px #f6f6f6\",\n    position: \"relative\",\n    fontSize: \"14px\"\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Publish);\n"]},"metadata":{},"sourceType":"module"}