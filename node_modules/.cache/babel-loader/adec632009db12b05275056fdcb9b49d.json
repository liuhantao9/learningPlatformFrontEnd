{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/searchBuilder/SearchBuilder.jsx\";\nimport algoliasearch from \"algoliasearch\";\nimport React, { Component } from \"react\";\nimport \"instantsearch.css/themes/algolia.css\";\nimport { InstantSearch, SearchBox, SortBy, Configure } from \"react-instantsearch-dom\";\nimport { connect } from \"react-redux\";\nimport CustomHits from \"./customHits\";\nimport Pagination from \"./customPigination\";\nconst searchClient = algoliasearch(process.env.REACT_APP_APPLICATION_ID, process.env.REACT_APP_SEARCH_ADMIN_API);\n\nclass SearchBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      refresh: false\n    };\n\n    this.refresh = () => {\n      this.setState({\n        refresh: true\n      }, () => {\n        this.setState({\n          refresh: false\n        });\n      });\n      this.props.refreshLikes();\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(InstantSearch, {\n      indexName: \"Test\",\n      searchClient: searchClient,\n      refresh: this.state.refresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Configure, {\n      hitsPerPage: 6,\n      analytics: true,\n      distinct: true,\n      page: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"center\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(SortBy, {\n      defaultRefinement: \"posts\",\n      items: [{\n        value: \"posts\",\n        label: \"Sorted By\"\n      }, {\n        value: \"posts_post_date_decs\",\n        label: \"Date desc.\"\n      }, {\n        value: \"posts_posts_date_asc\",\n        label: \"Date asc.\"\n      }, {\n        value: \"posts_likes_desc\",\n        label: \"Likes desc.\"\n      }, {\n        value: \"posts_likes_asc\",\n        label: \"Likes asc.\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(SearchBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.refresh,\n      style: {\n        color: \"black\",\n        backgroundColor: \"#ecf0f1\",\n        border: \"1px solid grey\",\n        fontSize: \"0.84em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" \", \"Refresh Content\")), React.createElement(CustomHits, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      defaultRefinement: this.props.piginationNumber,\n      showFirst: true,\n      showPrevious: true,\n      showNext: true,\n      showLast: true,\n      padding: 3,\n      totalPages: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    piginationNumber: state.persistedReducer.piginationNumber\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshLikes: () => dispatch({\n      type: \"REFRESHLIKES\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBuilder);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/searchBuilder/SearchBuilder.jsx"],"names":["algoliasearch","React","Component","InstantSearch","SearchBox","SortBy","Configure","connect","CustomHits","Pagination","searchClient","process","env","REACT_APP_APPLICATION_ID","REACT_APP_SEARCH_ADMIN_API","SearchBuilder","state","refresh","setState","props","refreshLikes","componentDidMount","render","justifyContent","display","value","label","color","backgroundColor","border","fontSize","piginationNumber","mapStateToProps","persistedReducer","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import algoliasearch from \"algoliasearch\";\nimport React, { Component } from \"react\";\nimport \"instantsearch.css/themes/algolia.css\";\nimport {\n  InstantSearch,\n  SearchBox,\n  SortBy,\n  Configure\n} from \"react-instantsearch-dom\";\nimport { connect } from \"react-redux\";\nimport CustomHits from \"./customHits\";\nimport Pagination from \"./customPigination\";\n\nconst searchClient = algoliasearch(\n  process.env.REACT_APP_APPLICATION_ID,\n  process.env.REACT_APP_SEARCH_ADMIN_API\n);\n\nclass SearchBuilder extends Component {\n  state = {\n    refresh: false\n  };\n\n  //refresh periodically\n  // componentDidMount() {\n  //   this.interval = setInterval(\n  //     () =>\n  //       this.setState({ refresh: true }, () => {\n  //         this.setState({ refresh: false });\n  //       }),\n  //     1000 * 60 * 5\n  //   );\n  //   this.props.refreshLikes();\n  // }\n  // componentWillUnmount() {\n  //   clearInterval(this.interval);\n  // }\n\n  //refresh by click\n  refresh = () => {\n    this.setState({ refresh: true }, () => {\n      this.setState({ refresh: false });\n    });\n    this.props.refreshLikes();\n  };\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    return (\n      <div>\n        <InstantSearch\n          indexName=\"Test\"\n          searchClient={searchClient}\n          refresh={this.state.refresh}\n        >\n          <Configure hitsPerPage={6} analytics={true} distinct page={1} />\n          <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n            <SortBy\n              defaultRefinement=\"posts\"\n              items={[\n                {\n                  value: \"posts\",\n                  label: \"Sorted By\"\n                },\n                {\n                  value: \"posts_post_date_decs\",\n                  label: \"Date desc.\"\n                },\n                {\n                  value: \"posts_posts_date_asc\",\n                  label: \"Date asc.\"\n                },\n                {\n                  value: \"posts_likes_desc\",\n                  label: \"Likes desc.\"\n                },\n                {\n                  value: \"posts_likes_asc\",\n                  label: \"Likes asc.\"\n                }\n              ]}\n            />\n            <SearchBox />\n            <button\n              className=\"button\"\n              onClick={this.refresh}\n              style={{\n                color: \"black\",\n                backgroundColor: \"#ecf0f1\",\n                border: \"1px solid grey\",\n                fontSize: \"0.84em\"\n              }}\n            >\n              {\" \"}\n              Refresh Content\n            </button>\n          </div>\n          <CustomHits />\n          <Pagination\n            defaultRefinement={this.props.piginationNumber}\n            showFirst\n            showPrevious\n            showNext\n            showLast\n            padding={3}\n            totalPages={10}\n          />\n        </InstantSearch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    piginationNumber: state.persistedReducer.piginationNumber,\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    refreshLikes: () => dispatch({ type: \"REFRESHLIKES\" })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchBuilder);\n"]},"metadata":{},"sourceType":"module"}