{"ast":null,"code":"import _objectWithoutProperties from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nlet initialState = {\n  loggedIn: false,\n  signupOpen: false,\n  loginOpen: false,\n  contactUsOpen: false,\n  shareOpen: false,\n  username: \"\",\n  userID: \"\",\n  likedPosts: [],\n  comments: [],\n  replies: [],\n  myPosts: [],\n  menu_class: \"\",\n  avatar: \"\",\n  likes: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === \"LOGIN\") {\n    return _objectSpread({}, state, {\n      loggedIn: true,\n      userID: action.userID,\n      username: action.username,\n      likedPosts: action.likedPosts,\n      myPosts: action.myPosts,\n      avatar: action.avatar\n    });\n  }\n\n  if (action.type === \"LOGOUT\") {\n    return _objectSpread({}, state, {\n      loggedIn: false,\n      signupOpen: false,\n      loginOpen: false,\n      contactUsOpen: false,\n      shareOpen: false,\n      username: \"\",\n      userID: \"\",\n      likedPosts: [],\n      myPosts: [],\n      menu_class: \"\"\n    });\n  }\n\n  if (action.type === \"SIGNUPMODAL\") {\n    //Here, after submit or even close, we\n    //will redirect to login modal\n    return _objectSpread({}, state, {\n      loginOpen: state.signupOpen,\n      signupOpen: !state.signupOpen\n    });\n  }\n\n  if (action.type === \"LOGINMODAL\") {\n    return _objectSpread({}, state, {\n      loginOpen: !state.loginOpen\n    });\n  }\n\n  if (action.type === \"CONTACTMODAL\") {\n    return _objectSpread({}, state, {\n      contactUsOpen: !state.contactUsOpen\n    });\n  }\n\n  if (action.type === \"SHAREMODAL\") {\n    return _objectSpread({}, state, {\n      shareOpen: !state.shareOpen\n    });\n  }\n\n  if (action.type === \"TOGGLEMENUCLASS\") {\n    return _objectSpread({}, state, {\n      menu_class: state.menu_class === \"\" ? \"toggled\" : \"\"\n    });\n  }\n\n  if (action.type === \"GETBLOG\") {\n    let tempComments = [];\n    let tempReplies = [];\n    action.blog.comments.map(comment => {\n      const replies = comment.replies,\n            clone = _objectWithoutProperties(comment, [\"replies\"]);\n\n      tempComments.push(_objectSpread({}, clone));\n\n      if (replies[0]) {\n        tempReplies.push(_objectSpread({}, replies[0], {\n          commentRef: comment._id\n        }));\n      }\n    });\n    return _objectSpread({}, state, {\n      comments: tempComments,\n      replies: tempReplies\n    });\n  }\n\n  if (action.type === \"ADDCOMMENT\") {\n    let temp = [...state.comments];\n    temp.push(action.comment);\n    return _objectSpread({}, state, {\n      comments: temp\n    });\n  }\n\n  if (action.type === \"HANDLELIKE\") {\n    let temp = _objectSpread({}, state.likes);\n\n    action.hits.map(hit => {\n      if (temp[hit.objectID] === undefined) {\n        temp[hit.objectID] = hit.likes;\n      }\n    });\n    return _objectSpread({}, state, {\n      likes: temp\n    });\n  }\n\n  if (action.type === \"ADDREPLY\") {\n    let temp = [...state.replies];\n    temp.push(action.reply);\n    return _objectSpread({}, state, {\n      replies: temp\n    });\n  }\n\n  if (action.type === \"HANDLELIKEPOSTS\") {\n    let temp = _objectSpread({}, state.likes);\n\n    temp[action.id] += action.liked ? -1 : 1; //remove duplicates\n\n    let newLikePosts = new Set([...state.likedPosts]);\n    action.liked ? newLikePosts.delete(action.id) : newLikePosts.add(action.id);\n    return _objectSpread({}, state, {\n      likedPosts: [...newLikePosts],\n      likes: temp\n    });\n  }\n\n  if (action.type === \"UPDATEAVATAR\") {\n    return _objectSpread({}, state, {\n      avatar: action.avatar\n    });\n  }\n\n  if (action.type === \"PUBLISHEDNEWPOST\") {\n    return _objectSpread({}, state, {\n      myPosts: action.myPosts\n    });\n  }\n\n  if (action.type === \"USERLIKEDPOSTSUPDATED\") {\n    return _objectSpread({}, state, {\n      likedPosts: action.likedPosts\n    });\n  }\n\n  if (action.type === 'AUTHENTICATION_PASSWORD_RESET_CLEAR') if (action.type === 'AUTHENTICATION_PASSWORD_RESET_HASH_FAILURE') {\n    return _objectSpread({}, state, {\n      isPasswordReset: false\n    });\n  }\n\n  if (action.type === 'AUTHENTICATION_PASSWORD_RESET_HASH_CREATED') {\n    return _objectSpread({}, state, {\n      isPasswordReset: true\n    });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/reducers/generalReducer.js"],"names":["initialState","loggedIn","signupOpen","loginOpen","contactUsOpen","shareOpen","username","userID","likedPosts","comments","replies","myPosts","menu_class","avatar","likes","reducer","state","action","type","tempComments","tempReplies","blog","map","comment","clone","push","commentRef","_id","temp","hits","hit","objectID","undefined","reply","id","liked","newLikePosts","Set","delete","add","isPasswordReset"],"mappings":"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","sourcesContent":["let initialState = {\n  loggedIn: false,\n  signupOpen: false,\n  loginOpen: false,\n  contactUsOpen: false,\n  shareOpen: false,\n  username: \"\",\n  userID: \"\",\n  likedPosts: [],\n  comments: [],\n  replies: [],\n  myPosts: [],\n  menu_class: \"\",\n  avatar: \"\",\n  likes: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === \"LOGIN\") {\n    return {\n      ...state,\n      loggedIn: true,\n      userID: action.userID,\n      username: action.username,\n      likedPosts: action.likedPosts,\n      myPosts: action.myPosts,\n      avatar: action.avatar\n    };\n  }\n  if (action.type === \"LOGOUT\") {\n    return {\n      ...state,\n      loggedIn: false,\n      signupOpen: false,\n      loginOpen: false,\n      contactUsOpen: false,\n      shareOpen: false,\n      username: \"\",\n      userID: \"\",\n      likedPosts: [],\n      myPosts: [],\n      menu_class: \"\"\n    };\n  }\n  if (action.type === \"SIGNUPMODAL\") {\n    //Here, after submit or even close, we\n    //will redirect to login modal\n\n    return {\n      ...state,\n      loginOpen: state.signupOpen,\n      signupOpen: !state.signupOpen\n    };\n  }\n  if (action.type === \"LOGINMODAL\") {\n    return {\n      ...state,\n      loginOpen: !state.loginOpen\n    };\n  }\n  if (action.type === \"CONTACTMODAL\") {\n    return {\n      ...state,\n      contactUsOpen: !state.contactUsOpen\n    };\n  }\n  if (action.type === \"SHAREMODAL\") {\n    return {\n      ...state,\n      shareOpen: !state.shareOpen\n    };\n  }\n  if (action.type === \"TOGGLEMENUCLASS\") {\n    return {\n      ...state,\n      menu_class: state.menu_class === \"\" ? \"toggled\" : \"\"\n    };\n  }\n  if (action.type === \"GETBLOG\") {\n    let tempComments = [];\n    let tempReplies = [];\n    action.blog.comments.map(comment => {\n      const { replies, ...clone } = comment;\n      tempComments.push({ ...clone });\n\n      if (replies[0]) {\n        tempReplies.push({ ...replies[0], commentRef: comment._id });\n      }\n    });\n\n    return {\n      ...state,\n      comments: tempComments,\n      replies: tempReplies\n    };\n  }\n  if (action.type === \"ADDCOMMENT\") {\n    let temp = [...state.comments];\n    temp.push(action.comment);\n\n    return {\n      ...state,\n      comments: temp\n    };\n  }\n\n  if (action.type === \"HANDLELIKE\") {\n    let temp = { ...state.likes };\n\n    action.hits.map(hit => {\n      if (temp[hit.objectID] === undefined) {\n        temp[hit.objectID] = hit.likes;\n      }\n    });\n    return {\n      ...state,\n      likes: temp\n    };\n  }\n  if (action.type === \"ADDREPLY\") {\n    let temp = [...state.replies];\n    temp.push(action.reply);\n\n    return {\n      ...state,\n      replies: temp\n    };\n  }\n  if (action.type === \"HANDLELIKEPOSTS\") {\n    let temp = { ...state.likes };\n    temp[action.id] += action.liked ? -1 : 1;\n    //remove duplicates\n    let newLikePosts = new Set([...state.likedPosts]);\n    action.liked ? newLikePosts.delete(action.id) : newLikePosts.add(action.id);\n    return {\n      ...state,\n      likedPosts: [...newLikePosts],\n      likes: temp\n    };\n  }\n  if (action.type === \"UPDATEAVATAR\") {\n    return {\n      ...state,\n      avatar: action.avatar\n    };\n  }\n\n  if (action.type === \"PUBLISHEDNEWPOST\") {\n    return {\n      ...state,\n      myPosts: action.myPosts\n    };\n  }\n  if (action.type === \"USERLIKEDPOSTSUPDATED\") {\n    return {\n      ...state,\n      likedPosts: action.likedPosts\n    };\n  }\n  if (action.type === 'AUTHENTICATION_PASSWORD_RESET_CLEAR')\n  if (action.type === 'AUTHENTICATION_PASSWORD_RESET_HASH_FAILURE') {\n    return {\n      ...state,\n      isPasswordReset: false\n    };\n  }\n  if (action.type === 'AUTHENTICATION_PASSWORD_RESET_HASH_CREATED') {\n    return {\n      ...state,\n      isPasswordReset: true\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}