{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\n\nimport rootReducer from \"../reducers/generalReducer\";\nimport tagReducer from \"../reducers/tagReducer\";\nimport DevTools from '../components/tools/DevTools';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"loggedIn\", \"username\", \"currentHits\", \"userID\", \"likedPosts\", \"comments\", \"replies\", \"myPosts\", \"likes\", \"avatar\"]\n};\nconst loggerMiddleware = createLogger();\nconst enhancer = compose(applyMiddleware(thunkMiddleware, loggerMiddleware), DevTools.instrument());\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nlet store = createStore(combineReducers({\n  tagReducer: tagReducer,\n  persistedReducer: persistedReducer\n}), enhancer);\nlet persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/store/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","compose","persistStore","persistReducer","storage","rootReducer","tagReducer","DevTools","thunkMiddleware","createLogger","persistConfig","key","whitelist","loggerMiddleware","enhancer","instrument","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AACjD,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBP,EAAAA,OAFoB;AAGpBQ,EAAAA,SAAS,EAAE,CACT,UADS,EAET,UAFS,EAGT,aAHS,EAIT,QAJS,EAKT,YALS,EAMT,UANS,EAOT,SAPS,EAQT,SARS,EAST,OATS,EAUT,QAVS;AAHS,CAAtB;AAiBA,MAAMC,gBAAgB,GAAGJ,YAAY,EAArC;AAEA,MAAMK,QAAQ,GAAGb,OAAO,CACtBD,eAAe,CACbQ,eADa,EAEbK,gBAFa,CADO,EAKtBN,QAAQ,CAACQ,UAAT,EALsB,CAAxB;AAQA,MAAMC,gBAAgB,GAAGb,cAAc,CAACO,aAAD,EAAgBL,WAAhB,CAAvC;AAEA,IAAIY,KAAK,GAAGnB,WAAW,CACrBC,eAAe,CAAC;AACdO,EAAAA,UAAU,EAAEA,UADE;AAEdU,EAAAA,gBAAgB,EAAEA;AAFJ,CAAD,CADM,EAKrBF,QALqB,CAAvB;AAOA,IAAII,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA5B;AAEA,SAASA,KAAT,EAAgBC,SAAhB","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\nimport rootReducer from \"../reducers/generalReducer\";\nimport tagReducer from \"../reducers/tagReducer\";\nimport DevTools from '../components/tools/DevTools';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\n    \"loggedIn\",\n    \"username\",\n    \"currentHits\",\n    \"userID\",\n    \"likedPosts\",\n    \"comments\",\n    \"replies\",\n    \"myPosts\",\n    \"likes\",\n    \"avatar\"\n  ]\n};\n\nconst loggerMiddleware = createLogger();\n\nconst enhancer = compose(\n  applyMiddleware(\n    thunkMiddleware,\n    loggerMiddleware,\n  ),\n  DevTools.instrument(),\n);\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nlet store = createStore(\n  combineReducers({\n    tagReducer: tagReducer,\n    persistedReducer: persistedReducer\n  }),\n  enhancer\n);\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}