{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport image from \"../../assets/img/logo.jpg\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport Tag from \"../commons/tagsearch\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateContent = value => {\n      this.setState({\n        content: value\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        warning: true\n      });\n    };\n\n    this.onCloseModal = () => {\n      this.setState({\n        warning: false\n      });\n    };\n\n    this.openDisplay = () => {\n      this.setState({\n        hitsDisplay: true\n      });\n    };\n\n    this.closeDisplay = () => {\n      this.setState({\n        hitsDisplay: false\n      });\n    };\n\n    this.handleTitle = e => {\n      e.preventDefault();\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\",\n      tags: [\"python\", \"interview\"],\n      hitsDisplay: false\n    };\n    this.handlePost = this.handlePost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n  }\n\n  handlePost() {\n    const token = localStorage.getItem(\"token\");\n    const post = {\n      author: this.props.username,\n      title: this.state.title,\n      content: this.state.content,\n      tags: this.state.tags || []\n    };\n    this.setState({\n      loading: true\n    });\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(token)\n      }\n    };\n    axios.post(\"\".concat(process.env.REACT_APP_BACKEND_SERVER, \"/api/posts\"), post, headers).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    this.setState({\n      posted: true,\n      loading: false\n    });\n  }\n\n  successPosted() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-check-circle \",\n      style: {\n        color: \"green\",\n        fontSize: \"100px\",\n        margin: \"auto auto \"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginTop: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Successfully Posted\"), React.createElement(Link, {\n      to: \"/index\",\n      className: \"button is-success\",\n      style: {\n        marginTop: \"10%\",\n        width: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Main Page\"));\n  }\n\n  render() {\n    let submit = React.createElement(\"div\", {\n      class: \"level-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Post\"), React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Cancel\"));\n\n    if (this.state.hitsDisplay) {\n      submit = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar\",\n      role: \"navigation\",\n      \"aria-label\": \"main navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      width: \"112\",\n      height: \"48\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"navbarBasicExample\",\n      className: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(DropDown, {\n      lists: [\"Save\", \"Draft\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }) : this.state.posted ? this.successPosted() : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      className: \"input is-rounded\",\n      type: \"text\",\n      required: true,\n      value: this.state.title,\n      onChange: this.handleTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      updateContent: this.updateContent,\n      value: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Tags\"), React.createElement(TagSearch, {\n      hitsDisplay: this.state.hitsDisplay,\n      openDisplay: this.openDisplay,\n      closeDisplay: this.closeDisplay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), submit))), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.warning,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Warning\")), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Your Post Will Not Be Saved\"), React.createElement(Link, {\n      className: \"button is-link\",\n      to: \"/index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Okay, I Got It\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username\n  };\n};\n\nexport default connect(mapStateToProps)(Publish);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx"],"names":["axios","React","Component","Editor","Link","image","DropDown","Spinner","Modal","connect","TagSearch","Tag","Publish","constructor","props","updateContent","value","setState","content","handleCancel","warning","onCloseModal","openDisplay","hitsDisplay","closeDisplay","handleTitle","e","preventDefault","title","target","state","loading","posted","tags","handlePost","bind","successPosted","token","localStorage","getItem","post","author","username","headers","Authorization","process","env","REACT_APP_BACKEND_SERVER","then","res","console","log","catch","err","display","flexDirection","marginTop","color","fontSize","margin","width","render","submit","mapStateToProps"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport image from \"../../assets/img/logo.jpg\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\"\nimport Tag from \"../commons/tagsearch\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\",\n      tags: [\"python\", \"interview\"],\n      hitsDisplay: false\n    };\n\n    this.handlePost = this.handlePost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n  }\n\n  handlePost() {\n    const token = localStorage.getItem(\"token\");\n\n    const post = {\n      author: this.props.username,\n      title: this.state.title,\n      content: this.state.content,\n      tags: this.state.tags || []\n    };\n    this.setState({ loading: true });\n\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`\n      }\n    };\n    axios\n      .post(`${process.env.REACT_APP_BACKEND_SERVER}/api/posts`, post, headers)\n      .then(res => {\n        console.log(res);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    this.setState({ posted: true, loading: false });\n  }\n\n  updateContent = value => {\n    this.setState({ content: value });\n  };\n\n  handleCancel = () => {\n    this.setState({ warning: true });\n  };\n\n  onCloseModal = () => {\n    this.setState({ warning: false });\n  };\n\n  openDisplay = () => {\n    this.setState({ hitsDisplay: true })\n  }\n\n  closeDisplay = () => {\n    this.setState({ hitsDisplay: false })\n  }\n  // handleTags = e => {\n  //   e.preventDefault();\n  //   this.setState({ tags: e.target.value });\n  // };\n\n  handleTitle = e => {\n    e.preventDefault();\n    this.setState({ title: e.target.value });\n  };\n  successPosted() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: \"10%\"\n        }}\n      >\n        <i\n          className=\"far fa-check-circle \"\n          style={{\n            color: \"green\",\n            fontSize: \"100px\",\n            margin: \"auto auto \"\n          }}\n        />\n        <p\n          style={{\n            marginTop: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Successfully Posted\n        </p>\n        <Link\n          to=\"/index\"\n          className=\"button is-success\"\n          style={{\n            marginTop: \"10%\",\n            width: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Main Page\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n\n    let submit = (\n      <div class=\"level-left\">\n        <button\n          className=\"button is-primary level-item\"\n          type=\"submit\"\n        >\n          Post\n        </button>\n        <button\n          className=\"button is-primary level-item\"\n          onClick={this.handleCancel}\n        >\n          Cancel\n        </button>\n      </div>\n    )\n\n    if (this.state.hitsDisplay) {\n      submit = (\n        <div></div>\n      )\n    }\n\n    return (\n      <React.Fragment>\n        <div>\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n          >\n            <div className=\"navbar-brand\">\n              <div className=\"navbar-item\">\n                <Link to=\"/index\">\n                  <img src={image} width=\"112\" height=\"48\" alt=\"logo\" />\n                </Link>\n              </div>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n              <div className=\"navbar-start\" />\n              <DropDown lists={[\"Save\", \"Draft\"]} />\n            </div>\n          </nav>\n        </div>\n        <div style={{ width: \"80%\", margin: \"auto auto\" }}>\n          {this.state.loading ? (\n            <Spinner />\n          ) : this.state.posted ? (\n            this.successPosted()\n          ) : (\n            <React.Fragment>\n              <form onSubmit={this.handlePost}>\n                <label>Title</label>\n                <input\n                  className=\"input is-rounded\"\n                  type=\"text\"\n                  required\n                  value={this.state.title}\n                  onChange={this.handleTitle}\n                />\n                <div style={{ margin: \"auto auto\" }}>\n                  <Editor\n                    updateContent={this.updateContent}\n                    value={this.state.content}\n                  />\n                </div>\n                <label>Tags</label>\n                <TagSearch\n                  hitsDisplay={this.state.hitsDisplay}\n                  openDisplay={this.openDisplay}\n                  closeDisplay={this.closeDisplay}\n                />\n                {submit}\n              </form>\n            </React.Fragment>\n          )}\n        </div>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.warning}\n          onClose={this.onCloseModal}\n          center\n        >\n          <div>\n            <h1>\n              <strong>Warning</strong>\n            </h1>\n            <p style={{ color: \"red\" }}>Your Post Will Not Be Saved</p>\n            <Link className=\"button is-link\" to=\"/index\">\n              Okay, I Got It\n            </Link>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.username\n  };\n};\n\nexport default connect(mapStateToProps)(Publish);\n"]},"metadata":{},"sourceType":"module"}