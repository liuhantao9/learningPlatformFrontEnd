{"ast":null,"code":"export const passwordResetHashCreated = () => ({\n  type: 'AUTHENTICATION_PASSWORD_RESET_HASH_CREATED'\n});\nexport const passwordResetHashFailure = () => ({\n  type: 'AUTHENTICATION_PASSWORD_RESET_HASH_FAILURE'\n});\nexport function createHash(email) {\n  return async dispatch => {\n    await fetch( // the route\n    'api/users/saveresethash', // the content to be sent\n    // don't really understand this part\n    {\n      method: 'POST',\n      body: JSON.stringify({\n        email\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n    }).then(response => {\n      if (response == 200) {\n        return response.json();\n      }\n\n      return null;\n    }).then(json => {\n      if (json.username) {\n        return dispatch(passwordResetHashCreated(json));\n      }\n\n      return dispatch(passwordResetHashFailure(new Error('Something went wrond. Please try again.')));\n    }).catch(error => dispatch(passwordResetHashFailure(error)));\n  };\n}","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/actions/authentication.js"],"names":["passwordResetHashCreated","type","passwordResetHashFailure","createHash","email","dispatch","fetch","method","body","JSON","stringify","headers","credentials","then","response","json","username","Error","catch","error"],"mappings":"AAAA,OAAO,MAAMA,wBAAwB,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAP,CAAjC;AACP,OAAO,MAAMC,wBAAwB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAE;AAAR,CAAP,CAAjC;AAEP,OAAO,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AAChC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,KAAK,EACT;AACA,6BAFS,EAGT;AACA;AACA;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEN,QAAAA;AAAF,OAAf,CAFR;AAGEO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHX;AAMEC,MAAAA,WAAW,EAAE;AANf,KALS,CAAL,CAcLC,IAdK,CAcCC,QAAD,IAAc;AAClB,UAAIA,QAAQ,IAAI,GAAhB,EAAqB;AACnB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD;;AACD,aAAO,IAAP;AACD,KAnBK,EAoBLF,IApBK,CAoBCE,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,QAAT,EAAmB;AACjB,eAAOX,QAAQ,CAACL,wBAAwB,CAACe,IAAD,CAAzB,CAAf;AACD;;AACD,aAAOV,QAAQ,CAACH,wBAAwB,CAAC,IAAIe,KAAJ,CAAU,yCAAV,CAAD,CAAzB,CAAf;AACD,KAzBK,EA0BLC,KA1BK,CA0BCC,KAAK,IAAId,QAAQ,CAACH,wBAAwB,CAACiB,KAAD,CAAzB,CA1BlB,CAAN;AA2BD,GA5BD;AA6BD","sourcesContent":["export const passwordResetHashCreated = () => ({ type: 'AUTHENTICATION_PASSWORD_RESET_HASH_CREATED' });\nexport const passwordResetHashFailure = () => ({ type: 'AUTHENTICATION_PASSWORD_RESET_HASH_FAILURE' });\n\nexport function createHash(email) {\n  return async (dispatch) => {\n    await fetch (\n      // the route\n      'api/users/saveresethash',\n      // the content to be sent\n      // don't really understand this part\n      {\n        method: 'POST',\n        body: JSON.stringify({ email }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n      }\n    )\n    .then((response) => {\n      if (response == 200) {\n        return response.json();\n      }\n      return null;\n    })\n    .then((json) => {\n      if (json.username) {\n        return dispatch(passwordResetHashCreated(json));\n      }\n      return dispatch(passwordResetHashFailure(new Error('Something went wrond. Please try again.')));\n    })\n    .catch(error => dispatch(passwordResetHashFailure(error)));  \n  };\n}"]},"metadata":{},"sourceType":"module"}