{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/resetpassword/ResetPasswordPage.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nexport default class ResetPasswordPage extends Component {\n  constructor(props) {\n    super(props);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleEmailSubmit = this.handleEmailSubmit.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordAgain: \"\",\n      confirmation: \"\",\n      submit: false,\n      error: \"\"\n    };\n  }\n\n  handleChange(type, e) {\n    this.setState({\n      [type]: e.target.value\n    });\n  }\n\n  handleKeyPress(target) {\n    if (target.charCode == 13 && !submit && email !== \"\") {\n      this.handleEmailSubmit();\n    } else if (target.charCode == 13 && submit && password !== \"\" && passwordAgain !== \"\" && confirmation !== \"\") {\n      this.handlePasswordSubmit();\n    }\n  }\n\n  handleEmailSubmit(e) {\n    e.preventDefault();\n    const email = this.state.email;\n    axios.post(\"\".concat(process.env.REACT_APP_BACKEND_SERVER, \"/api/users/reset-send-email\"), email).then(res => {\n      this.setState({\n        email: \"\",\n        submit: true\n      });\n      localStorage.setItem(\"token\", res.data.token);\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        error: err.response.status\n      });\n    });\n  }\n\n  handlePasswordSubmit(e) {\n    e.preventDefault();\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          passwordAgain = _this$state.passwordAgain,\n          confirmation = _this$state.confirmation;\n\n    if (password === passwordAgain) {\n      const user = {\n        user: {\n          email: email,\n          password: password,\n          confirmation: confirmation\n        }\n      };\n      axios.post(\"\".concat(process.env.REACT_APP_BACKEND_SERVER, \"/api/users/reset-password\"), user).then(res => {\n        this.setState({\n          submit: false,\n          email: \"\",\n          password: \"\",\n          passwordAgain: \"\",\n          confirmation: \"\"\n        });\n        localStorage.setItem(\"token\", res.data.token);\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          error: err.response.status\n        });\n      });\n    }\n  }\n\n  render() {\n    let display = React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 col-sm-7 col-md-5 col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"If you\\u2018d like to reset your password, please enter your email here and a link to do so will be sent to the address you enter.\"), React.createElement(\"form\", {\n      handleEmailSubmit: this.handleEmailSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"userEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: \"input is-primary\",\n      name: \"email\",\n      onChange: e => this.handleChange(e, \"email\"),\n      onKeyPress: this.handleKeyPress,\n      placeholder: \"noreply@musiclist.com\",\n      required: true,\n      type: \"email\",\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button is-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Reset Password\"))));\n\n    if (submit) {\n      display = React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10 col-sm-7 col-md-5 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        handlePasswordSubmit: this.handlePasswordSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Please enter the new password you want to set as well as the six-digit confirmation code that we have sent to you email address\"), React.createElement(\"label\", {\n        for: \"newPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        className: \"input is-primary\",\n        name: \"password\",\n        onChange: e => this.handleChange(e, \"password\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase enter new password...\",\n        required: true,\n        type: \"password\",\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"passwordAgain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Re-enter Password\"), React.createElement(\"input\", {\n        className: \"input is-primary\",\n        name: \"password\",\n        onChange: e => this.handleChange(e, \"passwordAgain\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase re-enter the password...\",\n        required: true,\n        type: \"password\",\n        value: this.state.passwordAgain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        for: \"newPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Confirmation Code\"), React.createElement(\"input\", {\n        className: \"input is-primary\",\n        name: \"confirmation\",\n        onChange: e => this.handleChange(e, \"confirmation\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase enter new password...\",\n        required: true,\n        type: \"confirmation\",\n        value: this.state.confirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"button is-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Reset Password\"))));\n    }\n\n    return {\n      display\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/resetpassword/ResetPasswordPage.jsx"],"names":["React","Component","axios","ResetPasswordPage","constructor","props","handleEmailChange","bind","handleKeyPress","handleEmailSubmit","state","email","password","passwordAgain","confirmation","submit","error","handleChange","type","e","setState","target","value","charCode","handlePasswordSubmit","preventDefault","post","process","env","REACT_APP_BACKEND_SERVER","then","res","localStorage","setItem","data","token","catch","err","console","log","response","status","user","render","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,iBAAN,SAAgCF,SAAhC,CAA0C;AAEvDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AAEA,SAAKG,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,MAAM,EAAE,KALG;AAMXC,MAAAA,KAAK,EAAC;AANK,KAAb;AAQD;;AAEDC,EAAAA,YAAY,CAAEC,IAAF,EAAQC,CAAR,EAAW;AACrB,SAAKC,QAAL,CAAc;AAAE,OAACF,IAAD,GAAQC,CAAC,CAACE,MAAF,CAASC;AAAnB,KAAd;AACD;;AAEDd,EAAAA,cAAc,CAACa,MAAD,EAAS;AACrB,QAAIA,MAAM,CAACE,QAAP,IAAmB,EAAnB,IAAyB,CAACR,MAA1B,IAAoCJ,KAAK,KAAK,EAAlD,EAAsD;AACpD,WAAKF,iBAAL;AACD,KAFD,MAEO,IAAIY,MAAM,CAACE,QAAP,IAAmB,EAAnB,IAAyBR,MAAzB,IACDH,QAAQ,KAAK,EADZ,IACkBC,aAAa,KAAK,EADpC,IAEDC,YAAY,KAAK,EAFpB,EAEwB;AAC7B,WAAKU,oBAAL;AACD;AACF;;AAEDf,EAAAA,iBAAiB,CAACU,CAAD,EAAI;AACnBA,IAAAA,CAAC,CAACM,cAAF;AADmB,UAEXd,KAFW,GAED,KAAKD,KAFJ,CAEXC,KAFW;AAGnBT,IAAAA,KAAK,CACFwB,IADH,WACWC,OAAO,CAACC,GAAR,CAAYC,wBADvB,kCAC8ElB,KAD9E,EAEGmB,IAFH,CAEQC,GAAG,IAAI;AACX,WAAKX,QAAL,CAAc;AACZT,QAAAA,KAAK,EAAE,EADK;AAEZI,QAAAA,MAAM,EAAE;AAFI,OAAd;AAIAiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACD,KARH,EASGC,KATH,CASSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKjB,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAEqB,GAAG,CAACG,QAAJ,CAAaC;AADR,OAAd;AAGD,KAdH;AAeD;;AAEDjB,EAAAA,oBAAoB,CAACL,CAAD,EAAI;AACtBA,IAAAA,CAAC,CAACM,cAAF;AADsB,wBAOlB,KAAKf,KAPa;AAAA,UAGpBC,KAHoB,eAGpBA,KAHoB;AAAA,UAIpBC,QAJoB,eAIpBA,QAJoB;AAAA,UAKpBC,aALoB,eAKpBA,aALoB;AAAA,UAMpBC,YANoB,eAMpBA,YANoB;;AAQtB,QAAIF,QAAQ,KAAKC,aAAjB,EAAgC;AAC9B,YAAM6B,IAAI,GAAG;AACXA,QAAAA,IAAI,EAAE;AACJ/B,UAAAA,KAAK,EAAEA,KADH;AAEJC,UAAAA,QAAQ,EAAEA,QAFN;AAGJE,UAAAA,YAAY,EAAEA;AAHV;AADK,OAAb;AAOAZ,MAAAA,KAAK,CACFwB,IADH,WACWC,OAAO,CAACC,GAAR,CAAYC,wBADvB,gCAC4Ea,IAD5E,EAEGZ,IAFH,CAEQC,GAAG,IAAI;AACX,aAAKX,QAAL,CAAc;AACZL,UAAAA,MAAM,EAAE,KADI;AAEZJ,UAAAA,KAAK,EAAE,EAFK;AAGZC,UAAAA,QAAQ,EAAE,EAHE;AAIZC,UAAAA,aAAa,EAAE,EAJH;AAKZC,UAAAA,YAAY,EAAE;AALF,SAAd;AAOAkB,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC;AACD,OAXH,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKjB,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAEqB,GAAG,CAACG,QAAJ,CAAaC;AADR,SAAd;AAGD,OAjBH;AAkBD;AACF;;AAIDE,EAAAA,MAAM,GAAG;AAEP,QAAIC,OAAO,GACT;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4IADF,EAKE;AAAM,MAAA,iBAAiB,EAAE,KAAKnC,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,QAAQ,EAAEU,CAAC,IAAI,KAAKF,YAAL,CAAkBE,CAAlB,EAAqB,OAArB,CAHjB;AAIE,MAAA,UAAU,EAAE,KAAKX,cAJnB;AAKE,MAAA,WAAW,EAAC,uBALd;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,IAAI,EAAC,OAPP;AAQE,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWC,KARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZF,CALF,CADF,CADF;;AAyBA,QAAII,MAAJ,EAAY;AACV6B,MAAAA,OAAO,GACL;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,oBAAoB,EAAE,KAAKpB,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2IADF,EAKE;AAAO,QAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAME;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAEL,CAAC,IAAI,KAAKF,YAAL,CAAkBE,CAAlB,EAAqB,UAArB,CAHjB;AAIE,QAAA,UAAU,EAAE,KAAKX,cAJnB;AAKE,QAAA,WAAW,EAAC,6BALd;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWE,QARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAgBE;AAAO,QAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAhBF,EAiBE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKF,YAAL,CAAkBE,CAAlB,EAAqB,eAArB,CAHjB;AAIE,QAAA,UAAU,EAAE,KAAKX,cAJnB;AAKE,QAAA,WAAW,EAAC,gCALd;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWG,aARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBF,EA2BE;AAAO,QAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BA3BF,EA4BE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,QAAQ,EAAEM,CAAC,IAAI,KAAKF,YAAL,CAAkBE,CAAlB,EAAqB,cAArB,CAHjB;AAIE,QAAA,UAAU,EAAE,KAAKX,cAJnB;AAKE,QAAA,WAAW,EAAC,6BALd;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,IAAI,EAAC,cAPP;AAQE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWI,YARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BF,EAsCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAtCF,CADF,CADF,CADF;AA8CD;;AAED,WACE;AAAC8B,MAAAA;AAAD,KADF;AAGD;;AA3KsD","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\";\n\nexport default class ResetPasswordPage extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleEmailSubmit = this.handleEmailSubmit.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordAgain: \"\",\n      confirmation: \"\",\n      submit: false,\n      error:\"\"\n    }\n  }\n\n  handleChange (type, e) {\n    this.setState({ [type]: e.target.value });\n  }\n\n  handleKeyPress(target) {\n    if (target.charCode == 13 && !submit && email !== \"\") {\n      this.handleEmailSubmit();\n    } else if (target.charCode == 13 && submit && \n              password !== \"\" && passwordAgain !== \"\" &&\n              confirmation !== \"\") {\n      this.handlePasswordSubmit();\n    }\n  }\n\n  handleEmailSubmit(e) {\n    e.preventDefault();\n    const { email } = this.state;\n    axios\n      .post(`${process.env.REACT_APP_BACKEND_SERVER}/api/users/reset-send-email`, email)\n      .then(res => {\n        this.setState({\n          email: \"\",\n          submit: true\n        })\n        localStorage.setItem(\"token\", res.data.token);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          error: err.response.status\n        });\n      })\n  }\n\n  handlePasswordSubmit(e) {\n    e.preventDefault();\n    const { \n      email,\n      password,\n      passwordAgain,\n      confirmation\n    } = this.state\n    if (password === passwordAgain) {\n      const user = {\n        user: {\n          email: email,\n          password: password,\n          confirmation: confirmation\n        }\n      }\n      axios\n        .post(`${process.env.REACT_APP_BACKEND_SERVER}/api/users/reset-password`, user)\n        .then(res => {\n          this.setState({\n            submit: false,\n            email: \"\",\n            password: \"\",\n            passwordAgain: \"\",\n            confirmation: \"\"\n          })\n          localStorage.setItem(\"token\", res.data.token);\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            error: err.response.status\n          })\n        })\n    }\n  }\n\n\n\n  render() {\n\n    let display = (\n      <div className=\"row justify-content-center\">\n        <div className=\"col-10 col-sm-7 col-md-5 col-lg-4\">\n          <p>\n            If you‘d like to reset your password, please enter your email here\n            and a link to do so will be sent to the address you enter.\n          </p>\n          <form handleEmailSubmit={this.handleEmailSubmit}>\n            <label for=\"userEmail\">Email</label>\n            <input\n              className=\"input is-primary\"\n              name=\"email\"\n              onChange={e => this.handleChange(e, \"email\")}\n              onKeyPress={this.handleKeyPress}\n              placeholder=\"noreply@musiclist.com\"\n              required\n              type=\"email\"\n              value={this.state.email}\n            />\n            <button type=\"submit\" className=\"button is-primary\">Reset Password</button>\n          </form>\n        </div>\n      </div>\n    )\n\n    if (submit) {\n      display = (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 col-sm-7 col-md-5 col-lg-4\">\n            <form handlePasswordSubmit={this.handlePasswordSubmit}>\n              <p>\n                Please enter the new password you want to set as well as the six-digit\n                confirmation code that we have sent to you email address\n              </p>\n              <label for=\"newPassword\">Password</label>\n              <input\n                className=\"input is-primary\"\n                name=\"password\"\n                onChange={e => this.handleChange(e, \"password\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase enter new password...\"\n                required\n                type=\"password\"\n                value={this.state.password}\n              />\n              <label for=\"passwordAgain\">Re-enter Password</label>\n              <input\n                className=\"input is-primary\"\n                name=\"password\"\n                onChange={e => this.handleChange(e, \"passwordAgain\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase re-enter the password...\"\n                required\n                type=\"password\"\n                value={this.state.passwordAgain}\n              />\n              <label for=\"newPassword\">Confirmation Code</label>\n              <input\n                className=\"input is-primary\"\n                name=\"confirmation\"\n                onChange={e => this.handleChange(e, \"confirmation\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase enter new password...\"\n                required\n                type=\"confirmation\"\n                value={this.state.confirmation}\n              />\n              <button type=\"submit\" className=\"button is-primary\">Reset Password</button>\n            </form>\n          </div>\n        </div>\n      )\n    }\n    \n    return (\n      {display}\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}