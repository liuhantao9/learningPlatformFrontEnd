{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _find from \"lodash/find\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { translatable } from 'react-instantsearch-core';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('MenuSelect');\n\nvar MenuSelect =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MenuSelect, _Component);\n\n  function MenuSelect() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MenuSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MenuSelect)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectChange\", function (_ref) {\n      var value = _ref.target.value;\n\n      _this.props.refine(value === 'ais__see__all__option' ? '' : value);\n    });\n\n    return _this;\n  }\n\n  _createClass(MenuSelect, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          items = _this$props.items,\n          canRefine = _this$props.canRefine,\n          translate = _this$props.translate,\n          className = _this$props.className;\n      return React.createElement(\"div\", {\n        className: classNames(cx('', !canRefine && '-noRefinement'), className)\n      }, React.createElement(\"select\", {\n        value: this.selectedValue,\n        onChange: this.handleSelectChange,\n        className: cx('select')\n      }, React.createElement(\"option\", {\n        value: \"ais__see__all__option\",\n        className: cx('option')\n      }, translate('seeAllOption')), items.map(function (item) {\n        return React.createElement(\"option\", {\n          key: item.value,\n          value: item.value,\n          className: cx('option')\n        }, item.label, \" (\", item.count, \")\");\n      })));\n    }\n  }, {\n    key: \"selectedValue\",\n    get: function get() {\n      var _ref2 = _find(this.props.items, {\n        isRefined: true\n      }) || {\n        value: 'ais__see__all__option'\n      },\n          value = _ref2.value;\n\n      return value;\n    }\n  }]);\n\n  return MenuSelect;\n}(Component);\n\n_defineProperty(MenuSelect, \"propTypes\", {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    count: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.string.isRequired]),\n    isRefined: PropTypes.bool.isRequired\n  })).isRequired,\n  canRefine: PropTypes.bool.isRequired,\n  refine: PropTypes.func.isRequired,\n  translate: PropTypes.func.isRequired,\n  className: PropTypes.string\n});\n\n_defineProperty(MenuSelect, \"defaultProps\", {\n  className: ''\n});\n\nexport default translatable({\n  seeAllOption: 'See all'\n})(MenuSelect);","map":null,"metadata":{},"sourceType":"module"}