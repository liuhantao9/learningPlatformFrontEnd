{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\n\nimport rootReducer from \"./reducer\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport tagReducer from \"../reducers/tagReducer\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"loggedIn\", \"username\", \"currentHits\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport default createStore(combineReducers({\n  tagReducer,\n  persistReducer\n}), {}, applyMiddleware(logger(), thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nlet persistor = persistStore(store); // export { store, persistor };","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/store/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","persistStore","persistReducer","storage","rootReducer","logger","thunk","tagReducer","persistConfig","key","whitelist","persistedReducer","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AACjD,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBN,EAAAA,OAFoB;AAGpBO,EAAAA,SAAS,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,aAAzB;AAHS,CAAtB;AAMA,MAAMC,gBAAgB,GAAGT,cAAc,CAACM,aAAD,EAAgBJ,WAAhB,CAAvC;AAEA,eAAeN,WAAW,CACxBC,eAAe,CAAC;AACdQ,EAAAA,UADc;AAEdL,EAAAA;AAFc,CAAD,CADS,EAKxB,EALwB,EAMxBF,eAAe,CAACK,MAAM,EAAP,EAAWC,KAAX,CANS,EAOxBM,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAPf,CAA1B;AASA,IAAIC,SAAS,GAAGb,YAAY,CAACc,KAAD,CAA5B,C,CAEA","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web and AsyncStorage for react-native\nimport rootReducer from \"./reducer\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport tagReducer from \"../reducers/tagReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"loggedIn\", \"username\", \"currentHits\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default createStore(\n  combineReducers({\n    tagReducer,\n    persistReducer\n  }),\n  {},\n  applyMiddleware(logger(), thunk),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nlet persistor = persistStore(store);\n\n// export { store, persistor };\n"]},"metadata":{},"sourceType":"module"}