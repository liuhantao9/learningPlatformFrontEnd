{"ast":null,"code":"import _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/comment/comment.jsx\";\nimport React, { Component } from \"react\";\nimport Replies from \"./replies\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axios-blogs\";\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      replyBox: false,\n      body: \"\"\n    };\n\n    this.openReply = () => {\n      this.setState({\n        replyBox: !this.state.replyBox\n      });\n    };\n\n    this.onChange = e => {\n      e.preventDefault();\n      this.setState({\n        body: e.target.value\n      });\n    };\n\n    this.handleReply = () => {\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(token),\n          withCredentials: true\n        }\n      };\n      axios.patch(\"/api/posts/comments/reply/\".concat(this.props.blogID, \"?commentId=\").concat(this.props.comment._id), {\n        reply: {\n          body: this.state.body,\n          username: this.props.username,\n          userID: this.props.userID\n        }\n      }, headers).then(res => {\n        this.props.addReply(_objectSpread({}, res.data, {\n          commentRef: this.props.comment._id\n        }));\n        this.setState({\n          body: \"\"\n        });\n      }).catch(err => {\n        console.log(err);\n        console.log(\"error\");\n      });\n    };\n\n    this.showReplyBox = () => {\n      if (this.state.replyBox) {\n        return React.createElement(\"div\", {\n          className: \"field has-addons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"control\",\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          class: \"input is-rounded\",\n          type: \"text\",\n          placeholder: \"reply something...\",\n          onChange: this.onChange,\n          value: this.state.body,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          class: \"control\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          class: \"button is-info\",\n          onClick: this.handleReply,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          class: \"fas fa-reply\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }))));\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"article\", {\n      className: \"media\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      className: \"media-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"image is-64x64\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"https://bulma.io/images/placeholders/128x128.png\",\n      alt: \"placeholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"media-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.props.comment.username), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), this.props.comment.body, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Like \".concat(this.props.comment.like)), \" \\xB7\", \" \", React.createElement(\"a\", {\n      onClick: this.openReply,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Reply\"), \" \\xB7 3 hrs\")), this.showReplyBox()), this.props.replies.length > 0 ? React.createElement(Replies, {\n      replies: this.props.replies.filter(reply => reply.commentRef === this.props.comment._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    replies: state.persistedReducer.replies,\n    userID: state.persistedReducer.userID,\n    username: state.persistedReducer.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addReply: reply => dispatch({\n      type: \"ADDREPLY\",\n      reply: reply\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/comment/comment.jsx"],"names":["React","Component","Replies","connect","axios","Comment","state","replyBox","body","openReply","setState","onChange","e","preventDefault","target","value","handleReply","token","localStorage","getItem","headers","Authorization","withCredentials","patch","props","blogID","comment","_id","reply","username","userID","then","res","addReply","data","commentRef","catch","err","console","log","showReplyBox","width","render","like","replies","length","filter","mapStateToProps","persistedReducer","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Replies from \"./replies\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../axios-blogs\";\n\nclass Comment extends Component {\n  state = { replyBox: false, body: \"\" };\n  openReply = () => {\n    this.setState({ replyBox: !this.state.replyBox });\n  };\n  onChange = e => {\n    e.preventDefault();\n    this.setState({ body: e.target.value });\n  };\n  handleReply = () => {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n        withCredentials: true\n      }\n    };\n    axios\n      .patch(\n        `/api/posts/comments/reply/${this.props.blogID}?commentId=${\n          this.props.comment._id\n        }`,\n        {\n          reply: {\n            body: this.state.body,\n            username: this.props.username,\n            userID: this.props.userID\n          }\n        },\n        headers\n      )\n      .then(res => {\n        this.props.addReply({\n          ...res.data,\n          commentRef: this.props.comment._id\n        });\n        this.setState({ body: \"\" });\n      })\n      .catch(err => {\n        console.log(err);\n        console.log(\"error\");\n      });\n  };\n  showReplyBox = () => {\n    if (this.state.replyBox) {\n      return (\n        <div className=\"field has-addons\">\n          <div class=\"control\" style={{ width: \"100%\" }}>\n            <input\n              class=\"input is-rounded\"\n              type=\"text\"\n              placeholder=\"reply something...\"\n              onChange={this.onChange}\n              value={this.state.body}\n            />\n          </div>\n          <div class=\"control\">\n            <a class=\"button is-info\" onClick={this.handleReply}>\n              <i class=\"fas fa-reply\" />\n            </a>\n          </div>\n        </div>\n      );\n    }\n  };\n  render() {\n    return (\n      <article className=\"media\">\n        <figure className=\"media-left\">\n          <p className=\"image is-64x64\">\n            <img\n              src=\"https://bulma.io/images/placeholders/128x128.png\"\n              alt=\"placeholder\"\n            />\n          </p>\n        </figure>\n        <div className=\"media-content\">\n          <div className=\"content\">\n            <p>\n              <strong>{this.props.comment.username}</strong>\n              <br />\n              {this.props.comment.body}\n              <br />\n              <small>\n                <a>{`Like ${this.props.comment.like}`}</a> ·{\" \"}\n                <a onClick={this.openReply}>Reply</a> · 3 hrs\n              </small>\n            </p>\n            {this.showReplyBox()}\n          </div>\n          {this.props.replies.length > 0 ? (\n            <Replies\n              replies={this.props.replies.filter(\n                reply => reply.commentRef === this.props.comment._id\n              )}\n            />\n          ) : null}\n        </div>\n      </article>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    replies: state.persistedReducer.replies,\n    userID: state.persistedReducer.userID,\n    username: state.persistedReducer.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addReply: reply => dispatch({ type: \"ADDREPLY\", reply: reply })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Comment);\n"]},"metadata":{},"sourceType":"module"}