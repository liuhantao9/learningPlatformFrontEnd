{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/resetpassword/ResetPasswordPage.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"../../axios/axios-blogs\";\nimport Modal from \"react-responsive-modal\";\nimport Timer from \"react-compound-timer\";\nexport default class ResetPasswordPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, type) => {\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleUserNotFound = e => {\n      this.setState({\n        userNotFound: true\n      });\n    };\n\n    this.handleCloseModal = type => {\n      this.setState({\n        [type]: false\n      });\n    };\n\n    this.handleEmailSubmit = e => {\n      e.preventDefault();\n      axios({\n        method: \"POST\",\n        url: \"/api/users/reset-send-email\",\n        data: {\n          email: this.state.email\n        },\n        headers: \"\"\n      }).then(res => {\n        if (this.state.sent % 3 === 0) {\n          this.setState({\n            sent: this.state.sent + 1\n          });\n        }\n\n        localStorage.setItem(\"token\", res.data.token);\n      }).catch(err => {\n        if (this.state.sent % 3 === 0) {\n          this.handleUserNotFound(e);\n        }\n\n        console.log(err);\n      });\n    };\n\n    this.handlePwdError = e => {\n      this.setState({\n        PwdError: true\n      });\n    };\n\n    this.handlePasswordSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password,\n            passwordAgain = _this$state.passwordAgain,\n            confirmation = _this$state.confirmation;\n      axios({\n        method: \"POST\",\n        url: \"/api/users/reset-password\",\n        data: {\n          email: email,\n          password: password,\n          passwordAgain: passwordAgain,\n          confirmation: confirmation\n        },\n        headers: \"\"\n      }).then(res => {\n        this.setState({\n          sent: this.state.sent + 1,\n          email: \"\",\n          password: \"\",\n          passwordAgain: \"\",\n          confirmation: \"\"\n        });\n        localStorage.setItem(\"token\", res.data.token);\n      }).catch(err => {\n        this.setState({\n          errStatus: err.response.status\n        });\n        this.handlePwdError(e);\n        console.log(err.response.status);\n      });\n    };\n\n    this.handleResent = e => {\n      this.setState({\n        resent: true\n      });\n      this.handleEmailSubmit(e);\n    };\n\n    this.MatchedPassword = () => {\n      if (!this.state.password || !this.state.passwordAgain) return;\n\n      if (this.state.password !== this.state.passwordAgain) {\n        return React.createElement(\"p\", {\n          className: \"help is-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Passwords are not matched\");\n      } else {\n        return React.createElement(\"p\", {\n          className: \"help is-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Passwords match\");\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEmailSubmit = this.handleEmailSubmit.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordAgain: \"\",\n      confirmation: \"\",\n      sent: 0,\n      userNotFound: false,\n      PwdError: false,\n      resent: false,\n      errStatus: \"\"\n    };\n  }\n\n  getData() {\n    setTimeout(() => {\n      console.log('Our data is fetched');\n      this.setState({\n        resent: false\n      });\n    }, 59000);\n  }\n\n  componentDidUpdate(prevStates) {\n    if (this.state.resent === true && this.state.resent !== prevStates.resent) {\n      this.getData();\n    }\n  }\n\n  render() {\n    let error; //handles different error\n\n    switch (this.state.errStatus) {\n      case 401:\n        error = \"The Comfirmation Code Don't Match, Please Double Check!\";\n        break;\n\n      case 403:\n        error = \"The Password is Currently Using, Please Reset to Some Other Password!\";\n        break;\n\n      case 491:\n        error = \"The Passwords Need to Be Matched, Please Re-Enter!\";\n        break;\n\n      default:\n        break;\n    }\n\n    let resent = React.createElement(\"button\", {\n      className: \"button is-primary\",\n      onClick: e => this.handleResent(e),\n      style: {\n        marginLeft: \"5px\",\n        fontSize: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Resend Confirmation\");\n\n    if (this.state.resent) {\n      resent = React.createElement(\"span\", {\n        className: \"button is-light\",\n        style: {\n          marginLeft: \"5px\",\n          fontSize: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Timer, {\n        initialTime: 59000,\n        direction: \"backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, () => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Resend Confirmation (\", React.createElement(Timer.Seconds, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), \")\")));\n    }\n\n    let display;\n\n    if (this.state.sent % 3 === 0) {\n      display = React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10 col-sm-7 col-md-5 col-lg-4\",\n        style: {\n          paddingRight: \"1.2%\",\n          paddingLeft: \"1%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"If you\\u2018d like to reset your password, please enter your email here and a link to do so will be sent to the address you enter.\"), React.createElement(\"form\", {\n        onSubmit: this.handleEmailSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"input\", {\n        className: \"input is-primary\",\n        type: \"email\",\n        onChange: e => this.handleChange(e, \"email\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Please enter your email address...\",\n        required: true,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          paddingTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"button is-primary\",\n        style: {\n          fontSize: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Reset Password\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"button is-primary\",\n        style: {\n          margin: \"auto auto\",\n          marginLeft: \"5px\",\n          fontSize: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Cancel\")))));\n    } else if (this.state.sent % 3 === 1) {\n      display = React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10 col-sm-7 col-md-5 col-lg-4\",\n        style: {\n          paddingRight: \"1.2%\",\n          paddingLeft: \"1%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handlePasswordSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Please enter the new password you want to set as well as the six-digit confirmation code that we have sent to you email address\"), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        className: \"contorl input is-primary\",\n        type: \"password\",\n        onChange: e => this.handleChange(e, \"password\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase enter new password...\",\n        required: true,\n        value: this.state.password,\n        minLength: \"8\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Re-enter Password\"), React.createElement(\"input\", {\n        className: \"contorl input is-primary\",\n        type: \"password\",\n        onChange: e => this.handleChange(e, \"passwordAgain\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase re-enter the password...\",\n        required: true,\n        value: this.state.passwordAgain,\n        minLength: \"8\",\n        maxLength: \"20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), this.MatchedPassword(), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Confirmation Code\"), React.createElement(\"input\", {\n        className: \"input is-primary\",\n        name: \"confirmation\",\n        onChange: e => this.handleChange(e, \"confirmation\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase enter new password...\",\n        required: true,\n        type: \"text\",\n        value: this.state.confirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          paddingTop: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"button is-primary\",\n        style: {\n          fontSize: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Reset Password\"), resent, React.createElement(Link, {\n        to: \"/\",\n        className: \"button is-primary\",\n        style: {\n          marginLeft: \"5px\",\n          fontSize: \"1rem\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Cancel\")))));\n    } else if (this.state.sent % 3 === 2) {\n      display = React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: \"10%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"far fa-check-circle \",\n        style: {\n          color: \"green\",\n          fontSize: \"100px\",\n          margin: \"auto auto \"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          marginTop: \"10%\",\n          margin: \"auto auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Password Successfully Updated\"), React.createElement(Link, {\n        to: \"/\",\n        className: \"button is-success\",\n        style: {\n          marginTop: \"10%\",\n          width: \"10%\",\n          margin: \"auto auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Main Page\"));\n    }\n\n    const modalBg = {\n      modal: {\n        borderRadius: \"2%\",\n        height: \"50px\",\n        padding: \"5px 5px 5px 5px\",\n        display: \"inpline-block\",\n        textAlign: \"center\"\n      }\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, display, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      open: this.state.userNotFound,\n      onClose: e => this.handleCloseModal(\"userNotFound\"),\n      center: true,\n      styles: modalBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        padding: \"0.5% 60px 10px 50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, \"We Can't Find User According to the Input Email Address, Please Double Check!\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      open: this.state.PwdError,\n      onClose: e => this.handleCloseModal(\"PwdError\"),\n      center: true,\n      styles: modalBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        padding: \"0.5% 60px 10px 50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, error))));\n  }\n\n}","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/resetpassword/ResetPasswordPage.jsx"],"names":["React","Component","Link","axios","Modal","Timer","ResetPasswordPage","constructor","props","handleChange","e","type","setState","target","value","handleUserNotFound","userNotFound","handleCloseModal","handleEmailSubmit","preventDefault","method","url","data","email","state","headers","then","res","sent","localStorage","setItem","token","catch","err","console","log","handlePwdError","PwdError","handlePasswordSubmit","password","passwordAgain","confirmation","errStatus","response","status","handleResent","resent","MatchedPassword","bind","getData","setTimeout","componentDidUpdate","prevStates","render","error","marginLeft","fontSize","display","paddingRight","paddingLeft","handleKeyPress","paddingTop","margin","flexDirection","marginTop","color","width","modalBg","modal","borderRadius","height","padding","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"../../axios/axios-blogs\";\nimport Modal from \"react-responsive-modal\";\nimport Timer from \"react-compound-timer\";\n\nexport default class ResetPasswordPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleEmailSubmit = this.handleEmailSubmit.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordAgain: \"\",\n      confirmation: \"\",\n      sent: 0,\n      userNotFound: false,\n      PwdError: false,\n      resent: false,\n      errStatus: \"\"\n    };\n  }\n\n  handleChange = (e, type) => {\n    this.setState({ [type]: e.target.value });\n  };\n\n\n  handleUserNotFound = (e) => {\n    this.setState({ userNotFound: true })\n  }\n\n  handleCloseModal = (type) => {\n    this.setState({[type]: false})\n  } \n\n  handleEmailSubmit = e => {\n    e.preventDefault();\n    axios({\n      method: \"POST\",\n      url: \"/api/users/reset-send-email\",\n      data: {\n        email: this.state.email\n      },\n      headers: \"\"\n    })\n      .then(res => {\n        if (this.state.sent % 3 === 0) {\n          this.setState({\n            sent: this.state.sent + 1\n          });\n        }\n        localStorage.setItem(\"token\", res.data.token);\n      })\n      .catch(err => {\n        if (this.state.sent % 3 === 0) {\n          this.handleUserNotFound(e);\n        }\n        console.log(err);\n      });\n  };\n\n  handlePwdError = (e) => {\n    this.setState({ PwdError: true });\n  }\n\n  handlePasswordSubmit = e => {\n    e.preventDefault();\n    const { email, password, passwordAgain, confirmation } = this.state;\n    axios({\n      method: \"POST\",\n      url: \"/api/users/reset-password\",\n      data: {\n        email: email,\n        password: password,\n        passwordAgain: passwordAgain,\n        confirmation: confirmation\n      },\n      headers: \"\"\n    })\n      .then(res => {\n        this.setState({\n          sent: this.state.sent + 1,\n          email: \"\",\n          password: \"\",\n          passwordAgain: \"\",\n          confirmation: \"\"\n        });\n        localStorage.setItem(\"token\", res.data.token);\n      })\n      .catch(err => {\n        this.setState({ errStatus: err.response.status })\n        this.handlePwdError(e);\n        console.log(err.response.status);\n      });\n  };\n\n  handleResent = (e) => {\n    this.setState({ resent: true })\n    this.handleEmailSubmit(e);\n  }\n\n  getData(){\n    setTimeout(() => {\n      console.log('Our data is fetched');\n      this.setState({\n        resent: false\n      })\n    }, 59000)\n  }\n\n  componentDidUpdate(prevStates) {\n    if (this.state.resent === true && this.state.resent !== prevStates.resent) {\n      this.getData();\n    }\n  }\n\n  MatchedPassword = () => {\n    if (!this.state.password || !this.state.passwordAgain) return;\n    if (this.state.password !== this.state.passwordAgain) {\n      return <p className=\"help is-danger\">Passwords are not matched</p>;\n    } else {\n      return <p className=\"help is-success\">Passwords match</p>;\n    }\n  };\n\n  render() {\n\n    let error;\n    //handles different error\n    switch (this.state.errStatus) {\n      case 401:\n        error = \"The Comfirmation Code Don't Match, Please Double Check!\";\n        break;\n      case 403:\n        error = \"The Password is Currently Using, Please Reset to Some Other Password!\";\n        break;\n      case 491:\n        error = \"The Passwords Need to Be Matched, Please Re-Enter!\";\n        break;\n      default:\n        break;\n    }\n\n    let resent = (\n      <button \n        className=\"button is-primary\" \n        onClick={e => this.handleResent(e)} \n        style={{\n          marginLeft: \"5px\",\n          fontSize: \"1rem\"\n        }}\n      >\n        Resend Confirmation\n      </button>\n    )\n    if (this.state.resent) {\n      resent = (\n        <span className=\"button is-light\"\n          style={{\n            marginLeft: \"5px\",\n            fontSize: \"1rem\"\n          }}\n        >\n          <Timer\n            initialTime={59000}\n            direction=\"backward\"\n          >\n              {() => (\n                  <React.Fragment>\n                      Resend Confirmation (<Timer.Seconds />)\n                  </React.Fragment>\n              )}\n          </Timer>\n        </span>\n      )\n    }\n\n    let display;\n    if (this.state.sent % 3 === 0) {\n      display = (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 col-sm-7 col-md-5 col-lg-4\" style={{ paddingRight: \"1.2%\", paddingLeft:\"1%\" }}>\n            <p>\n              If you‘d like to reset your password, please enter your email here\n              and a link to do so will be sent to the address you enter.\n            </p>\n            <form onSubmit={this.handleEmailSubmit}>\n              <label className=\"label\">Email</label>\n              <input\n                className=\"input is-primary\"\n                type=\"email\"\n                onChange={e => this.handleChange(e, \"email\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Please enter your email address...\"\n                required\n                value={this.state.email}\n              />\n              <div style={{ paddingTop: \"15px\" }}>\n                <button type=\"submit\" className=\"button is-primary\" style={{ fontSize: \"1rem\" }}>\n                  Reset Password\n                </button>\n                <Link \n                  to=\"/\"\n                  className=\"button is-primary\"\n                  style={{\n                    margin: \"auto auto\",\n                    marginLeft: \"5px\",\n                    fontSize: \"1rem\"\n                  }}\n                >\n                  Cancel\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    } else if (this.state.sent % 3 === 1) {\n      display = (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 col-sm-7 col-md-5 col-lg-4\" style={{ paddingRight: \"1.2%\", paddingLeft:\"1%\" }}>\n            <form onSubmit={this.handlePasswordSubmit} >\n              <p>\n                Please enter the new password you want to set as well as the\n                six-digit confirmation code that we have sent to you email\n                address\n              </p>\n              <label className=\"label\">Password</label>\n              <input\n                className=\"contorl input is-primary\"\n                type=\"password\"\n                onChange={e => this.handleChange(e, \"password\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase enter new password...\"\n                required\n                value={this.state.password}\n                minLength=\"8\"\n                maxLength=\"20\"\n              />\n              <label className=\"label\">Re-enter Password</label>\n              <input\n                className=\"contorl input is-primary\"\n                type=\"password\"\n                onChange={e => this.handleChange(e, \"passwordAgain\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase re-enter the password...\"\n                required\n                value={this.state.passwordAgain}\n                minLength=\"8\"\n                maxLength=\"20\"\n              />\n              {this.MatchedPassword()}\n              <label className=\"label\">Confirmation Code</label>\n              <input\n                className=\"input is-primary\"\n                name=\"confirmation\"\n                onChange={e => this.handleChange(e, \"confirmation\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase enter new password...\"\n                required\n                type=\"text\"\n                value={this.state.confirmation}\n              />\n              <div style={{ paddingTop: \"15px\" }}>\n                <button type=\"submit\" className=\"button is-primary\" style={{ fontSize: \"1rem\" }}>\n                  Reset Password\n                </button>\n                {resent}\n                <Link \n                  to=\"/\"\n                  className=\"button is-primary\"\n                  style={{\n                    marginLeft: \"5px\",\n                    fontSize: \"1rem\"\n                  }}\n                >\n                  Cancel\n                </Link>\n              </div>\n            </form>\n          </div>\n        </div>\n      );\n    } else if (this.state.sent % 3 === 2) {\n      display = (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: \"10%\"\n          }}\n        >\n          <i\n            className=\"far fa-check-circle \"\n            style={{\n              color: \"green\",\n              fontSize: \"100px\",\n              margin: \"auto auto \"\n            }}\n          />\n          <p\n            style={{\n              marginTop: \"10%\",\n              margin: \"auto auto\"\n            }}\n          >\n            Password Successfully Updated\n          </p>\n\n          <Link\n            to=\"/\"\n            className=\"button is-success\"\n            style={{\n              marginTop: \"10%\",\n              width: \"10%\",\n              margin: \"auto auto\"\n            }}\n          >\n            Main Page\n          </Link>\n        </div>\n      );\n    }\n\n    const modalBg = {\n      modal: {\n        borderRadius: \"2%\",\n        height:\"50px\",\n        padding: \"5px 5px 5px 5px\",\n        display: \"inpline-block\", \n        textAlign: \"center\"\n      }\n    };\n\n    return (\n      <React.Fragment>\n        {display}\n        <div>\n          <Modal\n            open={this.state.userNotFound}\n            onClose={e => this.handleCloseModal(\"userNotFound\")}\n            center\n            styles={modalBg}\n          >\n            <h2 style={{ padding:\"0.5% 60px 10px 50px\" }}>\n              We Can't Find User According to the Input Email Address, Please Double Check!\n            </h2>\n          </Modal>\n        </div>\n        <div>\n          <Modal\n            open={this.state.PwdError}\n            onClose={e => this.handleCloseModal(\"PwdError\")}\n            center\n            styles={modalBg}\n          >\n            <h2 style={{ padding:\"0.5% 60px 10px 50px\" }}>\n              {error}\n            </h2>\n          </Modal>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}