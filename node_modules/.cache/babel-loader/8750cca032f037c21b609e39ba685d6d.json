{"ast":null,"code":"import _objectWithoutProperties from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/searchTags/tagsearch.jsx\";\nimport React, { Component } from 'react';\nimport algoliasearch from \"algoliasearch\";\nimport \"instantsearch.css/themes/algolia.css\";\nimport { InstantSearch, Highlight, connectHits, Configure } from 'react-instantsearch-dom';\nimport CustomSearchBox from './searchbox';\nimport Flexbox from 'flexbox-react';\nconst searchClient = algoliasearch(process.env.REACT_APP_APPLICATION_ID, process.env.REACT_APP_SEARCH_ADMIN_API);\n\nconst TagSearch = (_ref) => {\n  let tags = _ref.tags,\n      hitsDisplay = _ref.hitsDisplay,\n      styles = _ref.styles,\n      props = _objectWithoutProperties(_ref, [\"tags\", \"hitsDisplay\", \"styles\"]);\n\n  openDisplay = () => {\n    this.setState({\n      hitsDisplay: true\n    });\n  };\n\n  closeDisplay = () => {\n    this.setState({\n      hitsDisplay: false\n    });\n  };\n\n  handleRemoveItem = target => {\n    this.setState(state => ({\n      tags: state.tags.filter(tag => tag !== target)\n    }));\n  };\n\n  handleSelect = value => {\n    if (this.state.tags.indexOf(value) === -1) {\n      this.setState(prevState => ({\n        tags: [...prevState.tags, value]\n      }));\n    }\n\n    ;\n  };\n\n  const HitComponent = ({\n    hit,\n    handleSelect\n  }) => {\n    return React.createElement(\"div\", {\n      className: \"column box\",\n      style: styles.hit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: () => handleSelect(hit.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Highlight, {\n      attribute: \"name\",\n      hit: hit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  };\n\n  const MyHits = connectHits(({\n    hits,\n    handleSelect\n  }) => {\n    const hs = hits.map(hit => React.createElement(HitComponent, {\n      key: hit.objectID,\n      hit: hit,\n      handleSelect: handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      id: \"hits\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, hs);\n  });\n  let inputTags = tags.map(tag => React.createElement(\"li\", {\n    key: tag,\n    style: styles.items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, tag, React.createElement(\"button\", {\n    onClick: () => handleRemoveItem(tag),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"(x)\")));\n  let result = React.createElement(\"div\", {\n    className: \"container-fluid\",\n    id: \"results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  });\n\n  if (hitsDisplay) {\n    result = React.createElement(Flexbox, {\n      flexDirection: \"column\",\n      minHeight: \"100vh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"rows\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(MyHits, {\n      handleSelect: handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(InstantSearch, {\n    indexName: \"tags\",\n    searchClient: searchClient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Configure, {\n    hitsPerPage: 12,\n    analytics: true,\n    distinct: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(CustomSearchBox, {\n    styles: styles,\n    openDisplay: openDisplay,\n    closeDisplay: closeDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Flexbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, inputTags), result);\n};\n\nexport default TagSearch;","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/searchTags/tagsearch.jsx"],"names":["React","Component","algoliasearch","InstantSearch","Highlight","connectHits","Configure","CustomSearchBox","Flexbox","searchClient","process","env","REACT_APP_APPLICATION_ID","REACT_APP_SEARCH_ADMIN_API","TagSearch","tags","hitsDisplay","styles","props","openDisplay","setState","closeDisplay","handleRemoveItem","target","state","filter","tag","handleSelect","value","indexOf","prevState","HitComponent","hit","name","MyHits","hits","hs","map","objectID","inputTags","items","result"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport algoliasearch from \"algoliasearch\";\nimport \"instantsearch.css/themes/algolia.css\";\nimport {\n  InstantSearch,\n  Highlight,\n  connectHits,\n  Configure\n} from 'react-instantsearch-dom';\nimport CustomSearchBox from './searchbox';\nimport Flexbox from 'flexbox-react';\n\nconst searchClient = algoliasearch(\n  process.env.REACT_APP_APPLICATION_ID,\n  process.env.REACT_APP_SEARCH_ADMIN_API\n);\n\n\nconst TagSearch = ({ tags, hitsDisplay, styles, ...props }) => {\n\n  openDisplay = () => {\n    this.setState({ hitsDisplay: true })\n  }\n\n  closeDisplay = () => {\n    this.setState({ hitsDisplay: false })\n  }\n\n  handleRemoveItem = (target) => {\n    this.setState(state => ({\n      tags: state.tags.filter((tag) => tag !== target)\n    }));\n  }\n\n  handleSelect = value => {\n    if (this.state.tags.indexOf(value) === -1) {\n      this.setState(prevState => ({ \n        tags:[...prevState.tags, value]\n      }));\n    };\n  }\n\n  const HitComponent = ({ hit, handleSelect }) => {\n    return (\n      <div className=\"column box\" style={styles.hit}>\n        <div \n          onClick={() => handleSelect(hit.name)}\n        >\n          <Highlight attribute=\"name\" hit={hit} />\n        </div>\n      </div>\n    );\n  }\n  \n  const MyHits = connectHits(({ hits, handleSelect }) => {\n    const hs = hits.map(hit => <HitComponent \n                                  key={hit.objectID} \n                                  hit={hit} \n                                  handleSelect={handleSelect}/>);\n    return <div id=\"hits\">{hs}</div>;\n  })\n\n  let inputTags = (\n    tags.map((tag) => \n      <li key={tag} style={styles.items}>\n        {tag}\n        <button\n          onClick={() => handleRemoveItem(tag)}\n        >\n          (x)\n        </button>\n      </li>\n    )\n  )\n\n  let result = (\n    <div className=\"container-fluid\" id=\"results\">\n\n    </div>\n  )\n\n  if (hitsDisplay) {\n    result = (\n      <Flexbox \n        flexDirection=\"column\" \n        minHeight=\"100vh\"\n      >\n        <div className=\"rows\">\n          <MyHits handleSelect={handleSelect}/>\n        </div>\n      </Flexbox>\n    )\n  }\n\n\n  return (\n    <InstantSearch indexName=\"tags\" searchClient={searchClient}>\n      <Configure hitsPerPage={12} analytics={true} distinct />\n      <CustomSearchBox\n        styles={styles}\n        openDisplay={openDisplay}\n        closeDisplay={closeDisplay}\n      />\n      <Flexbox>\n        {inputTags}\n      </Flexbox>\n      {result}\n\n    </InstantSearch>\n  )\n}\n\nexport default TagSearch"]},"metadata":{},"sourceType":"module"}