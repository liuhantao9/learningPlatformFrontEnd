{"ast":null,"code":"import _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  loggedIn: false,\n  signupOpen: false,\n  loginOpen: false,\n  contactUsOpen: false,\n  username: \"\",\n  userID: \"\",\n  likes: {},\n  likedPosts: []\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === \"LOGIN\") {\n    return _objectSpread({}, state, {\n      loggedIn: true,\n      userID: action.userID,\n      username: action.username,\n      likedPosts: action.likedPosts\n    });\n  }\n\n  if (action.type === \"LOGOUT\") {\n    return _objectSpread({}, state, {\n      loggedIn: false,\n      username: \"\"\n    });\n  }\n\n  if (action.type === \"SIGNUPMODAL\") {\n    return _objectSpread({}, state, {\n      signupOpen: !state.signupOpen\n    });\n  }\n\n  if (action.type === \"LOGINMODAL\") {\n    return _objectSpread({}, state, {\n      loginOpen: !state.loginOpen\n    });\n  }\n\n  if (action.type === \"CONTACTMODAL\") {\n    return _objectSpread({}, state, {\n      contactUsOpen: !state.contactUsOpen\n    });\n  }\n\n  if (action.type === \"GETHITS\") {\n    let temp = _objectSpread({}, state.likes);\n\n    action.hits.map(hit => {\n      if (!(hit.objectID in temp)) {\n        temp[hit.objectID] = hit.likes;\n      }\n    });\n    return _objectSpread({}, state, {\n      likes: temp\n    });\n  }\n\n  if (action.type === \"HANDLELIKE\") {\n    const delta = action.liked ? -1 : 1;\n    let newLikePosts = [...state.likedPosts];\n    action.liked ? newLikePosts = newLikePosts.filter(post => post !== action.id) : newLikePosts.push(action.id);\n    return _objectSpread({}, state, {\n      likes: _objectSpread({}, state.likes, {\n        [action.id]: state.likes[action.id] + delta\n      }),\n      likedPosts: newLikePosts\n    });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/store/reducer.js"],"names":["initialState","loggedIn","signupOpen","loginOpen","contactUsOpen","username","userID","likes","likedPosts","reducer","state","action","type","temp","hits","map","hit","objectID","delta","liked","newLikePosts","filter","post","id","push"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,KADS;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,aAAa,EAAE,KAJI;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,MAAM,EAAE,EANW;AAOnBC,EAAAA,KAAK,EAAE,EAPY;AAQnBC,EAAAA,UAAU,EAAE;AARO,CAArB;;AAWA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAChD,MAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,6BACKF,KADL;AAEET,MAAAA,QAAQ,EAAE,IAFZ;AAGEK,MAAAA,MAAM,EAAEK,MAAM,CAACL,MAHjB;AAIED,MAAAA,QAAQ,EAAEM,MAAM,CAACN,QAJnB;AAKEG,MAAAA,UAAU,EAAEG,MAAM,CAACH;AALrB;AAOD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,6BACKF,KADL;AAEET,MAAAA,QAAQ,EAAE,KAFZ;AAGEI,MAAAA,QAAQ,EAAE;AAHZ;AAKD;;AACD,MAAIM,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,6BACKF,KADL;AAEER,MAAAA,UAAU,EAAE,CAACQ,KAAK,CAACR;AAFrB;AAID;;AACD,MAAIS,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,6BACKF,KADL;AAEEP,MAAAA,SAAS,EAAE,CAACO,KAAK,CAACP;AAFpB;AAID;;AACD,MAAIQ,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,6BACKF,KADL;AAEEN,MAAAA,aAAa,EAAE,CAACM,KAAK,CAACN;AAFxB;AAID;;AACD,MAAIO,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B,QAAIC,IAAI,qBAAQH,KAAK,CAACH,KAAd,CAAR;;AACAI,IAAAA,MAAM,CAACG,IAAP,CAAYC,GAAZ,CAAgBC,GAAG,IAAI;AACrB,UAAI,EAAEA,GAAG,CAACC,QAAJ,IAAgBJ,IAAlB,CAAJ,EAA6B;AAC3BA,QAAAA,IAAI,CAACG,GAAG,CAACC,QAAL,CAAJ,GAAqBD,GAAG,CAACT,KAAzB;AACD;AACF,KAJD;AAKA,6BACKG,KADL;AAEEH,MAAAA,KAAK,EAAEM;AAFT;AAID;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,UAAMM,KAAK,GAAGP,MAAM,CAACQ,KAAP,GAAe,CAAC,CAAhB,GAAoB,CAAlC;AACA,QAAIC,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACF,UAAV,CAAnB;AACAG,IAAAA,MAAM,CAACQ,KAAP,GACKC,YAAY,GAAGA,YAAY,CAACC,MAAb,CAAoBC,IAAI,IAAIA,IAAI,KAAKX,MAAM,CAACY,EAA5C,CADpB,GAEIH,YAAY,CAACI,IAAb,CAAkBb,MAAM,CAACY,EAAzB,CAFJ;AAIA,6BACKb,KADL;AAEEH,MAAAA,KAAK,oBAAOG,KAAK,CAACH,KAAb;AAAoB,SAACI,MAAM,CAACY,EAAR,GAAab,KAAK,CAACH,KAAN,CAAYI,MAAM,CAACY,EAAnB,IAAyBL;AAA1D,QAFP;AAGEV,MAAAA,UAAU,EAAEY;AAHd;AAKD;;AAED,SAAOV,KAAP;AACD,CA9DD;;AAgEA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  loggedIn: false,\n  signupOpen: false,\n  loginOpen: false,\n  contactUsOpen: false,\n  username: \"\",\n  userID: \"\",\n  likes: {},\n  likedPosts: []\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === \"LOGIN\") {\n    return {\n      ...state,\n      loggedIn: true,\n      userID: action.userID,\n      username: action.username,\n      likedPosts: action.likedPosts\n    };\n  }\n  if (action.type === \"LOGOUT\") {\n    return {\n      ...state,\n      loggedIn: false,\n      username: \"\"\n    };\n  }\n  if (action.type === \"SIGNUPMODAL\") {\n    return {\n      ...state,\n      signupOpen: !state.signupOpen\n    };\n  }\n  if (action.type === \"LOGINMODAL\") {\n    return {\n      ...state,\n      loginOpen: !state.loginOpen\n    };\n  }\n  if (action.type === \"CONTACTMODAL\") {\n    return {\n      ...state,\n      contactUsOpen: !state.contactUsOpen\n    };\n  }\n  if (action.type === \"GETHITS\") {\n    let temp = { ...state.likes };\n    action.hits.map(hit => {\n      if (!(hit.objectID in temp)) {\n        temp[hit.objectID] = hit.likes;\n      }\n    });\n    return {\n      ...state,\n      likes: temp\n    };\n  }\n  if (action.type === \"HANDLELIKE\") {\n    const delta = action.liked ? -1 : 1;\n    let newLikePosts = [...state.likedPosts];\n    action.liked\n      ? (newLikePosts = newLikePosts.filter(post => post !== action.id))\n      : newLikePosts.push(action.id);\n\n    return {\n      ...state,\n      likes: { ...state.likes, [action.id]: state.likes[action.id] + delta },\n      likedPosts: newLikePosts\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}