{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/Login.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"../axios-blogs\";\nimport Modal from \"react-responsive-modal\";\nimport Spinner from \"./UI/Spinner/Spinner\";\nimport { connect } from \"react-redux\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: \"\",\n      email: \"\",\n      errStatus: \"\",\n      username: \"\",\n      loading: false\n    };\n\n    this.handleChange = (e, type) => {\n      if (type === \"email\" || type === \"password\") {\n        this.setState({\n          notMatched: false\n        });\n      }\n\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const user = {\n        user: {\n          email: email,\n          password: password\n        }\n      };\n      axios.post(\"/api/users/login\", user).then(res => {\n        this.setState({\n          loading: false,\n          email: \"\",\n          password: \"\"\n        });\n        this.props.handleLogIn(res.data.username, res.data.id, res.data.likedPosts, res.data.myPosts); //close modal\n\n        this.props.onSwitchLoginModal(); //save tokens\n\n        localStorage.setItem(\"token\", res.data.token);\n      }).catch(err => {\n        //Here we pass in status code into error, and we handle\n        //error codes by err.response\n        console.log(err);\n        this.setState({\n          loading: false,\n          errStatus: err.response.status\n        });\n      });\n    };\n  }\n\n  render() {\n    const modalBg = {\n      modal: {\n        background: \"white \",\n        borderRadius: \"10%\",\n        maxHeight: \"43%\",\n        height: \"100%\",\n        maxWidth: \"30%\",\n        width: \"100%\"\n      }\n    };\n\n    const userError = () => {\n      let body; //handles different error\n\n      switch (this.state.errStatus) {\n        case 458:\n          body = \"Account does not exist\";\n          break;\n\n        case 468:\n          body = \"Email and password not matched\";\n          break;\n\n        case 478:\n          body = \"Email has not been verified\";\n      }\n\n      return React.createElement(\"p\", {\n        className: \"help is-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" \", body);\n    };\n\n    let login = React.createElement(\"div\", {\n      style: {\n        padding: \"4%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-primary\",\n      type: \"email\",\n      placeholder: \"Your Email\",\n      required: true,\n      onChange: e => this.handleChange(e, \"email\"),\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-primary\",\n      type: \"password\",\n      placeholder: \"Your Password\",\n      minLength: \"8\",\n      maxLength: \"20\",\n      required: true,\n      onChange: e => this.handleChange(e, \"password\"),\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })))), userError(), React.createElement(\"div\", {\n      className: \"field is-grouped\",\n      style: {\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button is-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Login\")))));\n\n    if (this.state.loading) {\n      login = React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          paddingTop: \"25%\",\n          paddingBottom: \"25%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.props.loginOpen,\n      onClose: this.props.onSwitchLoginModal,\n      center: true,\n      styles: modalBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, login);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginOpen: state.persistedReducer.loginOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogIn: (username, userID, likedPosts, myPosts) => dispatch({\n      type: \"LOGIN\",\n      username: username,\n      userID: userID,\n      likedPosts: likedPosts,\n      myPosts: myPosts\n    }),\n    onSwitchLoginModal: () => dispatch({\n      type: \"LOGINMODAL\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/Login.jsx"],"names":["React","Component","axios","Modal","Spinner","connect","Login","state","password","email","errStatus","username","loading","handleChange","e","type","setState","notMatched","target","value","handleSubmit","preventDefault","user","post","then","res","props","handleLogIn","data","id","likedPosts","myPosts","onSwitchLoginModal","localStorage","setItem","token","catch","err","console","log","response","status","render","modalBg","modal","background","borderRadius","maxHeight","height","maxWidth","width","userError","body","login","padding","justifyContent","textAlign","paddingTop","paddingBottom","loginOpen","mapStateToProps","persistedReducer","mapDispatchToProps","dispatch","userID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"../axios-blogs\";\nimport Modal from \"react-responsive-modal\";\nimport Spinner from \"./UI/Spinner/Spinner\";\nimport { connect } from \"react-redux\";\nclass Login extends Component {\n  state = {\n    password: \"\",\n    email: \"\",\n    errStatus: \"\",\n    username: \"\",\n    loading: false\n  };\n\n  handleChange = (e, type) => {\n    if (type === \"email\" || type === \"password\") {\n      this.setState({ notMatched: false });\n    }\n    this.setState({ [type]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n    const { email, password } = this.state;\n    const user = {\n      user: {\n        email: email,\n        password: password\n      }\n    };\n    axios\n      .post(\"/api/users/login\", user)\n      .then(res => {\n        this.setState({ loading: false, email: \"\", password: \"\" });\n        this.props.handleLogIn(\n          res.data.username,\n          res.data.id,\n          res.data.likedPosts,\n          res.data.myPosts\n        );\n        //close modal\n        this.props.onSwitchLoginModal();\n        //save tokens\n        localStorage.setItem(\"token\", res.data.token);\n      })\n      .catch(err => {\n        //Here we pass in status code into error, and we handle\n        //error codes by err.response\n        console.log(err);\n        this.setState({\n          loading: false,\n          errStatus: err.response.status\n        });\n      });\n  };\n\n  render() {\n    const modalBg = {\n      modal: {\n        background: \"white \",\n        borderRadius: \"10%\",\n        maxHeight: \"43%\",\n        height: \"100%\",\n        maxWidth: \"30%\",\n        width: \"100%\"\n      }\n    };\n\n    const userError = () => {\n      let body;\n\n      //handles different error\n      switch (this.state.errStatus) {\n        case 458:\n          body = \"Account does not exist\";\n          break;\n        case 468:\n          body = \"Email and password not matched\";\n          break;\n        case 478:\n          body = \"Email has not been verified\";\n      }\n      return <p className=\"help is-danger\"> {body}</p>;\n    };\n\n    let login = (\n      <div style={{ padding: \"4%\" }}>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input is-primary\"\n                type=\"email\"\n                placeholder=\"Your Email\"\n                required\n                onChange={e => this.handleChange(e, \"email\")}\n                value={this.state.email}\n              />\n\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-envelope\" />\n              </span>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Password</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input is-primary\"\n                type=\"password\"\n                placeholder=\"Your Password\"\n                minLength=\"8\"\n                maxLength=\"20\"\n                required\n                onChange={e => this.handleChange(e, \"password\")}\n                value={this.state.password}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-key\" />\n              </span>\n            </div>\n          </div>\n          {userError()}\n          <div\n            className=\"field is-grouped\"\n            style={{ justifyContent: \"center\" }}\n          >\n            <div className=\"control\">\n              <button type=\"submit\" className=\"button is-primary\">\n                Login\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n    if (this.state.loading) {\n      login =\n        <div style={{ textAlign: \"center\", paddingTop: \"25%\", paddingBottom: \"25%\" }}>\n          <Spinner />\n        </div>\n    }\n    return (\n      <Modal\n        className=\"modal-lg\"\n        open={this.props.loginOpen}\n        onClose={this.props.onSwitchLoginModal}\n        center\n        styles={modalBg}\n      >\n        {login}\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginOpen: state.persistedReducer.loginOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogIn: (username, userID, likedPosts, myPosts) =>\n      dispatch({\n        type: \"LOGIN\",\n        username: username,\n        userID: userID,\n        likedPosts: likedPosts,\n        myPosts: myPosts\n      }),\n    onSwitchLoginModal: () => dispatch({ type: \"LOGINMODAL\" })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}