{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/comment/comment.jsx\";\nimport React from \"react\";\nimport Replies from \"./replies\";\nimport { connect } from \"react-redux\";\n\nconst Comment = props => {\n  return React.createElement(\"article\", {\n    className: \"media\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"figure\", {\n    className: \"media-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"image is-64x64\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"https://bulma.io/images/placeholders/128x128.png\",\n    alt: \"placeholder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"media-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.comment.username), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), props.comment.body, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Like \".concat(props.comment.like)), \" \\xB7 \", React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Reply\"), \" \\xB7 3 hrs\"))), props.replies.length > 0 ? React.createElement(Replies, {\n    replies: props.replies.filter(reply => reply.commentRef === props.comment._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }) : null));\n};\n\nconst mapStateToProps = state => {\n  return {\n    replies: state.persistedReducer.replies\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: body => dispatch({\n      type: \"ADDCOMMENT\",\n      body: body\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comment);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/comment/comment.jsx"],"names":["React","Replies","connect","Comment","props","comment","username","body","like","replies","length","filter","reply","commentRef","_id","mapStateToProps","state","persistedReducer","mapDispatchToProps","dispatch","addComment","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,SACE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAC,kDADN;AAEE,IAAA,GAAG,EAAC,aAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,KAAK,CAACC,OAAN,CAAcC,QAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGF,KAAK,CAACC,OAAN,CAAcE,IAHjB,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYH,KAAK,CAACC,OAAN,CAAcG,IAA1B,EADF,YAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAD1C,gBALF,CADF,CADF,EAYGJ,KAAK,CAACK,OAAN,CAAcC,MAAd,GAAuB,CAAvB,GACC,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEN,KAAK,CAACK,OAAN,CAAcE,MAAd,CACPC,KAAK,IAAIA,KAAK,CAACC,UAAN,KAAqBT,KAAK,CAACC,OAAN,CAAcS,GADrC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAMG,IAlBN,CATF,CADF;AAgCD,CAjCD;;AAmCA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,OAAO,EAAEO,KAAK,CAACC,gBAAN,CAAuBR;AAD3B,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,UAAU,EAAEb,IAAI,IAAIY,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,YAAR;AAAsBd,MAAAA,IAAI,EAAEA;AAA5B,KAAD;AADvB,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CACpBa,eADoB,EAEpBG,kBAFoB,CAAP,CAGbf,OAHa,CAAf","sourcesContent":["import React from \"react\";\nimport Replies from \"./replies\";\nimport { connect } from \"react-redux\";\n\nconst Comment = props => {\n  return (\n    <article className=\"media\">\n      <figure className=\"media-left\">\n        <p className=\"image is-64x64\">\n          <img\n            src=\"https://bulma.io/images/placeholders/128x128.png\"\n            alt=\"placeholder\"\n          />\n        </p>\n      </figure>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          <p>\n            <strong>{props.comment.username}</strong>\n            <br />\n            {props.comment.body}\n            <br />\n            <small>\n              <a>{`Like ${props.comment.like}`}</a> · <a>Reply</a> · 3 hrs\n            </small>\n          </p>\n        </div>\n        {props.replies.length > 0 ? (\n          <Replies\n            replies={props.replies.filter(\n              reply => reply.commentRef === props.comment._id\n            )}\n          />\n        ) : null}\n      </div>\n    </article>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    replies: state.persistedReducer.replies\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: body => dispatch({ type: \"ADDCOMMENT\", body: body })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Comment);\n"]},"metadata":{},"sourceType":"module"}