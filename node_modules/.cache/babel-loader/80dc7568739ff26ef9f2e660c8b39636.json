{"ast":null,"code":"import _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx\";\nimport axios from \"../../axios-blogs\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport image from \"../../assets/img/logo.jpg\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport withHandler from \"../UI/ErrorHandler/ErrorHandler\";\nimport { openDisplay, closeDisplay, addTag, removeTag, handlePosted } from \"../../actions/tagActions\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePost = () => {// if (this.state.tags.length === 0 || this.state.tags.length >= 4) {\n      //   this.setState({ \n      //     ...this.state,\n      //     tagError: true \n      //   });\n      // } else {\n      //   const token = localStorage.getItem(\"token\");\n      //   const post = {\n      //     author: this.props.username,\n      //     title: this.state.title,\n      //     content: this.state.content,\n      //     tags: this.props.tagReducer.tags || []\n      //   };\n      //   this.setState({ loading: true });\n      //   const headers = {\n      //     headers: {\n      //       \"Content-Type\": \"application/json\",\n      //       Authorization: `Token ${token}`\n      //     }\n      //   };\n      //   axios\n      //     .post(\"/api/posts\", post, headers)\n      //     .then(res => {\n      //       axios\n      //         .post(\n      //           `/api/users/myPosts/${this.props.userID}`,\n      //           { postID: res.data._id },\n      //           headers\n      //         )\n      //         .then(res => {\n      //           //cannot divide the call into two setState calls\n      //           this.setState({ loading: false, posted: true });\n      //         })\n      //         .catch(err => {\n      //           console.log(err);\n      //           this.setState({ loading: false });\n      //         });\n      //       var updatedMyPosts = [...this.props.myPosts];\n      //       updatedMyPosts.push(res.data._id);\n      //       var updatedMyPostsDetail = [...this.props.myPostsDetail]\n      //       updatedMyPostsDetail.push(res.data)\n      //       this.props.handleUpdatedMyPosts(updatedMyPostsDetail, updatedMyPosts);\n      //     })\n      //     .catch(err => {\n      //       this.setState({ loading: false });\n      //     });\n      //   this.props.handlePosted();\n      // }\n    };\n\n    this.updateContent = value => {\n      this.setState({\n        content: value\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        warning: true\n      });\n    };\n\n    this.handlePostCancel = () => {\n      this.props.handlePosted();\n    };\n\n    this.onCloseModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        warning: false,\n        tagError: false\n      }));\n    };\n\n    this.handleTitle = e => {\n      e.preventDefault();\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\",\n      loading: false,\n      tagError: false\n    };\n    this.handlePost = this.handlePost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n  }\n\n  successPosted() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-check-circle \",\n      style: {\n        color: \"green\",\n        fontSize: \"100px\",\n        margin: \"auto auto \"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginTop: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Successfully Posted\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"button is-success\",\n      style: {\n        marginTop: \"10%\",\n        width: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Main Page\"));\n  }\n\n  render() {\n    let inputTags = this.props.tagReducer.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      style: styles.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, tag, React.createElement(\"button\", {\n      onClick: () => this.props.removeTag(tag),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"(x)\")));\n    let selection = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    });\n\n    if (this.props.tagReducer.tags.length === 0) {\n      selection = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }));\n    } else {\n      selection = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, inputTags, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar\",\n      role: \"navigation\",\n      \"aria-label\": \"main navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-brand\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      width: \"112\",\n      height: \"48\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"navbarBasicExample\",\n      className: \"navbar-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(DropDown, {\n      lists: [\"Save\", \"Draft\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"25%\",\n        paddingBottom: \"25%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })) : this.state.posted ? this.successPosted() : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      className: \"input is-rounded\",\n      type: \"text\",\n      required: true,\n      minLength: \"5\",\n      value: this.state.title,\n      onChange: this.handleTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Editor, {\n      updateContent: this.updateContent,\n      value: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })), selection, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Tags\"), React.createElement(TagSearch, {\n      hitsDisplay: this.props.tagReducer.hitsDisplay,\n      tags: this.props.tagReducer.tags,\n      handleSelect: tag => this.props.addTag(tag),\n      handleRemoveItem: tag => this.props.removeTag(tag),\n      openDisplay: () => this.props.openDisplay(),\n      closeDisplay: () => this.props.closeDisplay(),\n      styles: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"level-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Post\"), React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      type: \"button\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Cancel\"))))), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.warning,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Warning\")), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Your Post Will Not Be Saved\"), React.createElement(Link, {\n      className: \"button is-link\",\n      onClick: this.handlePostCancel,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Okay, I Got It\"))), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.tagError,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Warning\")), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Please Limit your tags number from 1 to 3\"), React.createElement(\"button\", {\n      className: \"button is-link\",\n      onClick: this.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Okay, I Got It\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.persistedReducer.username,\n    tagReducer: state.tagReducer,\n    userID: state.persistedReducer.userID,\n    myPosts: state.persistedReducer.myPosts,\n    myPostsDetail: state.persistedReducer.myPostsDetail\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDisplay: () => {\n      dispatch(openDisplay());\n    },\n    closeDisplay: () => {\n      dispatch(closeDisplay());\n    },\n    addTag: tag => {\n      dispatch(addTag(tag));\n    },\n    removeTag: tag => {\n      dispatch(removeTag(tag));\n    },\n    handlePosted: () => {\n      dispatch(handlePosted());\n    },\n    handleUpdatedMyPosts: (updatedMyPostsDetail, updatedMyPosts) => dispatch({\n      type: \"USERMYPOSTSUPDATED\",\n      myPostsDetail: updatedMyPostsDetail,\n      myPosts: updatedMyPosts\n    })\n  };\n};\n\nconst styles = {\n  container: {\n    border: \"1px solid #ddd\",\n    padding: \"5px\",\n    borderRadius: \"5px\"\n  },\n  hitStyle: {\n    margin: \"3% 1% 0 1%\"\n  },\n  input: {\n    outline: \"none\",\n    border: \"none\",\n    fontSize: \"14px\",\n    fontFamily: \"Helvetica, sans-serif\"\n  },\n  items: {\n    display: \"inline-block\",\n    padding: \"2px\",\n    border: \"1px solid blue\",\n    fontFamily: \"Helvetica, sans-serif\",\n    borderRadius: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n  hit: {\n    width: \"30%\",\n    height: \"10%\",\n    float: \"left\",\n    marginBottom: \"10px\",\n    borderBottom: \"solid 1px #eee\",\n    margin: \"0.5%\",\n    border: \"solid 1px #eee\",\n    boxShadow: \"0 0 3px #f6f6f6\",\n    position: \"relative\",\n    fontSize: \"14px\"\n  }\n};\nexport default withHandler(connect(mapStateToProps, mapDispatchToProps)(Publish), axios);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx"],"names":["axios","React","Component","Editor","Link","image","DropDown","Spinner","Modal","connect","TagSearch","withHandler","openDisplay","closeDisplay","addTag","removeTag","handlePosted","Publish","constructor","props","handlePost","updateContent","value","setState","content","handleCancel","warning","handlePostCancel","onCloseModal","state","tagError","handleTitle","e","preventDefault","title","target","loading","posted","bind","successPosted","display","flexDirection","marginTop","color","fontSize","margin","width","render","inputTags","tagReducer","tags","map","tag","styles","items","selection","length","textAlign","paddingTop","paddingBottom","hitsDisplay","mapStateToProps","username","persistedReducer","userID","myPosts","myPostsDetail","mapDispatchToProps","dispatch","handleUpdatedMyPosts","updatedMyPostsDetail","updatedMyPosts","type","container","border","padding","borderRadius","hitStyle","input","outline","fontFamily","marginRight","cursor","hit","height","float","marginBottom","borderBottom","boxShadow","position"],"mappings":"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","sourcesContent":["import axios from \"../../axios-blogs\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport image from \"../../assets/img/logo.jpg\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport withHandler from \"../UI/ErrorHandler/ErrorHandler\";\nimport {\n  openDisplay,\n  closeDisplay,\n  addTag,\n  removeTag,\n  handlePosted\n} from \"../../actions/tagActions\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\",\n      loading: false,\n      tagError: false\n    };\n\n    this.handlePost = this.handlePost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n  }\n\n  handlePost = () => {\n\n    // if (this.state.tags.length === 0 || this.state.tags.length >= 4) {\n    //   this.setState({ \n    //     ...this.state,\n    //     tagError: true \n    //   });\n    // } else {\n    //   const token = localStorage.getItem(\"token\");\n\n    //   const post = {\n    //     author: this.props.username,\n    //     title: this.state.title,\n    //     content: this.state.content,\n    //     tags: this.props.tagReducer.tags || []\n    //   };\n\n    //   this.setState({ loading: true });\n\n    //   const headers = {\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       Authorization: `Token ${token}`\n    //     }\n    //   };\n\n    //   axios\n    //     .post(\"/api/posts\", post, headers)\n    //     .then(res => {\n    //       axios\n    //         .post(\n    //           `/api/users/myPosts/${this.props.userID}`,\n    //           { postID: res.data._id },\n    //           headers\n    //         )\n    //         .then(res => {\n    //           //cannot divide the call into two setState calls\n    //           this.setState({ loading: false, posted: true });\n    //         })\n    //         .catch(err => {\n    //           console.log(err);\n    //           this.setState({ loading: false });\n    //         });\n    //       var updatedMyPosts = [...this.props.myPosts];\n    //       updatedMyPosts.push(res.data._id);\n    //       var updatedMyPostsDetail = [...this.props.myPostsDetail]\n    //       updatedMyPostsDetail.push(res.data)\n    //       this.props.handleUpdatedMyPosts(updatedMyPostsDetail, updatedMyPosts);\n    //     })\n    //     .catch(err => {\n    //       this.setState({ loading: false });\n    //     });\n\n    //   this.props.handlePosted();\n    // }\n  }\n\n  updateContent = value => {\n    this.setState({ content: value });\n  };\n\n  handleCancel = () => {\n    this.setState({ warning: true });\n  };\n\n  handlePostCancel = () => {\n    this.props.handlePosted();\n  };\n\n  onCloseModal = () => {\n    this.setState({ \n      ...this.state,\n      warning: false,\n      tagError: false\n    });\n  };\n\n  handleTitle = e => {\n    e.preventDefault();\n    this.setState({ title: e.target.value });\n  };\n\n  successPosted() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: \"10%\"\n        }}\n      >\n        <i\n          className=\"far fa-check-circle \"\n          style={{\n            color: \"green\",\n            fontSize: \"100px\",\n            margin: \"auto auto \"\n          }}\n        />\n        <p\n          style={{\n            marginTop: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Successfully Posted\n        </p>\n        <Link\n          to=\"/\"\n          className=\"button is-success\"\n          style={{\n            marginTop: \"10%\",\n            width: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Main Page\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    let inputTags = this.props.tagReducer.tags.map(tag => (\n      <li key={tag} style={styles.items}>\n        {tag}\n        <button onClick={() => this.props.removeTag(tag)}>(x)</button>\n      </li>\n    ));\n\n    let selection = <div />;\n\n    if (this.props.tagReducer.tags.length === 0) {\n      selection = (\n        <div>\n          <br />\n        </div>\n      );\n    } else {\n      selection = (\n        <div>\n          {inputTags}\n          <br />\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div>\n          <nav\n            className=\"navbar\"\n            role=\"navigation\"\n            aria-label=\"main navigation\"\n          >\n            <div className=\"navbar-brand\">\n              <div className=\"navbar-item\">\n                <Link to=\"/\">\n                  <img src={image} width=\"112\" height=\"48\" alt=\"logo\" />\n                </Link>\n              </div>\n            </div>\n\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n              <div className=\"navbar-start\" />\n              <DropDown lists={[\"Save\", \"Draft\"]} />\n            </div>\n          </nav>\n        </div>\n        <div style={{ width: \"80%\", margin: \"auto auto\" }}>\n          {this.state.loading ? (\n            <div\n              style={{\n                textAlign: \"center\",\n                paddingTop: \"25%\",\n                paddingBottom: \"25%\"\n              }}\n            >\n              <Spinner />\n            </div>\n          ) : this.state.posted ? (\n            this.successPosted()\n          ) : (\n                <React.Fragment>\n                  <form onSubmit={this.handlePost}>\n                    <label>Title</label>\n                    <input\n                      className=\"input is-rounded\"\n                      type=\"text\"\n                      required\n                      minLength=\"5\"\n                      value={this.state.title}\n                      onChange={this.handleTitle}\n                    />\n                    <div>\n                      <br />\n                      <Editor\n                        updateContent={this.updateContent}\n                        value={this.state.content}\n                      />\n                    </div>\n                    {selection}\n                    <label>Tags</label>\n                    <TagSearch\n                      hitsDisplay={this.props.tagReducer.hitsDisplay}\n                      tags={this.props.tagReducer.tags}\n                      handleSelect={tag => this.props.addTag(tag)}\n                      handleRemoveItem={tag => this.props.removeTag(tag)}\n                      openDisplay={() => this.props.openDisplay()}\n                      closeDisplay={() => this.props.closeDisplay()}\n                      styles={styles}\n                    />\n                    <br />\n                    <div className=\"level-left\">\n                      <button\n                        className=\"button is-primary level-item\"\n                        type=\"submit\"\n                      >\n                        Post\n                    </button>\n                      <button\n                        className=\"button is-primary level-item\"\n                        type=\"button\"\n                        onClick={this.handleCancel}\n                      >\n                        Cancel\n                    </button>\n                    </div>\n                  </form>\n                </React.Fragment>\n              )}\n        </div>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.warning}\n          onClose={this.onCloseModal}\n          center\n        >\n          <div>\n            <h1>\n              <strong>Warning</strong>\n            </h1>\n            <p style={{ color: \"red\" }}>Your Post Will Not Be Saved</p>\n            <Link\n              className=\"button is-link\"\n              onClick={this.handlePostCancel}\n              to=\"/\"\n            >\n              Okay, I Got It\n            </Link>\n          </div>\n        </Modal>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.tagError}\n          onClose={this.onCloseModal}\n          center\n        > \n          <div>\n            <h1>\n              <strong>Warning</strong>\n            </h1>\n            <p style={{ color: \"red\" }}>Please Limit your tags number from 1 to 3</p>\n            <button\n              className=\"button is-link\"\n              onClick={this.onCloseModal}\n            >\n              Okay, I Got It\n            </button>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.persistedReducer.username,\n    tagReducer: state.tagReducer,\n    userID: state.persistedReducer.userID,\n    myPosts: state.persistedReducer.myPosts,\n    myPostsDetail: state.persistedReducer.myPostsDetail\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDisplay: () => {\n      dispatch(openDisplay());\n    },\n    closeDisplay: () => {\n      dispatch(closeDisplay());\n    },\n    addTag: tag => {\n      dispatch(addTag(tag));\n    },\n    removeTag: tag => {\n      dispatch(removeTag(tag));\n    },\n    handlePosted: () => {\n      dispatch(handlePosted());\n    },\n    handleUpdatedMyPosts: (updatedMyPostsDetail, updatedMyPosts) =>\n      dispatch({\n        type: \"USERMYPOSTSUPDATED\",\n        myPostsDetail: updatedMyPostsDetail,\n        myPosts: updatedMyPosts\n      })\n  };\n};\n\nconst styles = {\n  container: {\n    border: \"1px solid #ddd\",\n    padding: \"5px\",\n    borderRadius: \"5px\"\n  },\n\n  hitStyle: {\n    margin: \"3% 1% 0 1%\"\n  },\n\n  input: {\n    outline: \"none\",\n    border: \"none\",\n    fontSize: \"14px\",\n    fontFamily: \"Helvetica, sans-serif\"\n  },\n\n  items: {\n    display: \"inline-block\",\n    padding: \"2px\",\n    border: \"1px solid blue\",\n    fontFamily: \"Helvetica, sans-serif\",\n    borderRadius: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n\n  hit: {\n    width: \"30%\",\n    height: \"10%\",\n    float: \"left\",\n    marginBottom: \"10px\",\n    borderBottom: \"solid 1px #eee\",\n    margin: \"0.5%\",\n    border: \"solid 1px #eee\",\n    boxShadow: \"0 0 3px #f6f6f6\",\n    position: \"relative\",\n    fontSize: \"14px\"\n  }\n};\n\nexport default withHandler(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Publish),\n  axios\n);\n"]},"metadata":{},"sourceType":"module"}