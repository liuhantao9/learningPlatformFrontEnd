{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/resetpassword/ResetPasswordPage.jsx\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nexport default class ResetPasswordPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (e, type) => {\n      if (type === \"confirmation\") {\n        const str = e.target.value.toUpperCase();\n        this.setState({\n          confirmation: str\n        });\n      } else {\n        this.setState({\n          [type]: e.target.value\n        });\n      }\n    };\n\n    this.handleEmailSubmit = e => {\n      e.preventDefault();\n      axios({\n        method: \"POST\",\n        url: \"\".concat(process.env.REACT_APP_BACKEND_SERVER, \"/api/users/reset-send-email\"),\n        data: {\n          email: this.state.email\n        }\n      }).then(res => {\n        this.setState({\n          email: \"\",\n          submit: true\n        });\n        localStorage.setItem(\"token\", res.data.token);\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          error: err.response.status\n        });\n      });\n    };\n\n    this.handlePasswordSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password,\n            passwordAgain = _this$state.passwordAgain,\n            confirmation = _this$state.confirmation;\n\n      if (password === passwordAgain) {\n        axios({\n          method: 'POST',\n          url: \"\".concat(process.env.REACT_APP_BACKEND_SERVER, \"/api/users/reset-password\"),\n          data: {\n            email: email,\n            password: password,\n            confirmation: confirmation\n          }\n        }).then(res => {\n          this.setState({\n            submit: false,\n            email: \"\",\n            password: \"\",\n            passwordAgain: \"\",\n            confirmation: \"\"\n          });\n          localStorage.setItem(\"token\", res.data.token);\n        }).catch(err => {\n          console.log(err);\n          this.setState({\n            error: err.response.status\n          });\n        });\n      }\n    };\n\n    this.MatchedPassword = () => {\n      if (!this.state.password || !this.state.passwordAgain) return;\n\n      if (this.state.password !== this.state.passwordAgain) {\n        return React.createElement(\"p\", {\n          className: \"help is-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Passwords are not matched\");\n      } else {\n        return React.createElement(\"p\", {\n          className: \"help is-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Passwords match\");\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleEmailSubmit = this.handleEmailSubmit.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordAgain: \"\",\n      confirmation: \"\",\n      submit: false,\n      error: \"\"\n    };\n  }\n\n  handleKeyPress(e, target) {// const {submit, email, password, passwordAgain, confirmation} = this.state;\n    // if (target.charCode == 13 && !submit && email !== \"\") {\n    //   this.handleEmailSubmit(e);\n    // } else if (target.charCode == 13 && submit && \n    //           password !== \"\" && passwordAgain !== \"\" &&\n    //           confirmation !== \"\") {\n    //   this.handlePasswordSubmit(e);\n    // }\n  }\n\n  render() {\n    let display = React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-10 col-sm-7 col-md-5 col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"If you\\u2018d like to reset your password, please enter your email here and a link to do so will be sent to the address you enter.\"), React.createElement(\"form\", {\n      onSubmit: this.handleEmailSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: \"input is-primary\",\n      name: \"email\",\n      onChange: e => this.handleChange(e, \"email\"),\n      onKeyPress: this.handleKeyPress,\n      placeholder: \"noreply@techleak.com\",\n      required: true,\n      type: \"text\",\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button is-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Reset Password\"))));\n\n    if (this.state.submit) {\n      display = React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-10 col-sm-7 col-md-5 col-lg-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handlePasswordSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Please enter the new password you want to set as well as the six-digit confirmation code that we have sent to you email address\"), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        className: \"input is-primary\",\n        name: \"password\",\n        onChange: e => this.handleChange(e, \"password\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase enter new password...\",\n        required: true,\n        type: \"text\",\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Re-enter Password\"), React.createElement(\"input\", {\n        className: \"input is-primary\",\n        name: \"password\",\n        onChange: e => this.handleChange(e, \"passwordAgain\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase re-enter the password...\",\n        required: true,\n        type: \"text\",\n        value: this.state.passwordAgain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), this.MatchedPassword(), React.createElement(\"label\", {\n        className: \"label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Confirmation Code\"), React.createElement(\"input\", {\n        className: \"input is-primary\",\n        name: \"confirmation\",\n        onChange: e => this.handleChange(e, \"confirmation\"),\n        onKeyPress: this.handleKeyPress,\n        placeholder: \"Plase enter your confimration\",\n        required: true,\n        type: \"text\",\n        value: this.state.confirmation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"button is-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Reset Password\"))));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, display);\n  }\n\n}","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/resetpassword/ResetPasswordPage.jsx"],"names":["React","Component","axios","ResetPasswordPage","constructor","props","handleChange","e","type","str","target","value","toUpperCase","setState","confirmation","handleEmailSubmit","preventDefault","method","url","process","env","REACT_APP_BACKEND_SERVER","data","email","state","then","res","submit","localStorage","setItem","token","catch","err","console","log","error","response","status","handlePasswordSubmit","password","passwordAgain","MatchedPassword","bind","handleKeyPress","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from \"axios\";\n\nexport default class ResetPasswordPage extends Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleEmailSubmit = this.handleEmailSubmit.bind(this);\n    this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordAgain: \"\",\n      confirmation: \"\",\n      submit: false,\n      error:\"\"\n    }\n  }\n\n  handleChange = (e, type) => {\n    if (type === \"confirmation\") {\n      const str = e.target.value.toUpperCase();\n      this.setState({ confirmation: str });\n    } else {\n      this.setState({ [type]: e.target.value });\n    }\n  }\n\n  handleKeyPress(e, target) {\n    // const {submit, email, password, passwordAgain, confirmation} = this.state;\n    // if (target.charCode == 13 && !submit && email !== \"\") {\n    //   this.handleEmailSubmit(e);\n    // } else if (target.charCode == 13 && submit && \n    //           password !== \"\" && passwordAgain !== \"\" &&\n    //           confirmation !== \"\") {\n    //   this.handlePasswordSubmit(e);\n    // }\n  }\n\n  handleEmailSubmit = (e) => {\n    e.preventDefault();\n    axios({\n      method: \"POST\",\n      url: `${process.env.REACT_APP_BACKEND_SERVER}/api/users/reset-send-email`,\n      data: {\n        email: this.state.email\n      }\n    })\n      .then(res => {\n        this.setState({\n          email: \"\",\n          submit: true\n        })\n        localStorage.setItem(\"token\", res.data.token);\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          error: err.response.status\n        });\n      })\n  }\n\n  handlePasswordSubmit = (e) => {\n    e.preventDefault();\n    const { \n      email,\n      password,\n      passwordAgain,\n      confirmation\n    } = this.state\n\n    if (password === passwordAgain) {\n      axios({\n        method: 'POST',\n        url: `${process.env.REACT_APP_BACKEND_SERVER}/api/users/reset-password`,\n        data: {\n          email: email,\n          password: password,\n          confirmation: confirmation\n        }\n      })\n        .then(res => {\n          this.setState({\n            submit: false,\n            email: \"\",\n            password: \"\",\n            passwordAgain: \"\",\n            confirmation: \"\"\n          })\n          localStorage.setItem(\"token\", res.data.token);\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            error: err.response.status\n          })\n        })\n    }\n  }\n\n  MatchedPassword = () => {\n    if (!this.state.password || !this.state.passwordAgain) return;\n    if (this.state.password !== this.state.passwordAgain) {\n      return <p className=\"help is-danger\">Passwords are not matched</p>;\n    } else {\n      return <p className=\"help is-success\">Passwords match</p>;\n    }\n  };\n\n  render() {\n\n    let display = (\n      <div className=\"row justify-content-center\">\n        <div className=\"col-10 col-sm-7 col-md-5 col-lg-4\">\n          <p>\n            If you‘d like to reset your password, please enter your email here\n            and a link to do so will be sent to the address you enter.\n          </p>\n          <form onSubmit={this.handleEmailSubmit}>\n            <label className=\"label\">Email</label>\n            <input\n              className=\"input is-primary\"\n              name=\"email\"\n              onChange={e => this.handleChange(e, \"email\")}\n              onKeyPress={this.handleKeyPress}\n              placeholder=\"noreply@techleak.com\"\n              required\n              type=\"text\"\n              value={this.state.email}\n            />\n            <button type=\"submit\" className=\"button is-primary\">Reset Password</button>\n          </form>\n        </div>\n      </div>\n    )\n\n    if (this.state.submit) {\n      display = (\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 col-sm-7 col-md-5 col-lg-4\">\n            <form onSubmit={this.handlePasswordSubmit}>\n              <p>\n                Please enter the new password you want to set as well as the six-digit\n                confirmation code that we have sent to you email address\n              </p>\n              <label className=\"label\">Password</label>\n              <input\n                className=\"input is-primary\"\n                name=\"password\"\n                onChange={e => this.handleChange(e, \"password\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase enter new password...\"\n                required\n                type=\"text\"\n                value={this.state.password}\n              />\n              <label className=\"label\">Re-enter Password</label>\n              <input\n                className=\"input is-primary\"\n                name=\"password\"\n                onChange={e => this.handleChange(e, \"passwordAgain\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase re-enter the password...\"\n                required\n                type=\"text\"\n                value={this.state.passwordAgain}\n              />\n              {this.MatchedPassword()}\n              <label className=\"label\">Confirmation Code</label>\n              <input\n                className=\"input is-primary\"\n                name=\"confirmation\"\n                onChange={e => this.handleChange(e, \"confirmation\")}\n                onKeyPress={this.handleKeyPress}\n                placeholder=\"Plase enter your confimration\"\n                required\n                type=\"text\"\n                value={this.state.confirmation}\n              />\n              <button type=\"submit\" className=\"button is-primary\">Reset Password</button>\n            </form>\n          </div>\n        </div>\n      )\n    }\n    \n    return (\n      <React.Fragment>\n        {display}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}