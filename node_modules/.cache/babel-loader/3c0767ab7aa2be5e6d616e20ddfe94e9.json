{"ast":null,"code":"var _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/Login.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"../axios-blogs\";\nimport Modal from \"react-responsive-modal\";\nimport Spinner from \"./UI/Spinner/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      password: \"\",\n      email: \"\",\n      errStatus: \"\",\n      username: \"\",\n      loading: false\n    };\n\n    this.handleChange = (e, type) => {\n      if (type === \"email\" || type === \"password\") {\n        this.setState({\n          notMatched: false\n        });\n      }\n\n      this.setState({\n        [type]: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const user = {\n        user: {\n          email: email,\n          password: password\n        }\n      };\n\n      try {\n        let res = await axios.post(\"/api/users/login\", user);\n        let data = res.data; // asyn function that retrieve all details about likedPosts and myPosts\n\n        let allPostDetail = await this.fetchAllPostDetails(data);\n        let likedPostsDetail = allPostDetail[0];\n        let myPostsDetail = allPostDetail[1];\n        this.setState({\n          loading: false,\n          email: \"\",\n          password: \"\"\n        });\n        this.props.handleLogIn(data.username, data.id, data.likedPosts, data.myPosts, data.avatar, likedPostsDetail, myPostsDetail); //close modal\n\n        this.props.onSwitchLoginModal(); //save tokens\n\n        localStorage.setItem(\"token\", res.data.token);\n      } catch (err) {\n        //Here we pass in status code into error, and we handle\n        //error codes by err.response\n        console.log(err);\n        this.setState({\n          loading: false,\n          errStatus: err.response.status\n        });\n      }\n    };\n\n    this.fetchAllPostDetails = async data => {\n      const likedPosts = data.likedPosts;\n      const myPosts = data.myPosts;\n      let singleLikedPostDetailPromise = [];\n      let singleMyPostDetailPromise = [];\n\n      for (var i = 0; i < likedPosts.length; i++) {\n        let l_promise = this.fetchSinglePostDetail(likedPosts[i]);\n        singleLikedPostDetailPromise.unshift(l_promise);\n      }\n\n      for (var j = 0; j < myPosts.length; j++) {\n        let m_promise = this.fetchSinglePostDetail(myPosts[j]);\n        singleMyPostDetailPromise.unshift(m_promise);\n      }\n\n      let allLikedPostDetails = Promise.all(singleLikedPostDetailPromise);\n      let allmyPostDetails = Promise.all(singleMyPostDetailPromise);\n      let allPostDetails = await Promise.all([allLikedPostDetails, allmyPostDetails]);\n      return allPostDetails;\n    };\n\n    this.fetchSinglePostDetail = async postID => {\n      let userDetail = await axios.get(\"\".concat(process.env.REACT_APP_BACKEND_SERVER, \"/api/posts/\").concat(postID));\n      return userDetail.data;\n    };\n  }\n\n  render() {\n    const modalBg = {\n      modal: {\n        borderRadius: \"10%\"\n      }\n    };\n\n    const userError = () => {\n      let body; //handles different error\n\n      switch (this.state.errStatus) {\n        case 458:\n          body = \"Account does not exist\";\n          break;\n\n        case 468:\n          body = \"Email and password not matched\";\n          break;\n\n        case 478:\n          body = \"Email has not been verified\";\n      }\n\n      return React.createElement(\"p\", {\n        className: \"help is-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \" \", body);\n    };\n\n    let login = React.createElement(\"div\", {\n      style: {\n        padding: \"4%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-primary\",\n      type: \"email\",\n      placeholder: \"Your Email\",\n      required: true,\n      onChange: e => this.handleChange(e, \"email\"),\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-envelope\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"div\", {\n      className: \"control has-icons-left has-icons-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-primary\",\n      type: \"password\",\n      placeholder: \"Your Password\",\n      minLength: \"8\",\n      maxLength: \"20\",\n      size: \"30\",\n      required: true,\n      onChange: e => this.handleChange(e, \"password\"),\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"icon is-small is-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-key\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })))), userError(), React.createElement(\"div\", {\n      className: \"forgetPwd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/reset-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Forget Password?\"))), React.createElement(\"div\", {\n      className: \"field is-grouped\",\n      style: {\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button is-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Login\")))));\n\n    if (this.state.loading) {\n      login = React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          paddingTop: \"25%\",\n          paddingBottom: \"25%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.props.loginOpen,\n      onClose: this.props.onSwitchLoginModal,\n      center: true,\n      styles: modalBg,\n      showCloseIcon: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, login);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginOpen: state.persistedReducer.loginOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogIn: (username, userID, likedPosts, myPosts, avatar, likedPostsDetail, myPostsDetail) => dispatch({\n      type: \"LOGIN\",\n      username: username,\n      userID: userID,\n      likedPosts: likedPosts,\n      myPosts: myPosts,\n      avatar: avatar,\n      likedPostsDetail: likedPostsDetail,\n      myPostsDetail: myPostsDetail\n    }),\n    onSwitchLoginModal: () => dispatch({\n      type: \"LOGINMODAL\"\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/Login.jsx"],"names":["React","Component","axios","Modal","Spinner","Link","connect","Login","state","password","email","errStatus","username","loading","handleChange","e","type","setState","notMatched","target","value","handleSubmit","preventDefault","user","res","post","data","allPostDetail","fetchAllPostDetails","likedPostsDetail","myPostsDetail","props","handleLogIn","id","likedPosts","myPosts","avatar","onSwitchLoginModal","localStorage","setItem","token","err","console","log","response","status","singleLikedPostDetailPromise","singleMyPostDetailPromise","i","length","l_promise","fetchSinglePostDetail","unshift","j","m_promise","allLikedPostDetails","Promise","all","allmyPostDetails","allPostDetails","postID","userDetail","get","process","env","REACT_APP_BACKEND_SERVER","render","modalBg","modal","borderRadius","userError","body","login","padding","justifyContent","textAlign","paddingTop","paddingBottom","loginOpen","mapStateToProps","persistedReducer","mapDispatchToProps","dispatch","userID"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"../axios-blogs\";\nimport Modal from \"react-responsive-modal\";\nimport Spinner from \"./UI/Spinner/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nclass Login extends Component {\n  state = {\n    password: \"\",\n    email: \"\",\n    errStatus: \"\",\n    username: \"\",\n    loading: false\n  };\n\n  handleChange = (e, type) => {\n    if (type === \"email\" || type === \"password\") {\n      this.setState({ notMatched: false });\n    }\n    this.setState({ [type]: e.target.value });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n    const { email, password } = this.state;\n    const user = {\n      user: {\n        email: email,\n        password: password\n      }\n    };\n\n    try {\n      let res = await axios.post(\"/api/users/login\", user)\n      let data = res.data;\n      // asyn function that retrieve all details about likedPosts and myPosts\n      let allPostDetail = await this.fetchAllPostDetails(data);\n      let likedPostsDetail = allPostDetail[0];\n      let myPostsDetail = allPostDetail[1];\n      this.setState({ loading: false, email: \"\", password: \"\" });\n      this.props.handleLogIn(\n        data.username,\n        data.id,\n        data.likedPosts,\n        data.myPosts,\n        data.avatar,\n        likedPostsDetail,\n        myPostsDetail\n      );\n      //close modal\n      this.props.onSwitchLoginModal();\n      //save tokens\n      localStorage.setItem(\"token\", res.data.token);\n\n    } catch (err) {\n      //Here we pass in status code into error, and we handle\n      //error codes by err.response\n      console.log(err);\n      this.setState({\n        loading: false,\n        errStatus: err.response.status\n      });\n    }\n  };\n\n  // responsible for fetching data about my posts and liked posts from \n  // the database. the output is later used for setting states in redux\n  fetchAllPostDetails = async (data) => {\n    const likedPosts = data.likedPosts;\n    const myPosts = data.myPosts;\n    let singleLikedPostDetailPromise = [];\n    let singleMyPostDetailPromise = [];\n    for (var i = 0; i < likedPosts.length; i++) {\n      let l_promise = this.fetchSinglePostDetail(likedPosts[i]);\n      singleLikedPostDetailPromise.unshift(l_promise);\n    }\n    for (var j = 0; j < myPosts.length; j++) {\n      let m_promise = this.fetchSinglePostDetail(myPosts[j]);\n      singleMyPostDetailPromise.unshift(m_promise);\n    }\n    let allLikedPostDetails = Promise.all(singleLikedPostDetailPromise);\n    let allmyPostDetails = Promise.all(singleMyPostDetailPromise);\n    let allPostDetails = await Promise.all([allLikedPostDetails, allmyPostDetails]);\n    return allPostDetails;\n  }\n\n  fetchSinglePostDetail = async (postID) => {\n    let userDetail = await axios.get(`${process.env.REACT_APP_BACKEND_SERVER}/api/posts/${postID}`);\n    return userDetail.data;\n  }\n\n  render() {\n    const modalBg = {\n      modal: {\n        borderRadius: \"10%\"\n      }\n    };\n\n    const userError = () => {\n      let body;\n\n      //handles different error\n      switch (this.state.errStatus) {\n        case 458:\n          body = \"Account does not exist\";\n          break;\n        case 468:\n          body = \"Email and password not matched\";\n          break;\n        case 478:\n          body = \"Email has not been verified\";\n      }\n      return <p className=\"help is-danger\"> {body}</p>;\n    };\n\n    let login = (\n      <div style={{ padding: \"4%\" }}>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input is-primary\"\n                type=\"email\"\n                placeholder=\"Your Email\"\n                required\n                onChange={e => this.handleChange(e, \"email\")}\n                value={this.state.email}\n              />\n\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-envelope\" />\n              </span>\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\">Password</label>\n            <div className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input is-primary\"\n                type=\"password\"\n                placeholder=\"Your Password\"\n                minLength=\"8\"\n                maxLength=\"20\"\n                size=\"30\"\n                required\n                onChange={e => this.handleChange(e, \"password\")}\n                value={this.state.password}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-key\" />\n              </span>\n            </div>\n          </div>\n          {userError()}\n          <div className=\"forgetPwd\">\n            <Link to='/reset-password'>\n              <p>Forget Password?</p>\n            </Link>\n          </div>\n          <div\n            className=\"field is-grouped\"\n            style={{ justifyContent: \"center\" }}\n          >\n            <div className=\"control\">\n              <button type=\"submit\" className=\"button is-primary\">\n                Login\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n    if (this.state.loading) {\n      login = (\n        <div\n          style={{\n            textAlign: \"center\",\n            paddingTop: \"25%\",\n            paddingBottom: \"25%\"\n          }}\n        >\n          <Spinner />\n        </div>\n      );\n    }\n    return (\n      <Modal\n        className=\"modal-lg\"\n        open={this.props.loginOpen}\n        onClose={this.props.onSwitchLoginModal}\n        center\n        styles={modalBg}\n        showCloseIcon={false}\n      >\n        {login}\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loginOpen: state.persistedReducer.loginOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleLogIn: (username, userID, likedPosts, myPosts, avatar, likedPostsDetail, myPostsDetail) =>\n      dispatch({\n        type: \"LOGIN\",\n        username: username,\n        userID: userID,\n        likedPosts: likedPosts,\n        myPosts: myPosts,\n        avatar: avatar,\n        likedPostsDetail: likedPostsDetail,\n        myPostsDetail: myPostsDetail\n      }),\n    onSwitchLoginModal: () => dispatch({ type: \"LOGINMODAL\" })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n"]},"metadata":{},"sourceType":"module"}