{"ast":null,"code":"\"use strict\";\n\nvar _ramda = require(\"./ramda\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n}), Object.defineProperty(exports, \"memoizeWith\", {\n  enumerable: !0,\n  get: function get() {\n    return _ramda.memoizeWith;\n  }\n}), Object.defineProperty(exports, \"identity\", {\n  enumerable: !0,\n  get: function get() {\n    return _ramda.identity;\n  }\n}), Object.defineProperty(exports, \"pick\", {\n  enumerable: !0,\n  get: function get() {\n    return _ramda.pick;\n  }\n}), exports.classWriter = exports.hasOwnProperty = exports.cutLeft = exports.commonKeys = exports.copy = exports.repeat = void 0;\n\nfunction _toConsumableArray(a) {\n  return _arrayWithoutHoles(a) || _iterableToArray(a) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(a) {\n  if (Symbol.iterator in Object(a) || \"[object Arguments]\" === Object.prototype.toString.call(a)) return Array.from(a);\n}\n\nfunction _arrayWithoutHoles(a) {\n  if (Array.isArray(a)) {\n    for (var b = 0, c = Array(a.length); b < a.length; b++) {\n      c[b] = a[b];\n    }\n\n    return c;\n  }\n}\n\nvar commonKeys = function commonKeys() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n  return function () {\n    var b = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},\n        c = [];\n\n    for (var d in a) {\n      d in b && c.push(d);\n    }\n\n    return c;\n  };\n};\n\nexports.commonKeys = commonKeys;\n\nvar cutLeft = function cutLeft() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \" \";\n  return function () {\n    var b = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \"\";\n    return b.replace(new RegExp(\"^[\" + a + \"]+\"), \"\");\n  };\n};\n\nexports.cutLeft = cutLeft, exports.cutLeft = cutLeft = (0, _ramda.memoizeWith)(_ramda.identity, cutLeft);\n\nvar repeat = function repeat(a) {\n  return function () {\n    var b = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : 1;\n    1e3 < b && console.warn(\"'repeat' may pause your system\");\n\n    for (var c = 0; c < b; c++) {\n      a();\n    }\n  };\n};\n\nexports.repeat = repeat;\n\nvar objectFromArray = function objectFromArray() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : [];\n  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(a)));\n},\n    copy = function copy() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n  return function () {\n    var b = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 1;\n    return 1e3 < b && console.warn(\"'copy' may pause your system\"), Array(b).fill(a);\n  };\n};\n\nexports.copy = copy;\n\nvar hasOwnProperty = function hasOwnProperty() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n  return function () {\n    var b = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \"\";\n    return Object.prototype.hasOwnProperty.call(a, b);\n  };\n};\n\nexports.hasOwnProperty = hasOwnProperty;\n\nvar strRemover = function strRemover() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \"\";\n  return function () {\n    var b = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \"undefined\";\n    return a.split(\" \").filter(function (a) {\n      return a !== b;\n    }).join(\" \");\n  };\n};\n\nstrRemover = (0, _ramda.memoizeWith)(_ramda.identity, strRemover);\n\nvar propWriter = function propWriter() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n  return function () {\n    var b = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : \"\";\n    return hasOwnProperty(a, b) && a[b];\n  };\n},\n    sharedClass = function sharedClass() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n  return propWriter(a)(\"class\") + \" \" + propWriter(a)(\"className\");\n},\n    specificClass = function specificClass() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n  return propWriter(a)(\"class\") + \" \" + propWriter(a)(\"className\");\n},\n    classWriter = function classWriter() {\n  var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n  return function () {\n    var b = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {};\n    return strRemover([specificClass(a), sharedClass(b)].join(\" \"))();\n  };\n};\n\nexports.classWriter = classWriter;","map":null,"metadata":{},"sourceType":"script"}