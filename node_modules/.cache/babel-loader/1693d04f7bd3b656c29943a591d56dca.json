{"ast":null,"code":"/*!\n * froala_editor v3.0.0-rc.1 (https://www.froala.com/wysiwyg-editor)\n * License https://froala.com/wysiwyg-editor/terms/\n * Copyright 2014-2019 Froala Labs\n */\n!function (t, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? e(require(\"froala-editor\")) : \"function\" == typeof define && define.amd ? define([\"froala-editor\"], e) : e(t.FroalaEditor);\n}(this, function (u) {\n  \"use strict\";\n\n  u = u && u.hasOwnProperty(\"default\") ? u[\"default\"] : u, Object.assign(u.DEFAULTS, {\n    charCounterMax: -1,\n    charCounterCount: !0\n  }), u.PLUGINS.charCounter = function (n) {\n    var r,\n        e = n.$;\n\n    function o() {\n      return (n.el.textContent || \"\").replace(/\\u200B/g, \"\").length;\n    }\n\n    function t(t) {\n      if (n.opts.charCounterMax < 0) return !0;\n      if (o() < n.opts.charCounterMax) return !0;\n      var e = t.which;\n      return !(!n.keys.ctrlKey(t) && n.keys.isCharacter(e) || e === u.KEYCODE.IME) || (t.preventDefault(), t.stopPropagation(), n.events.trigger(\"charCounter.exceeded\"), !1);\n    }\n\n    function a(t) {\n      return n.opts.charCounterMax < 0 ? t : e(\"<div>\").html(t).text().length + o() <= n.opts.charCounterMax ? t : (n.events.trigger(\"charCounter.exceeded\"), \"\");\n    }\n\n    function c() {\n      if (n.opts.charCounterCount) {\n        var t = o() + (0 < n.opts.charCounterMax ? \"/\" + n.opts.charCounterMax : \"\");\n        r.text(\"\".concat(n.language.translate(\"Characters\"), \" : \").concat(t)), n.opts.toolbarBottom && r.css(\"margin-bottom\", n.$tb.outerHeight(!0));\n        var e = n.$wp.get(0).offsetWidth - n.$wp.get(0).clientWidth;\n        0 <= e && (\"rtl\" == n.opts.direction ? r.css(\"margin-left\", e) : r.css(\"margin-right\", e));\n      }\n    }\n\n    return {\n      _init: function _init() {\n        return !!n.$wp && !!n.opts.charCounterCount && ((r = e(document.createElement(\"span\")).attr(\"class\", \"fr-counter\")).css(\"bottom\", n.$wp.css(\"border-bottom-width\")), n.$second_tb && n.$second_tb.append(r), n.events.on(\"keydown\", t, !0), n.events.on(\"paste.afterCleanup\", a), n.events.on(\"keyup contentChanged input\", function () {\n          n.events.trigger(\"charCounter.update\");\n        }), n.events.on(\"charCounter.update\", c), n.events.trigger(\"charCounter.update\"), void n.events.on(\"destroy\", function () {\n          e(n.o_win).off(\"resize.char\" + n.id), r.removeData().remove(), r = null;\n        }));\n      },\n      count: o\n    };\n  };\n});","map":null,"metadata":{},"sourceType":"script"}