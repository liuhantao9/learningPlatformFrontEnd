{"ast":null,"code":"import _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx\";\nimport axios from \"../../axios/axios-blogs\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport withHandler from \"../UI/ErrorHandler/ErrorHandler\";\nimport { openDisplay, closeDisplay, addTag, removeTag, handlePosted } from \"../../actions/tagActions\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showUpdateTime = () => {\n      const currTime = new Date().toTimeString();\n      this.setState({\n        updateTime: currTime\n      });\n    };\n\n    this.getContent = () => {\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(token),\n          withCredentials: true\n        }\n      };\n      axios.get(\"/api/users/draft/\".concat(this.props.userID), headers).then(res => {\n        console.log(res.data);\n        this.setState({\n          content: res.data.content\n        });\n      });\n    };\n\n    this.handleFinalPost = async () => {\n      const post = {\n        author: this.props.username,\n        title: this.state.title,\n        content: this.state.content,\n        tags: this.props.tagReducer.tags || [],\n        userId: this.props.userID,\n        avatar: this.props.avatar || \"https://bulma.io/images/placeholders/128x128.png\"\n      };\n      this.setState({\n        loading: true\n      });\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(token),\n          withCredentials: true\n        }\n      };\n      axios.post(\"/api/posts\", post, headers).then(res => {\n        axios.post(\"/api/users/myPosts/\".concat(this.props.userID), {\n          postID: res.data._id\n        }, headers).then(res => {\n          //cannot divide the call into two setState calls\n          this.setState({\n            loading: false,\n            posted: true\n          });\n        }).catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false\n          });\n        });\n        var updatedMyPosts = [...this.props.myPosts];\n        updatedMyPosts.push(res.data._id);\n        var updatedMyPostsDetail = [...this.props.myPostsDetail];\n        updatedMyPostsDetail.push(res.data);\n        this.props.handleUpdatedMyPosts(updatedMyPostsDetail, updatedMyPosts);\n      }).catch(err => {\n        this.setState({\n          loading: false\n        });\n      });\n      this.props.handlePosted();\n    };\n\n    this.handlePostCheck = e => {\n      e.preventDefault();\n\n      if (this.props.tagReducer.tags.length === 0 || this.props.tagReducer.tags.length >= 4) {\n        this.setState(_objectSpread({}, this.state, {\n          tagError: true\n        }));\n      } else {\n        this.handleFinalPost();\n      }\n    };\n\n    this.updateContent = value => {\n      this.setState({\n        content: value\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        warning: true\n      });\n    };\n\n    this.handlePostCancel = () => {\n      this.props.handlePosted();\n    };\n\n    this.onCloseModal = () => {\n      this.setState(_objectSpread({}, this.state, {\n        warning: false,\n        tagError: false\n      }));\n    };\n\n    this.handleTitle = e => {\n      e.preventDefault();\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\",\n      tagError: false,\n      updateTime: \"\"\n    };\n    this.handlePostCheck = this.handlePostCheck.bind(this);\n    this.handleFinalPost = this.handleFinalPost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n    this.getContent = this.getContent.bind(this);\n    this.showUpdateTime = this.showUpdateTime.bind(this);\n  }\n\n  successPosted() {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        marginTop: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-check-circle \",\n      style: {\n        color: \"green\",\n        fontSize: \"100px\",\n        margin: \"auto auto \"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginTop: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Successfully Posted\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"button is-success\",\n      style: {\n        marginTop: \"10%\",\n        width: \"10%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Main Page\"));\n  }\n\n  render() {\n    let inputTags = this.props.tagReducer.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      style: styles.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, tag, React.createElement(\"button\", {\n      onClick: () => this.props.removeTag(tag),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"(x)\")));\n    let selection = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    });\n\n    if (this.props.tagReducer.tags.length === 0) {\n      selection = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }));\n    } else {\n      selection = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, inputTags, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"auto auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        paddingTop: \"25%\",\n        paddingBottom: \"25%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })) : this.state.posted ? this.successPosted() : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlePostCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"div\", {\n      className: \"level\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input is-rounded\",\n      type: \"text\",\n      required: true,\n      placeholder: \"Title...\",\n      minLength: \"8\",\n      maxLength: \"50\",\n      value: this.state.title,\n      onChange: this.handleTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(DropDown, {\n      lists: [\"Get Last Draft\"],\n      funcs: [this.getContent],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      updateContent: this.updateContent,\n      value: this.state.content,\n      userID: this.props.userID,\n      showUpdateTime: this.showUpdateTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        fontSize: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.updateTime ? \"Saved at \".concat(this.state.updateTime) : \"\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), selection, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Tags\"), React.createElement(TagSearch, {\n      hitsDisplay: this.props.tagReducer.hitsDisplay,\n      tags: this.props.tagReducer.tags,\n      handleSelect: tag => this.props.addTag(tag),\n      handleRemoveItem: tag => this.props.removeTag(tag),\n      openDisplay: () => this.props.openDisplay(),\n      closeDisplay: () => this.props.closeDisplay(),\n      styles: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"level-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Post\"), React.createElement(\"button\", {\n      className: \"button is-primary level-item\",\n      type: \"button\",\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Cancel\"))))), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.warning,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Warning\")), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Your Post Will Not Be Saved\"), React.createElement(Link, {\n      className: \"button is-link\",\n      onClick: this.handlePostCancel,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Okay, I Got It\"))), React.createElement(Modal, {\n      className: \"modal-lg\",\n      open: this.state.tagError,\n      onClose: this.onCloseModal,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Warning\")), React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Please limit the number of the input tags from 1 to 3\"), React.createElement(\"button\", {\n      className: \"button is-link\",\n      onClick: this.onCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Okay, I Got It\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.persistedReducer.username,\n    tagReducer: state.tagReducer,\n    userID: state.persistedReducer.userID,\n    myPosts: state.persistedReducer.myPosts,\n    myPostsDetail: state.persistedReducer.myPostsDetail,\n    avatar: state.persistedReducer.avatar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDisplay: () => {\n      dispatch(openDisplay());\n    },\n    closeDisplay: () => {\n      dispatch(closeDisplay());\n    },\n    addTag: tag => {\n      dispatch(addTag(tag));\n    },\n    removeTag: tag => {\n      dispatch(removeTag(tag));\n    },\n    handlePosted: () => {\n      dispatch(handlePosted());\n    },\n    handleUpdatedMyPosts: (updatedMyPostsDetail, updatedMyPosts) => dispatch({\n      type: \"USERMYPOSTSUPDATED\",\n      myPostsDetail: updatedMyPostsDetail,\n      myPosts: updatedMyPosts\n    })\n  };\n};\n\nconst styles = {\n  container: {\n    border: \"1px solid #ddd\",\n    padding: \"5px\",\n    borderRadius: \"5px\"\n  },\n  hitStyle: {\n    margin: \"3% 1% 0 1%\"\n  },\n  input: {\n    outline: \"none\",\n    border: \"none\",\n    fontSize: \"14px\",\n    fontFamily: \"Helvetica, sans-serif\"\n  },\n  items: {\n    display: \"inline-block\",\n    padding: \"2px\",\n    border: \"1px solid blue\",\n    fontFamily: \"Helvetica, sans-serif\",\n    borderRadius: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n  hit: {\n    width: \"30%\",\n    height: \"10%\",\n    float: \"left\",\n    marginBottom: \"10px\",\n    borderBottom: \"solid 1px #eee\",\n    margin: \"0.5%\",\n    border: \"solid 1px #eee\",\n    boxShadow: \"0 0 3px #f6f6f6\",\n    position: \"relative\",\n    fontSize: \"14px\"\n  }\n};\nexport default withHandler(connect(mapStateToProps, mapDispatchToProps)(Publish), axios);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/publish/Publish.jsx"],"names":["axios","React","Component","Editor","Link","DropDown","Spinner","Modal","connect","TagSearch","withHandler","openDisplay","closeDisplay","addTag","removeTag","handlePosted","Publish","constructor","props","showUpdateTime","currTime","Date","toTimeString","setState","updateTime","getContent","token","localStorage","getItem","headers","Authorization","withCredentials","get","userID","then","res","console","log","data","content","handleFinalPost","post","author","username","title","state","tags","tagReducer","userId","avatar","loading","postID","_id","posted","catch","err","updatedMyPosts","myPosts","push","updatedMyPostsDetail","myPostsDetail","handleUpdatedMyPosts","handlePostCheck","e","preventDefault","length","tagError","updateContent","value","handleCancel","warning","handlePostCancel","onCloseModal","handleTitle","target","bind","successPosted","display","flexDirection","marginTop","color","fontSize","margin","width","render","inputTags","map","tag","styles","items","selection","textAlign","paddingTop","paddingBottom","hitsDisplay","mapStateToProps","persistedReducer","mapDispatchToProps","dispatch","type","container","border","padding","borderRadius","hitStyle","input","outline","fontFamily","marginRight","cursor","hit","height","float","marginBottom","borderBottom","boxShadow","position"],"mappings":"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","sourcesContent":["import axios from \"../../axios/axios-blogs\";\nimport React, { Component } from \"react\";\nimport Editor from \"../editor/Editor\";\nimport { Link } from \"react-router-dom\";\nimport DropDown from \"../dropdown/dropdown\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport Modal from \"react-responsive-modal\";\nimport { connect } from \"react-redux\";\nimport TagSearch from \"../searchTags/tagsearch\";\nimport withHandler from \"../UI/ErrorHandler/ErrorHandler\";\nimport {\n  openDisplay,\n  closeDisplay,\n  addTag,\n  removeTag,\n  handlePosted\n} from \"../../actions/tagActions\";\n\nclass Publish extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      warning: false,\n      loading: false,\n      posted: false,\n      content: \"\",\n      title: \"\",\n      tagError: false,\n      updateTime: \"\"\n    };\n\n    this.handlePostCheck = this.handlePostCheck.bind(this);\n    this.handleFinalPost = this.handleFinalPost.bind(this);\n    this.successPosted = this.successPosted.bind(this);\n    this.updateContent = this.updateContent.bind(this);\n    this.getContent = this.getContent.bind(this);\n    this.showUpdateTime = this.showUpdateTime.bind(this);\n  }\n\n  showUpdateTime = () => {\n    const currTime = new Date().toTimeString();\n    this.setState({ updateTime: currTime });\n  };\n\n  getContent = () => {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n        withCredentials: true\n      }\n    };\n    axios.get(`/api/users/draft/${this.props.userID}`, headers).then(res => {\n      console.log(res.data);\n      this.setState({ content: res.data.content });\n    });\n  };\n\n  handleFinalPost = async () => {\n    const post = {\n      author: this.props.username,\n      title: this.state.title,\n      content: this.state.content,\n      tags: this.props.tagReducer.tags || [],\n      userId: this.props.userID,\n      avatar:\n        this.props.avatar || \"https://bulma.io/images/placeholders/128x128.png\"\n    };\n    this.setState({ loading: true });\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n        withCredentials: true\n      }\n    };\n    axios\n      .post(\"/api/posts\", post, headers)\n      .then(res => {\n        axios\n          .post(\n            `/api/users/myPosts/${this.props.userID}`,\n            { postID: res.data._id },\n            headers\n          )\n          .then(res => {\n            //cannot divide the call into two setState calls\n            this.setState({ loading: false, posted: true });\n          })\n          .catch(err => {\n            console.log(err);\n            this.setState({ loading: false });\n          });\n        var updatedMyPosts = [...this.props.myPosts];\n        updatedMyPosts.push(res.data._id);\n        var updatedMyPostsDetail = [...this.props.myPostsDetail];\n        updatedMyPostsDetail.push(res.data);\n        this.props.handleUpdatedMyPosts(updatedMyPostsDetail, updatedMyPosts);\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n      });\n\n    this.props.handlePosted();\n  };\n\n  handlePostCheck = e => {\n    e.preventDefault();\n    if (\n      this.props.tagReducer.tags.length === 0 ||\n      this.props.tagReducer.tags.length >= 4\n    ) {\n      this.setState({\n        ...this.state,\n        tagError: true\n      });\n    } else {\n      this.handleFinalPost();\n    }\n  };\n\n  updateContent = value => {\n    this.setState({ content: value });\n  };\n\n  handleCancel = () => {\n    this.setState({ warning: true });\n  };\n\n  handlePostCancel = () => {\n    this.props.handlePosted();\n  };\n\n  onCloseModal = () => {\n    this.setState({\n      ...this.state,\n      warning: false,\n      tagError: false\n    });\n  };\n\n  handleTitle = e => {\n    e.preventDefault();\n    this.setState({ title: e.target.value });\n  };\n\n  successPosted() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: \"10%\"\n        }}\n      >\n        <i\n          className=\"far fa-check-circle \"\n          style={{\n            color: \"green\",\n            fontSize: \"100px\",\n            margin: \"auto auto \"\n          }}\n        />\n        <p\n          style={{\n            marginTop: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Successfully Posted\n        </p>\n        <Link\n          to=\"/\"\n          className=\"button is-success\"\n          style={{\n            marginTop: \"10%\",\n            width: \"10%\",\n            margin: \"auto auto\"\n          }}\n        >\n          Main Page\n        </Link>\n      </div>\n    );\n  }\n\n  render() {\n    let inputTags = this.props.tagReducer.tags.map(tag => (\n      <li key={tag} style={styles.items}>\n        {tag}\n        <button onClick={() => this.props.removeTag(tag)}>(x)</button>\n      </li>\n    ));\n\n    let selection = <div />;\n\n    if (this.props.tagReducer.tags.length === 0) {\n      selection = (\n        <div>\n          <br />\n        </div>\n      );\n    } else {\n      selection = (\n        <div>\n          {inputTags}\n          <br />\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div style={{ width: \"80%\", margin: \"auto auto\" }}>\n          {this.state.loading ? (\n            <div\n              style={{\n                textAlign: \"center\",\n                paddingTop: \"25%\",\n                paddingBottom: \"25%\"\n              }}\n            >\n              <Spinner />\n            </div>\n          ) : this.state.posted ? (\n            this.successPosted()\n          ) : (\n            <React.Fragment>\n              <form onSubmit={this.handlePostCheck}>\n                <label>Title</label>\n                <div className=\"level\">\n                  <input\n                    className=\"input is-rounded\"\n                    type=\"text\"\n                    required\n                    placeholder=\"Title...\"\n                    minLength=\"8\"\n                    maxLength=\"50\"\n                    value={this.state.title}\n                    onChange={this.handleTitle}\n                  />\n\n                  <DropDown\n                    lists={[\"Get Last Draft\"]}\n                    funcs={[this.getContent]}\n                  />\n                </div>\n                <div>\n                  <Editor\n                    updateContent={this.updateContent}\n                    value={this.state.content}\n                    userID={this.props.userID}\n                    showUpdateTime={this.showUpdateTime}\n                  />\n                  <span style={{ fontSize: \"13px\" }}>\n                    {this.state.updateTime\n                      ? `Saved at ${this.state.updateTime}`\n                      : \"\"}\n                  </span>\n                </div>\n                <br />\n                {selection}\n                <hr />\n                <label>Tags</label>\n                <TagSearch\n                  hitsDisplay={this.props.tagReducer.hitsDisplay}\n                  tags={this.props.tagReducer.tags}\n                  handleSelect={tag => this.props.addTag(tag)}\n                  handleRemoveItem={tag => this.props.removeTag(tag)}\n                  openDisplay={() => this.props.openDisplay()}\n                  closeDisplay={() => this.props.closeDisplay()}\n                  styles={styles}\n                />\n                <br />\n                <div className=\"level-left\">\n                  <button\n                    className=\"button is-primary level-item\"\n                    type=\"submit\"\n                  >\n                    Post\n                  </button>\n                  <button\n                    className=\"button is-primary level-item\"\n                    type=\"button\"\n                    onClick={this.handleCancel}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </form>\n            </React.Fragment>\n          )}\n        </div>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.warning}\n          onClose={this.onCloseModal}\n          center\n        >\n          <div>\n            <h1>\n              <strong>Warning</strong>\n            </h1>\n            <p style={{ color: \"red\" }}>Your Post Will Not Be Saved</p>\n            <Link\n              className=\"button is-link\"\n              onClick={this.handlePostCancel}\n              to=\"/\"\n            >\n              Okay, I Got It\n            </Link>\n          </div>\n        </Modal>\n        <Modal\n          className=\"modal-lg\"\n          open={this.state.tagError}\n          onClose={this.onCloseModal}\n          center\n        >\n          <div>\n            <h1>\n              <strong>Warning</strong>\n            </h1>\n            <p style={{ color: \"red\" }}>\n              Please limit the number of the input tags from 1 to 3\n            </p>\n            <button className=\"button is-link\" onClick={this.onCloseModal}>\n              Okay, I Got It\n            </button>\n          </div>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.persistedReducer.username,\n    tagReducer: state.tagReducer,\n    userID: state.persistedReducer.userID,\n    myPosts: state.persistedReducer.myPosts,\n    myPostsDetail: state.persistedReducer.myPostsDetail,\n    avatar: state.persistedReducer.avatar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openDisplay: () => {\n      dispatch(openDisplay());\n    },\n    closeDisplay: () => {\n      dispatch(closeDisplay());\n    },\n    addTag: tag => {\n      dispatch(addTag(tag));\n    },\n    removeTag: tag => {\n      dispatch(removeTag(tag));\n    },\n    handlePosted: () => {\n      dispatch(handlePosted());\n    },\n    handleUpdatedMyPosts: (updatedMyPostsDetail, updatedMyPosts) =>\n      dispatch({\n        type: \"USERMYPOSTSUPDATED\",\n        myPostsDetail: updatedMyPostsDetail,\n        myPosts: updatedMyPosts\n      })\n  };\n};\n\nconst styles = {\n  container: {\n    border: \"1px solid #ddd\",\n    padding: \"5px\",\n    borderRadius: \"5px\"\n  },\n\n  hitStyle: {\n    margin: \"3% 1% 0 1%\"\n  },\n\n  input: {\n    outline: \"none\",\n    border: \"none\",\n    fontSize: \"14px\",\n    fontFamily: \"Helvetica, sans-serif\"\n  },\n\n  items: {\n    display: \"inline-block\",\n    padding: \"2px\",\n    border: \"1px solid blue\",\n    fontFamily: \"Helvetica, sans-serif\",\n    borderRadius: \"5px\",\n    marginRight: \"5px\",\n    cursor: \"pointer\"\n  },\n\n  hit: {\n    width: \"30%\",\n    height: \"10%\",\n    float: \"left\",\n    marginBottom: \"10px\",\n    borderBottom: \"solid 1px #eee\",\n    margin: \"0.5%\",\n    border: \"solid 1px #eee\",\n    boxShadow: \"0 0 3px #f6f6f6\",\n    position: \"relative\",\n    fontSize: \"14px\"\n  }\n};\n\nexport default withHandler(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Publish),\n  axios\n);\n"]},"metadata":{},"sourceType":"module"}