{"ast":null,"code":"import _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/comment/comments.jsx\";\nimport React, { Component } from \"react\";\nimport Comment from \"./comment\";\nimport axios from \"../../axios-blogs\";\nimport { connect } from \"react-redux\";\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: \"\"\n    };\n\n    this.onChange = e => {\n      e.preventDefault();\n      this.setState({\n        body: e.target.value\n      });\n    };\n\n    this.handlePost = () => {\n      const token = localStorage.getItem(\"token\");\n      const headers = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(token),\n          withCredentials: true\n        }\n      };\n      axios.patch(\"/api/posts/comments/\".concat(this.props.blogID), {\n        comment: {\n          body: this.state.body,\n          username: this.props.username,\n          userID: this.props.userID,\n          post_date_timestamp: new Date().getTime()\n        }\n      }, headers).then(res => {\n        const _res$data = res.data,\n              replies = _res$data.replies,\n              comment = _objectWithoutProperties(_res$data, [\"replies\"]);\n\n        this.props.addComment(_objectSpread({}, comment));\n        this.setState({\n          body: \"\"\n        });\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Comments Section\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), this.props.comments.map((comment, index) => React.createElement(Comment, {\n      key: index,\n      comment: comment,\n      blogID: this.props.blogID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"article\", {\n      className: \"media\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"figure\", {\n      className: \"media-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"image is-64x64\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.avatar || \"https://bulma.io/images/placeholders/128x128.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"media-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"textarea\",\n      value: this.state.body,\n      onChange: this.onChange,\n      placeholder: \"Add a comment...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.handlePost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Post comment\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.persistedReducer.comments,\n    username: state.persistedReducer.username,\n    userID: state.persistedReducer.userID,\n    avatar: state.persistedReducer.avatar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: comment => dispatch({\n      type: \"ADDCOMMENT\",\n      comment: comment\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/components/comment/comments.jsx"],"names":["React","Component","Comment","axios","connect","Comments","state","body","onChange","e","preventDefault","setState","target","value","handlePost","token","localStorage","getItem","headers","Authorization","withCredentials","patch","props","blogID","comment","username","userID","post_date_timestamp","Date","getTime","then","res","data","replies","addComment","catch","err","console","log","render","comments","map","index","avatar","mapStateToProps","persistedReducer","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Comment from \"./comment\";\nimport axios from \"../../axios-blogs\";\nimport { connect } from \"react-redux\";\n\nclass Comments extends Component {\n  state = {\n    body: \"\"\n  };\n  onChange = e => {\n    e.preventDefault();\n    this.setState({ body: e.target.value });\n  };\n  handlePost = () => {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${token}`,\n        withCredentials: true\n      }\n    };\n    axios\n      .patch(\n        `/api/posts/comments/${this.props.blogID}`,\n        {\n          comment: {\n            body: this.state.body,\n            username: this.props.username,\n            userID: this.props.userID,\n            post_date_timestamp: new Date().getTime()\n          }\n        },\n        headers\n      )\n      .then(res => {\n        const { replies, ...comment } = res.data;\n        this.props.addComment({ ...comment });\n        this.setState({ body: \"\" });\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n  render() {\n    return (\n      <div>\n        <h1>Comments Section</h1>\n        <br />\n\n        {this.props.comments.map((comment, index) => (\n          <Comment key={index} comment={comment} blogID={this.props.blogID} />\n        ))}\n        <article className=\"media\">\n          <figure className=\"media-left\">\n            <p className=\"image is-64x64\">\n              <img\n                src={\n                  this.props.avatar ||\n                  \"https://bulma.io/images/placeholders/128x128.png\"\n                }\n              />\n            </p>\n          </figure>\n          <div className=\"media-content\">\n            <div className=\"field\">\n              <p className=\"control\">\n                <textarea\n                  className=\"textarea\"\n                  value={this.state.body}\n                  onChange={this.onChange}\n                  placeholder=\"Add a comment...\"\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button\" onClick={this.handlePost}>\n                  Post comment\n                </button>\n              </p>\n            </div>\n          </div>\n        </article>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    comments: state.persistedReducer.comments,\n    username: state.persistedReducer.username,\n    userID: state.persistedReducer.userID,\n    avatar: state.persistedReducer.avatar\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComment: comment => dispatch({ type: \"ADDCOMMENT\", comment: comment })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Comments);\n"]},"metadata":{},"sourceType":"module"}