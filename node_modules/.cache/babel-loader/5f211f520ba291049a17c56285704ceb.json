{"ast":null,"code":"import _objectWithoutProperties from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  loggedIn: false,\n  signupOpen: false,\n  loginOpen: false,\n  contactUsOpen: false,\n  shareOpen: false,\n  username: \"\",\n  userID: \"\",\n  likes: {},\n  likedPosts: [],\n  comments: [],\n  replies: [],\n  myPosts: []\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === \"LOGIN\") {\n    return _objectSpread({}, state, {\n      loggedIn: true,\n      userID: action.userID,\n      username: action.username,\n      likedPosts: action.likedPosts,\n      myPosts: action.myPosts\n    });\n  }\n\n  if (action.type === \"LOGOUT\") {\n    return _objectSpread({}, state, {\n      loggedIn: false,\n      username: \"\",\n      userID: \"\"\n    });\n  }\n\n  if (action.type === \"SIGNUPMODAL\") {\n    //Here, after submit or even close, we\n    //will redirect to login modal\n    return _objectSpread({}, state, {\n      loginOpen: state.signupOpen,\n      signupOpen: !state.signupOpen\n    });\n  }\n\n  if (action.type === \"LOGINMODAL\") {\n    return _objectSpread({}, state, {\n      loginOpen: !state.loginOpen\n    });\n  }\n\n  if (action.type === \"CONTACTMODAL\") {\n    return _objectSpread({}, state, {\n      contactUsOpen: !state.contactUsOpen\n    });\n  }\n\n  if (action.type === \"SHAREMODAL\") {\n    return _objectSpread({}, state, {\n      shareOpen: !state.shareOpen\n    });\n  }\n\n  if (action.type === \"GETBLOG\") {\n    let tempComments = [];\n    let tempReplies = [];\n    action.blog.comments.map(comment => {\n      const replies = comment.replies,\n            clone = _objectWithoutProperties(comment, [\"replies\"]);\n\n      tempComments.push(_objectSpread({}, clone));\n\n      if (replies.length > 0) {\n        tempReplies.push(_objectSpread({}, replies[0], {\n          commentRef: comment._id\n        }));\n      }\n    });\n    return _objectSpread({}, state, {\n      comments: tempComments,\n      replies: tempReplies\n    });\n  }\n\n  if (action.type === \"ADDCOMMENT\") {\n    let temp = [...state.comments];\n    temp.push(action.comment);\n    console.log(action.comment);\n    return _objectSpread({}, state, {\n      comments: temp\n    });\n  }\n\n  if (action.type === \"ADDREPLY\") {\n    let temp = [...state.replies];\n    temp.push(action.reply);\n    return _objectSpread({}, state, {\n      replies: temp\n    });\n  }\n\n  if (action.type === \"GETHITS\") {\n    let tempLikes = _objectSpread({}, state.likes);\n\n    action.hits.map(hit => {\n      //if the hit not in current memory, then we use the data\n      if (!(hit.objectID in tempLikes)) {\n        tempLikes[hit.objectID] = hit.likes;\n      }\n    });\n    return _objectSpread({}, state, {\n      likes: tempLikes\n    });\n  }\n\n  if (action.type === \"HANDLELIKE\") {\n    const delta = action.liked ? -1 : 1;\n    let newLikePosts = [...state.likedPosts];\n    action.liked ? newLikePosts = newLikePosts.filter(post => post !== action.id) : newLikePosts.push(action.id);\n    return _objectSpread({}, state, {\n      likes: _objectSpread({}, state.likes, {\n        [action.id]: state.likes[action.id] + delta\n      }),\n      likedPosts: newLikePosts\n    });\n  }\n\n  if (action.type === \"PUBLISHEDNEWPOST\") {\n    return _objectSpread({}, state, {\n      myPosts: action.myPosts\n    });\n  }\n\n  if (action.type === \"USERLIKEDPOSTSUPDATED\") {\n    return _objectSpread({}, state, {\n      likedPosts: action.likedPosts\n    });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/reducers/generalReducer.js"],"names":["initialState","loggedIn","signupOpen","loginOpen","contactUsOpen","shareOpen","username","userID","likes","likedPosts","comments","replies","myPosts","reducer","state","action","type","tempComments","tempReplies","blog","map","comment","clone","push","length","commentRef","_id","temp","console","log","reply","tempLikes","hits","hit","objectID","delta","liked","newLikePosts","filter","post","id"],"mappings":"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","sourcesContent":["const initialState = {\n  loggedIn: false,\n  signupOpen: false,\n  loginOpen: false,\n  contactUsOpen: false,\n  shareOpen:false,\n  username: \"\",\n  userID: \"\",\n  likes: {},\n  likedPosts: [],\n  comments: [],\n  replies: [],\n  myPosts: []\n};\n\nconst reducer = (state = initialState, action) => {\n  if (action.type === \"LOGIN\") {\n    return {\n      ...state,\n      loggedIn: true,\n      userID: action.userID,\n      username: action.username,\n      likedPosts: action.likedPosts,\n      myPosts: action.myPosts\n    };\n  }\n  if (action.type === \"LOGOUT\") {\n    return {\n      ...state,\n      loggedIn: false,\n      username: \"\",\n      userID: \"\"\n    };\n  }\n  if (action.type === \"SIGNUPMODAL\") {\n    //Here, after submit or even close, we\n    //will redirect to login modal\n\n    return {\n      ...state,\n      loginOpen: state.signupOpen,\n      signupOpen: !state.signupOpen\n    };\n  }\n  if (action.type === \"LOGINMODAL\") {\n    return {\n      ...state,\n      loginOpen: !state.loginOpen\n    };\n  }\n  if (action.type === \"CONTACTMODAL\") {\n    return {\n      ...state,\n      contactUsOpen: !state.contactUsOpen\n    };\n  }\n  if (action.type === \"SHAREMODAL\") {\n    return {\n      ...state,\n      shareOpen: !state.shareOpen\n    }\n  }\n  if (action.type === \"GETBLOG\") {\n    let tempComments = [];\n    let tempReplies = [];\n    action.blog.comments.map(comment => {\n      const { replies, ...clone } = comment;\n      tempComments.push({ ...clone });\n      if (replies.length > 0) {\n        tempReplies.push({ ...replies[0], commentRef: comment._id });\n      }\n    });\n\n    return {\n      ...state,\n      comments: tempComments,\n      replies: tempReplies\n    };\n  }\n  if (action.type === \"ADDCOMMENT\") {\n    let temp = [...state.comments];\n    temp.push(action.comment);\n    console.log(action.comment);\n\n    return {\n      ...state,\n      comments: temp\n    };\n  }\n\n  if (action.type === \"ADDREPLY\") {\n    let temp = [...state.replies];\n    temp.push(action.reply);\n\n    return {\n      ...state,\n      replies: temp\n    };\n  }\n  if (action.type === \"GETHITS\") {\n    let tempLikes = { ...state.likes };\n\n    action.hits.map(hit => {\n      //if the hit not in current memory, then we use the data\n      if (!(hit.objectID in tempLikes)) {\n        tempLikes[hit.objectID] = hit.likes;\n      }\n    });\n\n    return {\n      ...state,\n      likes: tempLikes\n    };\n  }\n  if (action.type === \"HANDLELIKE\") {\n    const delta = action.liked ? -1 : 1;\n    let newLikePosts = [...state.likedPosts];\n    action.liked\n      ? (newLikePosts = newLikePosts.filter(post => post !== action.id))\n      : newLikePosts.push(action.id);\n    return {\n      ...state,\n      likes: { ...state.likes, [action.id]: state.likes[action.id] + delta },\n      likedPosts: newLikePosts\n    };\n  }\n  if (action.type === \"PUBLISHEDNEWPOST\") {\n    return {\n      ...state,\n      myPosts: action.myPosts\n    };\n  }\n  if (action.type === \"USERLIKEDPOSTSUPDATED\") {\n    return {\n      ...state,\n      likedPosts: action.likedPosts\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}