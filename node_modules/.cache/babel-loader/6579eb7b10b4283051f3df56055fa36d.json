{"ast":null,"code":"import _objectWithoutProperties from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/hantaoliu/Projects/Learning-Platform/techleak/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nconst initialState = {\n  loggedIn: false,\n  signupOpen: false,\n  loginOpen: false,\n  contactUsOpen: false,\n  username: \"\",\n  userID: \"\",\n  likes: {},\n  likedPosts: [],\n  comments: [],\n  replies: [],\n  myPosts: []\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(\"3\");\n\n  if (action.type === \"LOGIN\") {\n    return _objectSpread({}, state, {\n      loggedIn: true,\n      userID: action.userID,\n      username: action.username,\n      likedPosts: action.likedPosts,\n      myPosts: action.myPosts\n    });\n  }\n\n  if (action.type === \"LOGOUT\") {\n    return _objectSpread({}, state, {\n      loggedIn: false,\n      username: \"\"\n    });\n  }\n\n  if (action.type === \"SIGNUPMODAL\") {\n    //Here, after submit or even close, we\n    //will redirect to login modal\n    return _objectSpread({}, state, {\n      loginOpen: state.signupOpen,\n      signupOpen: !state.signupOpen\n    });\n  }\n\n  if (action.type === \"LOGINMODAL\") {\n    return _objectSpread({}, state, {\n      loginOpen: !state.loginOpen\n    });\n  }\n\n  if (action.type === \"CONTACTMODAL\") {\n    return _objectSpread({}, state, {\n      contactUsOpen: !state.contactUsOpen\n    });\n  }\n\n  if (action.type === \"GETBLOG\") {\n    let tempComments = [];\n    let tempReplies = [];\n    action.blog.comments.map(comment => {\n      const replies = comment.replies,\n            clone = _objectWithoutProperties(comment, [\"replies\"]);\n\n      tempComments.push(_objectSpread({}, clone));\n\n      if (replies.length > 0) {\n        tempReplies.push(_objectSpread({}, replies[0], {\n          commentRef: comment._id\n        }));\n      }\n    });\n    return _objectSpread({}, state, {\n      comments: tempComments,\n      replies: tempReplies\n    });\n  }\n\n  if (action.type === \"ADDCOMMENT\") {\n    let temp = [...state.comments];\n    temp.push(action.comment);\n    return _objectSpread({}, state, {\n      comments: temp\n    });\n  }\n\n  if (action.type === \"ADDREPLY\") {\n    let temp = [...state.replies];\n    temp.push(action.reply);\n    return _objectSpread({}, state, {\n      replies: temp\n    });\n  }\n\n  if (action.type === \"GETHITS\") {\n    let tempLikes = _objectSpread({}, state.likes);\n\n    action.hits.map(hit => {\n      //if the hit not in current memory, then we use the data\n      if (!(hit.objectID in tempLikes)) {\n        tempLikes[hit.objectID] = hit.likes;\n      }\n    });\n    return _objectSpread({}, state, {\n      likes: tempLikes\n    });\n  }\n\n  if (action.type === \"HANDLELIKE\") {\n    const delta = action.liked ? -1 : 1;\n    let newLikePosts = [...state.likedPosts];\n    action.liked ? newLikePosts = newLikePosts.filter(post => post !== action.id) : newLikePosts.push(action.id);\n    return _objectSpread({}, state, {\n      likes: _objectSpread({}, state.likes, {\n        [action.id]: state.likes[action.id] + delta\n      }),\n      likedPosts: newLikePosts\n    });\n  }\n\n  if (action.type === \"PUBLISHEDNEWPOST\") {\n    return _objectSpread({}, state, {\n      myPosts: action.myPosts\n    });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/hantaoliu/Projects/Learning-Platform/techleak/client/src/reducers/generalReducer.js"],"names":["initialState","loggedIn","signupOpen","loginOpen","contactUsOpen","username","userID","likes","likedPosts","comments","replies","myPosts","reducer","state","action","console","log","type","tempComments","tempReplies","blog","map","comment","clone","push","length","commentRef","_id","temp","reply","tempLikes","hits","hit","objectID","delta","liked","newLikePosts","filter","post","id"],"mappings":";;AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,KADS;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,aAAa,EAAE,KAJI;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,MAAM,EAAE,EANW;AAOnBC,EAAAA,KAAK,EAAE,EAPY;AAQnBC,EAAAA,UAAU,EAAE,EARO;AASnBC,EAAAA,QAAQ,EAAE,EATS;AAUnBC,EAAAA,OAAO,EAAE,EAVU;AAWnBC,EAAAA,OAAO,EAAE;AAXU,CAArB;;AAcA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AACA,MAAIF,MAAM,CAACG,IAAP,KAAgB,OAApB,EAA6B;AAC3B,6BACKJ,KADL;AAEEZ,MAAAA,QAAQ,EAAE,IAFZ;AAGEK,MAAAA,MAAM,EAAEQ,MAAM,CAACR,MAHjB;AAIED,MAAAA,QAAQ,EAAES,MAAM,CAACT,QAJnB;AAKEG,MAAAA,UAAU,EAAEM,MAAM,CAACN,UALrB;AAMEG,MAAAA,OAAO,EAAEG,MAAM,CAACH;AANlB;AAQD;;AACD,MAAIG,MAAM,CAACG,IAAP,KAAgB,QAApB,EAA8B;AAC5B,6BACKJ,KADL;AAEEZ,MAAAA,QAAQ,EAAE,KAFZ;AAGEI,MAAAA,QAAQ,EAAE;AAHZ;AAKD;;AACD,MAAIS,MAAM,CAACG,IAAP,KAAgB,aAApB,EAAmC;AACjC;AACA;AAEA,6BACKJ,KADL;AAEEV,MAAAA,SAAS,EAAEU,KAAK,CAACX,UAFnB;AAGEA,MAAAA,UAAU,EAAE,CAACW,KAAK,CAACX;AAHrB;AAKD;;AACD,MAAIY,MAAM,CAACG,IAAP,KAAgB,YAApB,EAAkC;AAChC,6BACKJ,KADL;AAEEV,MAAAA,SAAS,EAAE,CAACU,KAAK,CAACV;AAFpB;AAID;;AACD,MAAIW,MAAM,CAACG,IAAP,KAAgB,cAApB,EAAoC;AAClC,6BACKJ,KADL;AAEET,MAAAA,aAAa,EAAE,CAACS,KAAK,CAACT;AAFxB;AAID;;AACD,MAAIU,MAAM,CAACG,IAAP,KAAgB,SAApB,EAA+B;AAC7B,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACAL,IAAAA,MAAM,CAACM,IAAP,CAAYX,QAAZ,CAAqBY,GAArB,CAAyBC,OAAO,IAAI;AAAA,YAC1BZ,OAD0B,GACJY,OADI,CAC1BZ,OAD0B;AAAA,YACda,KADc,4BACJD,OADI;;AAElCJ,MAAAA,YAAY,CAACM,IAAb,mBAAuBD,KAAvB;;AACA,UAAIb,OAAO,CAACe,MAAR,GAAiB,CAArB,EAAwB;AACtBN,QAAAA,WAAW,CAACK,IAAZ,mBAAsBd,OAAO,CAAC,CAAD,CAA7B;AAAkCgB,UAAAA,UAAU,EAAEJ,OAAO,CAACK;AAAtD;AACD;AACF,KAND;AAQA,6BACKd,KADL;AAEEJ,MAAAA,QAAQ,EAAES,YAFZ;AAGER,MAAAA,OAAO,EAAES;AAHX;AAKD;;AACD,MAAIL,MAAM,CAACG,IAAP,KAAgB,YAApB,EAAkC;AAChC,QAAIW,IAAI,GAAG,CAAC,GAAGf,KAAK,CAACJ,QAAV,CAAX;AACAmB,IAAAA,IAAI,CAACJ,IAAL,CAAUV,MAAM,CAACQ,OAAjB;AAEA,6BACKT,KADL;AAEEJ,MAAAA,QAAQ,EAAEmB;AAFZ;AAID;;AAED,MAAId,MAAM,CAACG,IAAP,KAAgB,UAApB,EAAgC;AAC9B,QAAIW,IAAI,GAAG,CAAC,GAAGf,KAAK,CAACH,OAAV,CAAX;AACAkB,IAAAA,IAAI,CAACJ,IAAL,CAAUV,MAAM,CAACe,KAAjB;AAEA,6BACKhB,KADL;AAEEH,MAAAA,OAAO,EAAEkB;AAFX;AAID;;AACD,MAAId,MAAM,CAACG,IAAP,KAAgB,SAApB,EAA+B;AAC7B,QAAIa,SAAS,qBAAQjB,KAAK,CAACN,KAAd,CAAb;;AAEAO,IAAAA,MAAM,CAACiB,IAAP,CAAYV,GAAZ,CAAgBW,GAAG,IAAI;AACrB;AACA,UAAI,EAAEA,GAAG,CAACC,QAAJ,IAAgBH,SAAlB,CAAJ,EAAkC;AAChCA,QAAAA,SAAS,CAACE,GAAG,CAACC,QAAL,CAAT,GAA0BD,GAAG,CAACzB,KAA9B;AACD;AACF,KALD;AAOA,6BACKM,KADL;AAEEN,MAAAA,KAAK,EAAEuB;AAFT;AAID;;AACD,MAAIhB,MAAM,CAACG,IAAP,KAAgB,YAApB,EAAkC;AAChC,UAAMiB,KAAK,GAAGpB,MAAM,CAACqB,KAAP,GAAe,CAAC,CAAhB,GAAoB,CAAlC;AACA,QAAIC,YAAY,GAAG,CAAC,GAAGvB,KAAK,CAACL,UAAV,CAAnB;AACAM,IAAAA,MAAM,CAACqB,KAAP,GACKC,YAAY,GAAGA,YAAY,CAACC,MAAb,CAAoBC,IAAI,IAAIA,IAAI,KAAKxB,MAAM,CAACyB,EAA5C,CADpB,GAEIH,YAAY,CAACZ,IAAb,CAAkBV,MAAM,CAACyB,EAAzB,CAFJ;AAIA,6BACK1B,KADL;AAEEN,MAAAA,KAAK,oBAAOM,KAAK,CAACN,KAAb;AAAoB,SAACO,MAAM,CAACyB,EAAR,GAAa1B,KAAK,CAACN,KAAN,CAAYO,MAAM,CAACyB,EAAnB,IAAyBL;AAA1D,QAFP;AAGE1B,MAAAA,UAAU,EAAE4B;AAHd;AAKD;;AACD,MAAItB,MAAM,CAACG,IAAP,KAAgB,kBAApB,EAAwC;AACtC,6BACKJ,KADL;AAEEF,MAAAA,OAAO,EAAEG,MAAM,CAACH;AAFlB;AAID;;AAED,SAAOE,KAAP;AACD,CAjHD;;AAmHA,eAAeD,OAAf","sourcesContent":["const initialState = {\n  loggedIn: false,\n  signupOpen: false,\n  loginOpen: false,\n  contactUsOpen: false,\n  username: \"\",\n  userID: \"\",\n  likes: {},\n  likedPosts: [],\n  comments: [],\n  replies: [],\n  myPosts: []\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(\"3\");\n  if (action.type === \"LOGIN\") {\n    return {\n      ...state,\n      loggedIn: true,\n      userID: action.userID,\n      username: action.username,\n      likedPosts: action.likedPosts,\n      myPosts: action.myPosts\n    };\n  }\n  if (action.type === \"LOGOUT\") {\n    return {\n      ...state,\n      loggedIn: false,\n      username: \"\"\n    };\n  }\n  if (action.type === \"SIGNUPMODAL\") {\n    //Here, after submit or even close, we\n    //will redirect to login modal\n\n    return {\n      ...state,\n      loginOpen: state.signupOpen,\n      signupOpen: !state.signupOpen\n    };\n  }\n  if (action.type === \"LOGINMODAL\") {\n    return {\n      ...state,\n      loginOpen: !state.loginOpen\n    };\n  }\n  if (action.type === \"CONTACTMODAL\") {\n    return {\n      ...state,\n      contactUsOpen: !state.contactUsOpen\n    };\n  }\n  if (action.type === \"GETBLOG\") {\n    let tempComments = [];\n    let tempReplies = [];\n    action.blog.comments.map(comment => {\n      const { replies, ...clone } = comment;\n      tempComments.push({ ...clone });\n      if (replies.length > 0) {\n        tempReplies.push({ ...replies[0], commentRef: comment._id });\n      }\n    });\n\n    return {\n      ...state,\n      comments: tempComments,\n      replies: tempReplies\n    };\n  }\n  if (action.type === \"ADDCOMMENT\") {\n    let temp = [...state.comments];\n    temp.push(action.comment);\n\n    return {\n      ...state,\n      comments: temp\n    };\n  }\n\n  if (action.type === \"ADDREPLY\") {\n    let temp = [...state.replies];\n    temp.push(action.reply);\n\n    return {\n      ...state,\n      replies: temp\n    };\n  }\n  if (action.type === \"GETHITS\") {\n    let tempLikes = { ...state.likes };\n\n    action.hits.map(hit => {\n      //if the hit not in current memory, then we use the data\n      if (!(hit.objectID in tempLikes)) {\n        tempLikes[hit.objectID] = hit.likes;\n      }\n    });\n\n    return {\n      ...state,\n      likes: tempLikes\n    };\n  }\n  if (action.type === \"HANDLELIKE\") {\n    const delta = action.liked ? -1 : 1;\n    let newLikePosts = [...state.likedPosts];\n    action.liked\n      ? (newLikePosts = newLikePosts.filter(post => post !== action.id))\n      : newLikePosts.push(action.id);\n\n    return {\n      ...state,\n      likes: { ...state.likes, [action.id]: state.likes[action.id] + delta },\n      likedPosts: newLikePosts\n    };\n  }\n  if (action.type === \"PUBLISHEDNEWPOST\") {\n    return {\n      ...state,\n      myPosts: action.myPosts\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}